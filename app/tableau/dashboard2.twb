<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.1119.0945                               -->
<workbook original-version='18.1' source-build='2018.2.4 (20182.18.1119.0945)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='j2q_s2s' inline='true' name='federated.08z8cau0l8uma31f9yaz11536eoq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='j2q_s2s' name='textscan.19gf9ei04b6q3l14ku5ks16w7sij'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='j2q_s2s.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.19gf9ei04b6q3l14ku5ks16w7sij' name='j2q_s2s.csv' table='[j2q_s2s#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='hist_average' ordinal='1' />
            <column datatype='real' name='volume_per_day' ordinal='2' />
            <column datatype='real' name='jita_price_min_sell' ordinal='3' />
            <column datatype='real' name='qrf_price_min_sell' ordinal='4' />
            <column datatype='integer' name='qrf_volume_remain_sum_sell' ordinal='5' />
            <column datatype='string' name='group_name' ordinal='6' />
            <column datatype='string' name='cat_name' ordinal='7' />
            <column datatype='integer' name='type_id' ordinal='8' />
            <column datatype='real' name='est_n_sell_price' ordinal='9' />
            <column datatype='real' name='gap' ordinal='10' />
            <column datatype='real' name='gap2' ordinal='11' />
            <column datatype='real' name='est_margin' ordinal='12' />
            <column datatype='real' name='est_profit_per_week' ordinal='13' />
            <column datatype='real' name='est_profit' ordinal='14' />
            <column datatype='real' name='packaged_volume' ordinal='15' />
            <column datatype='integer' name='metalevel' ordinal='16' />
            <column datatype='integer' name='jita_volume_remain_sell' ordinal='17' />
            <column datatype='real' name='lowest' ordinal='18' />
            <column datatype='string' name='type_id-1' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hist_average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hist_average]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>hist_average</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume_per_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume_per_day]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>volume_per_day</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_min_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>jita_price_min_sell</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qrf_price_min_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>qrf_price_min_sell</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_volume_remain_sum_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qrf_volume_remain_sum_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>qrf_volume_remain_sum_sell</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_n_sell_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_n_sell_price]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_n_sell_price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>gap</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap2]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>gap2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_margin]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_margin</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit_per_week</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit_per_week]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_profit_per_week</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_profit</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>jita_volume_remain_sell</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lowest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lowest]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>lowest</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id-1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_id-1]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>type_id-1</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Est Margin' datatype='real' name='[est_margin]' role='measure' type='quantitative' />
      <column caption='Est N Sell Price' datatype='real' name='[est_n_sell_price]' role='measure' type='quantitative' />
      <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
      <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
      <column caption='Gap2' datatype='real' name='[gap2]' role='measure' type='quantitative' />
      <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Jita Price Min Sell' datatype='real' name='[jita_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sell' datatype='integer' name='[jita_volume_remain_sell]' role='measure' type='quantitative' />
      <column caption='Lowest' datatype='real' name='[lowest]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
      <column caption='Type Id-1' datatype='string' name='[type_id-1]' role='dimension' type='nominal' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <column caption='Volume Per Day' datatype='real' name='[volume_per_day]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.33429' measure-ordering='alphabetic' measure-percentage='0.66571' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='Contract_views' inline='true' name='federated.169bz8i1u6plju1ayyigc0milosa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Contract_views' name='textscan.0qf5uuw15w5i581apyy971g5s4zv'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='Contract_views.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0qf5uuw15w5i581apyy971g5s4zv' name='Contract_views.csv' table='[Contract_views#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='ship_name' ordinal='0' />
            <column datatype='real' name='contract_price_min' ordinal='1' />
            <column datatype='real' name='contract_price_jita_p5' ordinal='2' />
            <column datatype='real' name='margin_contract' ordinal='3' />
            <column datatype='string' name='title' ordinal='4' />
            <column datatype='string' name='title - Split 1' ordinal='5' />
            <column datatype='integer' name='issuer_id' ordinal='6' />
            <column datatype='integer' name='location_id' ordinal='7' />
            <column datatype='integer' name='number of Contracts' ordinal='8' />
            <column datatype='integer' name='type_id' ordinal='9' />
            <column datatype='string' name='group_name' ordinal='10' />
            <column datatype='string' name='location_name' ordinal='11' />
            <column datatype='integer' name='system_id' ordinal='12' />
            <column datatype='string' name='pos_type' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
            <column datatype='datetime' name='last_update' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ship_name]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>ship_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contract_price_min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contract_price_min]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>contract_price_min</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contract_price_jita_p5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contract_price_jita_p5]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>contract_price_jita_p5</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_contract</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_contract]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>margin_contract</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title - Split 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title - Split 1]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>title - Split 1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issuer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[issuer_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>issuer_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[location_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>location_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number of Contracts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number of Contracts]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>number of Contracts</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_name]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>location_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>system_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[system_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>system_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pos_type]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>pos_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>135</remote-type>
            <local-name>[last_update]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' caption='Contract Price Jita P5' datatype='real' name='[contract_price_jita_p5]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Issuer Id' datatype='integer' name='[issuer_id]' role='dimension' type='ordinal' />
      <column caption='Location Id' datatype='integer' name='[location_id]' role='dimension' type='ordinal' />
      <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
      <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
      <column caption='Pos Type' datatype='string' name='[pos_type]' role='dimension' type='nominal' />
      <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
      <column caption='System Id' datatype='integer' name='[system_id]' role='dimension' type='ordinal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column-instance column='[contract_price_jita_p5]' derivation='Avg' name='[avg:contract_price_jita_p5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
      <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
      <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.606887' measure-ordering='alphabetic' measure-percentage='0.393113' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:group_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Corvette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Assault Frigate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Interdictor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Combat Battlecruiser&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shuttle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Electronic Attack Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruiser&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Combat Recon Ship&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stealth Bomber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Attack Battlecruiser&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logistics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavy Assault Cruiser&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Command Destroyer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Strategic Cruiser&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Expedition Frigate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Force Recon Ship&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heavy Interdiction Cruiser&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Interceptor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deep Space Transport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Command Ship&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tactical Destroyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Battleship&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Logistics Frigate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frigate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Destroyer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black Ops&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mining Barge&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='cut_orders_qrf' inline='true' name='federated.0jffld41ds8t2d11njoru04hv3mk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cut_orders_qrf' name='textscan.1k358c10kixxa51701ace1958h3p'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='cut_orders_qrf.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1k358c10kixxa51701ace1958h3p' name='cut_orders_qrf.csv' table='[cut_orders_qrf#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='cutting' ordinal='1' />
            <column datatype='real' name='qrf_price_min_sell' ordinal='2' />
            <column datatype='real' name='my_price' ordinal='3' />
            <column datatype='integer' name='qrf_volume_remain_sum_sell' ordinal='4' />
            <column datatype='string' name='group_name' ordinal='5' />
            <column datatype='string' name='cat_name' ordinal='6' />
            <column datatype='integer' name='type_id' ordinal='7' />
            <column datatype='real' name='packaged_volume' ordinal='8' />
            <column datatype='integer' name='metalevel' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cutting</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cutting]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>cutting</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qrf_price_min_sell]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>qrf_price_min_sell</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>my_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[my_price]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>my_price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_volume_remain_sum_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qrf_volume_remain_sum_sell]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>qrf_volume_remain_sum_sell</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Cutting' datatype='real' name='[cutting]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='My Price' datatype='real' name='[my_price]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.454806' measure-ordering='alphabetic' measure-percentage='0.545194' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='q2j_s2b' inline='true' name='federated.0bf4zq01ej602x1fpu3ah0gozpjk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='q2j_s2b' name='textscan.1eiiyyb0gxwqm21anjtvi1tixfj7'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='q2j_s2b.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1eiiyyb0gxwqm21anjtvi1tixfj7' name='q2j_s2b.csv' table='[q2j_s2b#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='qrf_price_min_sell' ordinal='1' />
            <column datatype='integer' name='qrf_volume_remain_sum_sell' ordinal='2' />
            <column datatype='string' name='group_name' ordinal='3' />
            <column datatype='string' name='cat_name' ordinal='4' />
            <column datatype='real' name='jita_price_max_buy' ordinal='5' />
            <column datatype='real' name='ava_total_profit' ordinal='6' />
            <column datatype='integer' name='ava_volume' ordinal='7' />
            <column datatype='real' name='margin_as' ordinal='8' />
            <column datatype='integer' name='type_id' ordinal='9' />
            <column datatype='real' name='profit_as' ordinal='10' />
            <column datatype='real' name='profit_raw' ordinal='11' />
            <column datatype='integer' name='jita_volume_remain_sum_buy' ordinal='12' />
            <column datatype='real' name='packaged_volume' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qrf_price_min_sell]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>qrf_price_min_sell</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_volume_remain_sum_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qrf_volume_remain_sum_sell]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>qrf_volume_remain_sum_sell</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_max_buy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_max_buy]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>jita_price_max_buy</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_total_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ava_total_profit]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>ava_total_profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ava_volume]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>ava_volume</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_as]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>margin_as</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_as]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>profit_as</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_raw]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>profit_raw</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sum_buy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sum_buy]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>jita_volume_remain_sum_buy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
      <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
      <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
      <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
      <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.380201' measure-ordering='alphabetic' measure-percentage='0.619799' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='o2j_s2b' inline='true' name='federated.00z59ch1vx6htb1g6lq1v1lkt7f3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='o2j_s2b' name='textscan.0eciu4q1mc3muv1993tnl122qxay'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='o2j_s2b.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0eciu4q1mc3muv1993tnl122qxay' name='o2j_s2b.csv' table='[o2j_s2b#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='string' name='group_name' ordinal='1' />
            <column datatype='string' name='cat_name' ordinal='2' />
            <column datatype='real' name='o3_price_min_sell' ordinal='3' />
            <column datatype='real' name='jita_price_max_buy' ordinal='4' />
            <column datatype='real' name='margin_as' ordinal='5' />
            <column datatype='integer' name='ava_volume' ordinal='6' />
            <column datatype='real' name='ava_total_profit' ordinal='7' />
            <column datatype='real' name='profit_as' ordinal='8' />
            <column datatype='real' name='profit_raw' ordinal='9' />
            <column datatype='integer' name='type_id' ordinal='10' />
            <column datatype='integer' name='jita_volume_remain_sum_buy' ordinal='11' />
            <column datatype='integer' name='type_id-1' ordinal='12' />
            <column datatype='real' name='packaged_volume' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
            <column datatype='integer' name='o3_volume_remain_sell' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>o3_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[o3_price_min_sell]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>o3_price_min_sell</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_max_buy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_max_buy]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>jita_price_max_buy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_as]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>margin_as</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ava_volume]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>ava_volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_total_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ava_total_profit]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>ava_total_profit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_as]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>profit_as</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_raw]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>profit_raw</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sum_buy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sum_buy]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>jita_volume_remain_sum_buy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id-1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id-1]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>type_id-1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>o3_volume_remain_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[o3_volume_remain_sell]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>o3_volume_remain_sell</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
      <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
      <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='O3 Price Min Sell' datatype='real' name='[o3_price_min_sell]' role='measure' type='quantitative' />
      <column caption='O3 Volume Remain Sell' datatype='integer' name='[o3_volume_remain_sell]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
      <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
      <column caption='Type Id-1' datatype='integer' name='[type_id-1]' role='dimension' type='ordinal' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.394548' measure-ordering='alphabetic' measure-percentage='0.605452' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='tad_wal_tran+ (neweden)' inline='true' name='federated.0t4qeay1w434k01gll8gp0befrpd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1q1qhtf0bw8k9c1cxxdbj08vspnb'>
            <connection authentication='username-password' class='postgres' dbname='neweden' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[tad_wal_tran].[type_id]' />
              <expression op='[universe_ids].[type_id]' />
            </expression>
          </clause>
          <relation connection='postgres.1q1qhtf0bw8k9c1cxxdbj08vspnb' name='tad_wal_tran' table='[public].[tad_wal_tran]' type='table' />
          <relation connection='postgres.1q1qhtf0bw8k9c1cxxdbj08vspnb' name='universe_ids' table='[public].[universe_ids]' type='table' />
        </relation>
        <cols>
          <map key='[cat_name]' value='[universe_ids].[cat_name]' />
          <map key='[category_id]' value='[universe_ids].[category_id]' />
          <map key='[client_id]' value='[tad_wal_tran].[client_id]' />
          <map key='[date]' value='[tad_wal_tran].[date]' />
          <map key='[group_id]' value='[universe_ids].[group_id]' />
          <map key='[group_name]' value='[universe_ids].[group_name]' />
          <map key='[is_buy]' value='[tad_wal_tran].[is_buy]' />
          <map key='[is_personal]' value='[tad_wal_tran].[is_personal]' />
          <map key='[journal_ref_id]' value='[tad_wal_tran].[journal_ref_id]' />
          <map key='[location_id]' value='[tad_wal_tran].[location_id]' />
          <map key='[metagroup]' value='[universe_ids].[metagroup]' />
          <map key='[metalevel]' value='[universe_ids].[metalevel]' />
          <map key='[operator]' value='[tad_wal_tran].[operator]' />
          <map key='[packaged_volume]' value='[universe_ids].[packaged_volume]' />
          <map key='[quantity]' value='[tad_wal_tran].[quantity]' />
          <map key='[techlevel]' value='[universe_ids].[techlevel]' />
          <map key='[tid]' value='[tad_wal_tran].[tid]' />
          <map key='[transaction_id]' value='[tad_wal_tran].[transaction_id]' />
          <map key='[type_id (universe_ids)]' value='[universe_ids].[type_id]' />
          <map key='[type_id]' value='[tad_wal_tran].[type_id]' />
          <map key='[type_name]' value='[universe_ids].[type_name]' />
          <map key='[unit_price]' value='[tad_wal_tran].[unit_price]' />
          <map key='[volume]' value='[universe_ids].[volume]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>3</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>client_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[client_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>client_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_buy</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_buy]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>is_buy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_personal</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_personal]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>is_personal</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>journal_ref_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[journal_ref_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>journal_ref_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[location_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>location_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transaction_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[transaction_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>transaction_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_price]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>unit_price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tid]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>tid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id (universe_ids)]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[group_id]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>group_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>techlevel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[techlevel]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>techlevel</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metagroup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metagroup]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>metagroup</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Client Id' datatype='integer' name='[client_id]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Group Id' datatype='integer' name='[group_id]' role='dimension' type='ordinal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Is Buy' datatype='boolean' name='[is_buy]' role='dimension' type='nominal' />
      <column caption='Is Personal' datatype='boolean' name='[is_personal]' role='dimension' type='nominal' />
      <column caption='Journal Ref Id' datatype='integer' name='[journal_ref_id]' role='dimension' type='ordinal' />
      <column caption='Location Id' datatype='integer' name='[location_id]' role='dimension' type='ordinal' />
      <column caption='Metagroup' datatype='real' name='[metagroup]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='real' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='integer' name='[operator]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
      <column caption='Techlevel' datatype='real' name='[techlevel]' role='measure' type='quantitative' />
      <column caption='Tid' datatype='integer' name='[tid]' role='measure' type='quantitative' />
      <column caption='Transaction Id' datatype='integer' name='[transaction_id]' role='dimension' type='ordinal' />
      <column caption='Type Id (Universe Ids)' datatype='integer' name='[type_id (universe_ids)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[unit_price]' role='measure' type='quantitative' />
      <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.563609' measure-ordering='alphabetic' measure-percentage='0.436391' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='j2d_s2s' inline='true' name='federated.1hjlk3x190aifh1cn197u1h7l58h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='j2d_s2s' name='textscan.1r5y9bf1kn2pb51duy42x0uqxzup'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='j2d_s2s.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1r5y9bf1kn2pb51duy42x0uqxzup' name='j2d_s2s.csv' table='[j2d_s2s#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='est_n_s_price' ordinal='1' />
            <column datatype='real' name='dt_price_min' ordinal='2' />
            <column datatype='real' name='hist_average' ordinal='3' />
            <column datatype='real' name='volume_per_day' ordinal='4' />
            <column datatype='real' name='est_profit_per_week' ordinal='5' />
            <column datatype='real' name='est_profit_per_m3' ordinal='6' />
            <column datatype='real' name='gap_margin' ordinal='7' />
            <column datatype='real' name='jita_price_min_sell' ordinal='8' />
            <column datatype='real' name='est_margin' ordinal='9' />
            <column datatype='real' name='gap' ordinal='10' />
            <column datatype='real' name='est_profit' ordinal='11' />
            <column datatype='integer' name='type_id' ordinal='12' />
            <column datatype='string' name='group_name' ordinal='13' />
            <column datatype='string' name='cat_name' ordinal='14' />
            <column datatype='real' name='packaged_volume' ordinal='15' />
            <column datatype='integer' name='metalevel' ordinal='16' />
            <column datatype='integer' name='jita_volume_remain_sell' ordinal='17' />
            <column datatype='real' name='lowest' ordinal='18' />
            <column datatype='integer' name='dt_volume_remain' ordinal='19' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_n_s_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_n_s_price]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>est_n_s_price</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt_price_min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dt_price_min]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>dt_price_min</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hist_average</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hist_average]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>hist_average</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume_per_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume_per_day]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>volume_per_day</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit_per_week</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit_per_week]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>est_profit_per_week</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit_per_m3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit_per_m3]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>est_profit_per_m3</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap_margin]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>gap_margin</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_min_sell]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>jita_price_min_sell</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_margin]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>est_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>gap</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>est_profit</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sell]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>jita_volume_remain_sell</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lowest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lowest]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>lowest</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dt_volume_remain</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dt_volume_remain]</local-name>
            <parent-name>[j2d_s2s.csv]</parent-name>
            <remote-alias>dt_volume_remain</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Dt Price Min' datatype='real' name='[dt_price_min]' role='measure' type='quantitative' />
      <column caption='Dt Volume Remain' datatype='integer' name='[dt_volume_remain]' role='measure' type='quantitative' />
      <column caption='Est Margin' datatype='real' name='[est_margin]' role='measure' type='quantitative' />
      <column caption='Est N S Price' datatype='real' name='[est_n_s_price]' role='measure' type='quantitative' />
      <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
      <column caption='Est Profit Per M3' datatype='real' name='[est_profit_per_m3]' role='measure' type='quantitative' />
      <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
      <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
      <column caption='Gap Margin' datatype='real' name='[gap_margin]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Hist Average' datatype='real' name='[hist_average]' role='measure' type='quantitative' />
      <column caption='Jita Price Min Sell' datatype='real' name='[jita_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sell' datatype='integer' name='[jita_volume_remain_sell]' role='measure' type='quantitative' />
      <column caption='Lowest' datatype='real' name='[lowest]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <column caption='Volume Per Day' datatype='real' name='[volume_per_day]' role='measure' type='quantitative' />
      <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Cat Name,Type Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:cat_name:nk]' />
          <groupfilter function='level-members' level='[none:type_name:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.360947' measure-ordering='alphabetic' measure-percentage='0.639053' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:cat_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Infrastructure Upgrades&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Asteroid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Commodity&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Material&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Drone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Blueprint&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fighter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Structure&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Module&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Implant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Celestial&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Planetary Resources&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Charge&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='contracts_all'>
      <table>
        <view>
          <datasources>
            <datasource caption='Contract_views' name='federated.169bz8i1u6plju1ayyigc0milosa' />
          </datasources>
          <datasource-dependencies datasource='federated.169bz8i1u6plju1ayyigc0milosa'>
            <column-instance column='[issuer_id]' derivation='Attribute' name='[attr:issuer_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[contract_price_jita_p5]' derivation='Avg' name='[avg:contract_price_jita_p5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Jita P5' datatype='real' name='[contract_price_jita_p5]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
            <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
            <column caption='Issuer Id' datatype='integer' name='[issuer_id]' role='dimension' type='ordinal' />
            <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_name]' derivation='None' name='[none:location_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ship_name]' derivation='None' name='[none:ship_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title - Split 1]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]'>
            <groupfilter function='level-members' level='[none:group_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]'>
            <groupfilter function='member' level='[none:location_name:nk]' member='&quot;QRFJ-Q - WC starcity&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]'>
            <groupfilter function='level-members' level='[none:metalevel:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' direction='DESC' using='[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]' />
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]'>
            <groupfilter function='level-members' level='[none:title - Split 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.169bz8i1u6plju1ayyigc0milosa].[attr:title:nk]' />
              <tooltip column='[federated.169bz8i1u6plju1ayyigc0milosa].[attr:issuer_id:ok]' />
              <text column='[federated.169bz8i1u6plju1ayyigc0milosa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk] / [federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk])</rows>
        <cols>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='contracts_my'>
      <table>
        <view>
          <datasources>
            <datasource caption='Contract_views' name='federated.169bz8i1u6plju1ayyigc0milosa' />
          </datasources>
          <datasource-dependencies datasource='federated.169bz8i1u6plju1ayyigc0milosa'>
            <column-instance column='[contract_price_jita_p5]' derivation='Avg' name='[avg:contract_price_jita_p5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Jita P5' datatype='real' name='[contract_price_jita_p5]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
            <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
            <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_name]' derivation='None' name='[none:location_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ship_name]' derivation='None' name='[none:ship_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title - Split 1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Electronic Attack Ship&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Expedition Frigate&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Force Recon Ship&quot;' />
              <groupfilter from='&quot;Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Tactical Destroyer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]'>
            <groupfilter function='member' level='[none:location_name:nk]' member='&quot;QRFJ-Q - WC starcity&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]'>
            <groupfilter from='0' function='range' level='[none:metalevel:ok]' to='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' direction='DESC' using='[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]' />
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]'>
            <groupfilter function='member' level='[none:title - Split 1:nk]' member='&quot;ArtExpress&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.169bz8i1u6plju1ayyigc0milosa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</rows>
        <cols>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='contracts_my (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Contract_views' name='federated.169bz8i1u6plju1ayyigc0milosa' />
          </datasources>
          <datasource-dependencies datasource='federated.169bz8i1u6plju1ayyigc0milosa'>
            <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
            <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
            <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_name]' derivation='None' name='[none:location_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ship_name]' derivation='None' name='[none:ship_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title - Split 1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Electronic Attack Ship&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Expedition Frigate&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Force Recon Ship&quot;' />
              <groupfilter from='&quot;Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Tactical Destroyer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]'>
            <groupfilter function='member' level='[none:location_name:nk]' member='&quot;QRFJ-Q - WC starcity&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]'>
            <groupfilter from='0' function='range' level='[none:metalevel:ok]' to='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' direction='DESC' using='[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]' />
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]'>
            <groupfilter function='member' level='[none:title - Split 1:nk]' member='&quot;ArtExpress&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]' />
              <size column='[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]' />
              <text column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' />
              <lod column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]</rows>
        <cols>[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='cut'>
      <table>
        <view>
          <datasources>
            <datasource caption='cut_orders_qrf' name='federated.0jffld41ds8t2d11njoru04hv3mk' />
          </datasources>
          <datasource-dependencies datasource='federated.0jffld41ds8t2d11njoru04hv3mk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[my_price]' derivation='Attribute' name='[attr:my_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Attribute' name='[attr:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Cutting' datatype='real' name='[cutting]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
            <column caption='My Price' datatype='real' name='[my_price]' role='measure' type='quantitative' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cutting]' derivation='None' name='[none:cutting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
            <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cutting]' derivation='Sum' name='[sum:cutting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='Sum' name='[sum:metalevel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[my_price]' derivation='Sum' name='[sum:my_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[packaged_volume]' derivation='Sum' name='[sum:packaged_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Sum' name='[sum:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cutting:qk]' included-values='in-range'>
            <min>0.01</min>
          </filter>
          <computed-sort column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]' direction='DESC' using='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:cutting:qk]' />
          <slices>
            <column>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cutting:qk]</column>
            <column>[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jffld41ds8t2d11njoru04hv3mk].[Multiple Values]' />
              <lod column='[federated.0jffld41ds8t2d11njoru04hv3mk].[attr:my_price:qk]' />
              <lod column='[federated.0jffld41ds8t2d11njoru04hv3mk].[attr:qrf_price_min_sell:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk] / [federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk])</rows>
        <cols>[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='cut (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cut_orders_qrf' name='federated.0jffld41ds8t2d11njoru04hv3mk' />
          </datasources>
          <datasource-dependencies datasource='federated.0jffld41ds8t2d11njoru04hv3mk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:Number of Records:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='cut (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cut_orders_qrf' name='federated.0jffld41ds8t2d11njoru04hv3mk' />
          </datasources>
          <datasource-dependencies datasource='federated.0jffld41ds8t2d11njoru04hv3mk'>
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Cutting' datatype='real' name='[cutting]' role='measure' type='quantitative' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[cutting]' derivation='Sum' name='[sum:cutting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:qrf_volume_remain_sum_sell:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:cutting:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk]' />
              <text column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]' />
              <lod column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:cutting:qk]</rows>
        <cols>[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:qrf_volume_remain_sum_sell:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='j2d'>
      <table>
        <view>
          <datasources>
            <datasource caption='j2d_s2s' name='federated.1hjlk3x190aifh1cn197u1h7l58h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjlk3x190aifh1cn197u1h7l58h'>
            <column-instance column='[dt_price_min]' derivation='Attribute' name='[attr:dt_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_margin]' derivation='Attribute' name='[attr:est_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_min_sell]' derivation='Attribute' name='[attr:jita_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Dt Price Min' datatype='real' name='[dt_price_min]' role='measure' type='quantitative' />
            <column caption='Est Margin' datatype='real' name='[est_margin]' role='measure' type='quantitative' />
            <column caption='Est N S Price' datatype='real' name='[est_n_s_price]' role='measure' type='quantitative' />
            <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
            <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
            <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
            <column caption='Jita Price Min Sell' datatype='real' name='[jita_price_min_sell]' role='measure' type='quantitative' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[est_n_s_price]' derivation='Sum' name='[sum:est_n_s_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit]' derivation='Sum' name='[sum:est_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit_per_week]' derivation='Sum' name='[sum:est_profit_per_week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gap]' derivation='Sum' name='[sum:gap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume_per_day]' derivation='Sum' name='[sum:volume_per_day:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
            <column caption='Volume Per Day' datatype='real' name='[volume_per_day]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[attr:dt_price_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[attr:jita_price_min_sell:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[attr:est_margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_n_s_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:volume_per_day:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[attr:dt_price_min:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[attr:jita_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[attr:est_margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_n_s_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:volume_per_day:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]' direction='DESC' using='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]' />
          <slices>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hjlk3x190aifh1cn197u1h7l58h].[:Measure Names]' value='163' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk] / [federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk])</rows>
        <cols>[federated.1hjlk3x190aifh1cn197u1h7l58h].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='j2d2'>
      <table>
        <view>
          <datasources>
            <datasource caption='j2d_s2s' name='federated.1hjlk3x190aifh1cn197u1h7l58h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjlk3x190aifh1cn197u1h7l58h'>
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
            <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
            <column caption='Gap Margin' datatype='real' name='[gap_margin]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[est_profit_per_week]' derivation='None' name='[none:est_profit_per_week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gap_margin]' derivation='None' name='[none:gap_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[est_profit]' derivation='Sum' name='[sum:est_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit_per_week]' derivation='Sum' name='[sum:est_profit_per_week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gap_margin]' derivation='Sum' name='[sum:gap_margin:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[Exclusions (Cat Name,Type Name)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:cat_name:nk]' />
                <groupfilter function='level-members' level='[none:type_name:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:cat_name:nk]' member='&quot;Implant&quot;' />
                <groupfilter function='member' level='[none:type_name:nk]' member='&quot;&apos;Absolute&apos; Injection Augmentor&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]'>
            <groupfilter function='level-members' level='[none:cat_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:est_profit_per_week:qk]' included-values='in-range'>
            <min>403009.69819571998</min>
          </filter>
          <filter class='quantitative' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:gap_margin:qk]' included-values='in-range'>
            <min>10.242908774</min>
          </filter>
          <filter class='categorical' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]'>
            <groupfilter function='level-members' level='[none:metalevel:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]</column>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]</column>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:gap_margin:qk]</column>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:est_profit_per_week:qk]</column>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[Exclusions (Cat Name,Type Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]' scope='rows' value='Est Profit Per Unit' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]' />
              <size column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap_margin:qk]' />
              <text column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]' />
              <text column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]' />
              <lod column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]</rows>
        <cols>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='j2d2 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='j2d_s2s' name='federated.1hjlk3x190aifh1cn197u1h7l58h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjlk3x190aifh1cn197u1h7l58h'>
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Est Profit Per M3' datatype='real' name='[est_profit_per_m3]' role='measure' type='quantitative' />
            <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
            <column caption='Gap Margin' datatype='real' name='[gap_margin]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[est_profit_per_m3]' derivation='Sum' name='[sum:est_profit_per_m3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit_per_week]' derivation='Sum' name='[sum:est_profit_per_week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gap_margin]' derivation='Sum' name='[sum:gap_margin:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]'>
            <groupfilter function='level-members' level='[none:cat_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]'>
            <groupfilter function='level-members' level='[none:metalevel:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]</column>
            <column>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_m3:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]' />
              <size column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap_margin:qk]' />
              <text column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]' />
              <text column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]' />
              <lod column='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_m3:qk]</rows>
        <cols>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='j2q'>
      <table>
        <view>
          <datasources>
            <datasource caption='j2q_s2s' name='federated.08z8cau0l8uma31f9yaz11536eoq' />
          </datasources>
          <datasource-dependencies datasource='federated.08z8cau0l8uma31f9yaz11536eoq'>
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Est Margin' datatype='real' name='[est_margin]' role='measure' type='quantitative' />
            <column caption='Est N Sell Price' datatype='real' name='[est_n_sell_price]' role='measure' type='quantitative' />
            <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
            <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
            <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
            <column caption='Jita Price Min Sell' datatype='real' name='[jita_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Jita Volume Remain Sell' datatype='integer' name='[jita_volume_remain_sell]' role='measure' type='quantitative' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[est_margin]' derivation='Sum' name='[sum:est_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_n_sell_price]' derivation='Sum' name='[sum:est_n_sell_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit]' derivation='Sum' name='[sum:est_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit_per_week]' derivation='Sum' name='[sum:est_profit_per_week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gap]' derivation='Sum' name='[sum:gap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_min_sell]' derivation='Sum' name='[sum:jita_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_volume_remain_sell]' derivation='Sum' name='[sum:jita_volume_remain_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Sum' name='[sum:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume_per_day]' derivation='Sum' name='[sum:volume_per_day:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
            <column caption='Volume Per Day' datatype='real' name='[volume_per_day]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:jita_price_min_sell:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:qrf_price_min_sell:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_n_sell_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit_per_week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:gap:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:volume_per_day:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:jita_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:qrf_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_n_sell_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit_per_week:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:gap:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:jita_volume_remain_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:qrf_volume_remain_sum_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:volume_per_day:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.08z8cau0l8uma31f9yaz11536eoq].[none:type_name:nk]' direction='DESC' using='[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit_per_week:qk]' />
          <slices>
            <column>[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08z8cau0l8uma31f9yaz11536eoq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08z8cau0l8uma31f9yaz11536eoq].[none:type_name:nk] / [federated.08z8cau0l8uma31f9yaz11536eoq].[none:cat_name:nk])</rows>
        <cols>[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='my sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='tad_wal_tran+ (neweden)' name='federated.0t4qeay1w434k01gll8gp0befrpd' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4qeay1w434k01gll8gp0befrpd'>
            <column caption='SUM([Unit Price]*[Quantity])' datatype='real' name='[Calculation_1136314490892664834]' role='measure' type='quantitative' user:unnamed='my sales'>
              <calculation class='tableau' formula='SUM([unit_price]*[quantity])' />
            </column>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Is Buy' datatype='boolean' name='[is_buy]' role='dimension' type='nominal' />
            <column-instance column='[is_buy]' derivation='None' name='[none:is_buy:nk]' pivot='key' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Unit Price' datatype='real' name='[unit_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1136314490892664834]' derivation='User' name='[usr:Calculation_1136314490892664834:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4qeay1w434k01gll8gp0befrpd].[none:is_buy:nk]'>
            <groupfilter function='member' level='[none:is_buy:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4qeay1w434k01gll8gp0befrpd].[none:is_buy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0t4qeay1w434k01gll8gp0befrpd].[usr:Calculation_1136314490892664834:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.0t4qeay1w434k01gll8gp0befrpd].[usr:Calculation_1136314490892664834:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0t4qeay1w434k01gll8gp0befrpd].[usr:Calculation_1136314490892664834:qk]</rows>
        <cols>[federated.0t4qeay1w434k01gll8gp0befrpd].[tdy:date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='o2j'>
      <table>
        <view>
          <datasources>
            <datasource caption='o2j_s2b' name='federated.00z59ch1vx6htb1g6lq1v1lkt7f3' />
          </datasources>
          <datasource-dependencies datasource='federated.00z59ch1vx6htb1g6lq1v1lkt7f3'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
            <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
            <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
            <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
            <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='O3 Price Min Sell' datatype='real' name='[o3_price_min_sell]' role='measure' type='quantitative' />
            <column caption='O3 Volume Remain Sell' datatype='integer' name='[o3_volume_remain_sell]' role='measure' type='quantitative' />
            <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
            <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
            <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_total_profit]' derivation='Sum' name='[sum:ava_total_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_volume]' derivation='Sum' name='[sum:ava_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_max_buy]' derivation='Sum' name='[sum:jita_price_max_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_volume_remain_sum_buy]' derivation='Sum' name='[sum:jita_volume_remain_sum_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_as]' derivation='Sum' name='[sum:margin_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='Sum' name='[sum:metalevel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[o3_price_min_sell]' derivation='Sum' name='[sum:o3_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[o3_volume_remain_sell]' derivation='Sum' name='[sum:o3_volume_remain_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[packaged_volume]' derivation='Sum' name='[sum:packaged_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_as]' derivation='Sum' name='[sum:profit_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_raw]' derivation='Sum' name='[sum:profit_raw:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:ava_total_profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:ava_volume:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:jita_price_max_buy:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:o3_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:jita_volume_remain_sum_buy:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:margin_as:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:metalevel:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:o3_volume_remain_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:packaged_volume:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:profit_as:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:profit_raw:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[none:type_name:nk]</rows>
        <cols>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='q2j'>
      <table>
        <view>
          <datasources>
            <datasource caption='q2j_s2b' name='federated.0bf4zq01ej602x1fpu3ah0gozpjk' />
          </datasources>
          <datasource-dependencies datasource='federated.0bf4zq01ej602x1fpu3ah0gozpjk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
            <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
            <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
            <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
            <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
            <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
            <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
            <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_total_profit]' derivation='Sum' name='[sum:ava_total_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_volume]' derivation='Sum' name='[sum:ava_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_max_buy]' derivation='Sum' name='[sum:jita_price_max_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_volume_remain_sum_buy]' derivation='Sum' name='[sum:jita_volume_remain_sum_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_as]' derivation='Sum' name='[sum:margin_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='Sum' name='[sum:metalevel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[packaged_volume]' derivation='Sum' name='[sum:packaged_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_as]' derivation='Sum' name='[sum:profit_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_raw]' derivation='Sum' name='[sum:profit_raw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Sum' name='[sum:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[none:type_name:nk]</rows>
        <cols>[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='156'>
    <window class='worksheet' name='contracts_all'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]' type='filter' />
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:issuer_id:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='contracts_my'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:issuer_id:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='contracts_my (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:issuer_id:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='cut'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cutting:qk]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cut (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='cut (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='q2j'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='o2j'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[none:type_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Rogue Drone 43-X Nexus Chip&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='j2q'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08z8cau0l8uma31f9yaz11536eoq].[none:cat_name:nk]</field>
            <field>[federated.08z8cau0l8uma31f9yaz11536eoq].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='my sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t4qeay1w434k01gll8gp0befrpd].[none:Calculation_1136314490892333056:qk]</field>
            <field>[federated.0t4qeay1w434k01gll8gp0befrpd].[none:is_buy:nk]</field>
            <field>[federated.0t4qeay1w434k01gll8gp0befrpd].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='j2d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:volume_per_day:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='j2d2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:est_profit_per_week:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:gap_margin:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]' type='filter' values='relevant' />
            <card pane-specification-id='1' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap_margin:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]</field>
                  <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]</field>
                  <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit:qk]</field>
                  <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:est_profit_per_week:qk]</field>
                  <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap_margin:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Implant&quot;</value>
                <value>&quot;&apos;Absolute&apos; Injection Augmentor&quot;</value>
                <value>13571999.719686</value>
                <value>89869031943.858795</value>
                <value>15.500001735</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:est_profit_per_week:qk]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:gap_margin:qk]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='j2d2 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]' type='filter' values='relevant' />
            <card pane-specification-id='1' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[sum:gap_margin:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:cat_name:nk]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:metalevel:ok]</field>
            <field>[federated.1hjlk3x190aifh1cn197u1h7l58h].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='contracts_all' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WXNcZ5qt92TunPbOeU4gASRGAiBISqJUVeqq6na5J3d76hMOR9jHvjgR
      55fUv3H4wje2IzrCPcSprlKVKFEcQJAEiDnneR736AsotwgOkigBiRQb60aKzCTyJbi/vb/1
      rXet12IYhsE1rvHvFNarLmCacX1veP9xvQC+Bd1u96pLuMYl43oB/GAYPPzic0b6608JTe7z
      xedf0B0pL79Kq9V57bOjXpeholHOHfOHz+4xUDSUYZfuQD73uacP79MZ9vjy/mMajcYbK9L6
      db7cfvHG9/LpQ56+ODr3Wr/dQtFf/2yr1QLgyaP7bD/fB3jjd5azGUq1hvl5AG3U5fe//zeO
      T4754x/v0R0qr/25t6GUecFxrv7G9+7d+4JGJcf+ce619zqNJurX/28YGg+//Jxaq/fSJ4xz
      NZq1qiNs37u6a5yDJvfIZY7pKCA6XcjKkJGi8Zd/8StO9p4wu/4BuYOnFOpDrEYPrBZy6TbJ
      hJdIJMiXzzJsLobo1Zo4Fzbxq2VqlSq//93vmYmIdGU7ktvBk8//wJ2/+B/ptCqUft+mhwXX
      aZd7nzVZ2PwZN1diZk3Pd3YpdxWe7IywGjKlUp1ocpnbm8vsn2b5i1/9ij/87p+RnE5ytS6D
      ZouVj+9QSzcQ1CJWTwzB5qJ4esDf/Pf/QCabxeqoUcqcEopF0J/vYMHg4V6O//Sf/iOVXJaO
      SyK/u8PW7Vv88dEh//v/8Cty5QrDbh8ZB9obbhBvw3GmzEgt0q156NZbdAYdtv7s70kG7Bw+
      f4LhFFBrDf71H/9ftu7eIei0ky8XsUhz+MURna7KL9ZDaIEVepU0j+6XcYg2NF2ncHzKfGqB
      RCzMv/zbAz752TrIPYTf/va3v72E6+O9gCzLOJ3ON77Xqeap9i1ILieVepOgaKVYaxKLhAkE
      /DzbeYZVsCArBsFwGEl04bQJ+MMxrLqMbnUg2i3E4gmwufC5ndz66BdY5SEzcT+19gi73YZN
      cLGyuoRmWJDVETOxMBZDJhCaAYuDaMRr1pTJphl1ungDfnSrQKtaRR5phOIJ9H6LUrPPqNfG
      4bATiiVwihKi5CQajNHttbHbbRgWJ4mon2AkgVUQ+OXPP2YkW7ALGspohNXmIJacIxb2cHCc
      x+OVCPk8tLsj7C6JpYUZHP4EtzdStGolvOFZPKL9e/y2dQ5f7KFgxzpq44/NUsgcIwQSJIIe
      LBaF/hCEQQub5EcMR1mNedk/OECXYoR8En5JZGY+xf6zxxgWK8OhgjcUxidJeEQ7Lm8In81g
      oFiRfC4CoSgW4wwXdMm8X+h0Oni93u/+IFApZJCtbpLx0CVX9X1hsPv0KUvrWzhtlqsu5p2h
      yX12j3Lc3FjjbdXrcp9nh1m2Nm+89TPfBXMBXBO+19Hv95Ek6arLuMYlwgZgsVjwer2oww5f
      3H/MytZHxIPuiRUx6nc4zVdYXl7CZj1by9Ny8X3fJ8C7oN/vs7Ozw61btzg6OsLj8aAoCqur
      qzx58oR4PM7JyQlLS0uk02nu3r1LOp1G0zRkWcbn85HP59nY2LiU+l5GLpejXq+zvLxMqVQi
      lUrx1VdfsbCwQCaTYW5ujkajwebmJs+ePcPn89FoNIjFYqTTaW7fvo0oipda4/dFu91mf3+f
      VCrFYDDAYrGcJ8H7Dx+z9skvePQv/zctPUgq6qSvWlD7HTBUGiMrK8kI7uAMN5bnLqywSq3J
      6soy6aM9NMOJ1+dipMHB8ycEYwmePNnjxvoy/lCMaNB3Yd97VRBFEVVVSafT1Otnpx6FQoHF
      xUXcbjd7e3tsbm7y4MEDNjc36Xa7jEYjDMPAarWSzWZZWFggn8+zvr5+qbX6fD6Ojo44OTnB
      MAxkWabf7+N0OvH7/RwcHODxeDAMg3q9TqfTodPpEIvFCAaDU6Wl9Ho9er0esiyjKArJZPL8
      MejCjSWefP4nkiu3sA6alOtNbDYbM8lFIpEIt7ZuUslnSMzNXmhhAY/Ii4Mj3P4IAbeNfKGC
      xWIhGAzQ6w1ZXFrC4wu8Fxc/nOkLVqsVXdcZjUZIkkQsFqNSqVCtVpmZmWF3d5fFxUXS6TSt
      VgtN01BVlW63SzAY5ODggGAweOm11ut17PYzEttqtahWq7jdbk5PT6lWq8zOziLLMrlcDpfL
      hdfrJRgMkslkKJVKl17fu8Dv92Oznd3zT05OOD09/XYS3G538Pm+ecQahk6pXCERj0+k4KvG
      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
    </thumbnail>
    <thumbnail height='192' name='contracts_my' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3NjWXqu+Wx4EIaEIwmCnkkyk2mYpiuruqskddXRiTjRmhj1nFHMjWJm
      LjV38xd0N1cz/0BxIkYxodAxoaNWq9RVKp+OJukNSBAgDOG993vvuUhhq9is7FKrSmSjks8V
      gxtk7AVg7bW+b73f+wmyLMtcc80biuqqb+Caa66S6wlwzRvN9QS45o3megJc80ZzPQGueaO5
      ngDXvNFcT4Br3miuJ8A1bzTXE+CaN5q+nwDdVpVoIvv6F8gy0ZCfdKHyr/r/7VqRnd09Ko3O
      b3xd/CxCqyuROAvR6n7LP5W6RCIxftMRfCEdIxhN/db3C4DY4ehgj0S2+K0vLRYK33yL7Qb7
      uzvkynVi4RMOfadI/wrNgCyJhCPR149VEgmHz5AQCYUi/+L/223VODg8pvsddQzqP//zP//z
      7/Yvrhb/5jM+2QkyOWJFQ5dcpcHhzhaGQScDei3ZyB77iQ6TIzYChztgsHIWOCRXafB3//mv
      sTicZDNZapU8J5E0DrOarZ0DPv77X2IemaSb9ZHsGPAfeNFIHaJnQWSdBe/+PnqNxHE4hXvY
      wcd/85d0bbOs/OIv6AyM0m62CPqPMAwOY9Spz91zORHgr/72H5mbHaclaSkX8wSPD2miY8hi
      olvP8cnzXW7MTJJPBElXJRrFFMehOIdffkhCNqGuFymUKhx6T3AOO9nb2mL32acEmwbmbCqe
      HESJB30Mmgwk42fkaxKJUy9oDRwcHOEaHUWtEnjyxROqjSLPPvp7ugPDJPz7MGBHW4+ylRCJ
      HG2RTGS5e+8Oep0OQfjtPp9GIcpf/dUvmJibQUJLqZjhLHBMqSVgH7RAt8n/+5d/icc9zH/5
      8EvmRs2cRHPohA6pTIFiKkIs3yAZjSB2ahz5o4yOjfDFx79ifGYOldhi9zCAUavi4GCfeiXD
      3/zDM0acQ+QLZc4C+3S1VkqJU07DR/zt3z5jafku2n/6SPp+Bdj0niBlgxx7j/jvH37B3soK
      FqcJf/jV07NRKWEb8UDxlLxmmBef/gOBVBm/34dnaoYRfQNvpEwmHuXZ51/w8ZNn3Lp7j8nx
      aaY8TpAl/L5TZmYcPN8Oo21mWHv+gpG5W3z68ceEjw6pdMEyNkfx4BMGhhcpFtL49/YxOwdY
      fRm4cM/egz2MQpPjaJbPP/zvrD19Rl03yPHuHgDdVgO9xYZtyMzecYjT7ZesHxxTTMQwu9zM
      z3t4+myHbjVHPLTPf/3bX2IcmWPcNczCzQUAUtEgzrFpnn75jEGTmpPNF1SNYxw9/4xwNMJZ
      poQsy3QlkVQqzcj4OHNuE6fhBJ8/XQPg7NTH2PQ8424Hv/jlh7Sl3/7zOdp+iX5Ay/FpmOef
      /oLNzV0SVQ0B777ymnHPGKtbR8yMOwkHQ2x+9QVPnz1BN6jn4ChLNHhIMpVia9uLuhAj14SW
      JDAy7GJtdQ2brsEvP/wc56CG/WSbG3M3OFx9ysCQkeBpjM9/9ffshEvcuTPP7NQCRs0/31+f
      rwAyGqOFd390D/2gg1ZbYGnayq8+fsLo+BQarQ73+CSRg02wuKklThm/sYTLYcc+ZMU2oKEi
      6hgfn0DoVNCa7CzfnObIH8PtMlHtarCZB5hcuMfM6CAG4yC2IRNO9ziBYx+z0x4Eg4WpiTGQ
      QK0ZYHFxCpPFxpB1EOeIA73WiMNmOnfP9a6aP/z3f0C90sUgtLj71kNWPv8YtWUMkwEcwx6a
      2TPixTaD2g6aoTEmRl3Y7TZG3XaiiQLTE+NYBtQ0ZS2Li7dIhE6YmJ8hcpZmYtSBxTHGg9s3
      0OoNDDttGG2j5M/8uGdmabdhdmaaVOgQg30Cp82Cy2YhXWrQ6XSZmJrC7RzC7pnj9qybdDKG
      2e5myjP6W68A5bbAv//g92i1ZFTtBg9+/JjNrz6io7NhNRkZtJpRGUwM6PRMeEbRIGEYdDI1
      O8O4e4KDl5+Sbem5t7SA3WHHYbdhtjsYtWh5ueVlbm6SYLzE0q15hl12dEYbzWKC0clZxt0u
      UqkM47MLWIQaTWGQViXO8PiMsgIIPTVoq9Wi0/nN+9x+oN2oksqVcY+50ah+y0/ripDEDvF4
      AsfIGEad5tv/oI+RJZFELMagaxSTQfetr0/FzzBYnQyajf8m96NMAFEUuVZGX/OmIfx6PUAh
      EWT7+IzFu/eQm3U8nrGvXW0Si1ZxDw+QLDUZc9lptVro9fp/ut4lFsvg8bgvbwTfM6Iosrm5
      ycjICJIk0e12uXHjBqVSiZOTE5aXl9na2uLOnTv4fD7Gx8dxOp1EIhGazSYjIyP4/X5u377N
      9vY2Dx8+RKf79ifdvwX5fB6fz8e9e/eIxWLcuHEDWZZ5+fIldrud2dlZTk5OEEWRVCrF22+/
      DcDu7i4PHjxga2sLp9OJwWCgXC5z69YthN92D3TFSJLE7u4uZrMZjUZDs9lkcXFRGceF9TYV
      PEQz4ObQ60OuV8knQ2iGJhBqKVRWA76NFI0lJ8+2j3n0o3dolFKYNCqMQw7iZwFyVU1fTwBB
      EBgZGSEWi6HRvHp7JEkiEAjgcDhYWVlhbm6OtbU1PB4PgUAAu91OOp1GkiTK5TJOp5Pnz59z
      7949vF4vy8vLVzIWlUqF3W4nl8tRq9UAaLfb1Ot17ty5w9HREalUivfffx9RFNFqtXi9XgwG
      A7u7u9TrdUZGRnj+/DkPHjy4kjF8VwRBwOVycXp6SqfTQZIkpqamMBpfbam+MQuk0uoQ2y2g
      gc8bYPXpl/jjdWY8TvZfPqcjGHBP3yBwuEc2n+HEH6ObiWKbWUTXXw+IC8iyjCAIyLLc91vC
      crmM2WxmYmJCWYVUKhWjo6O8ePECn89HOBymXC6j0WjQarXK01EQBMbHx1ldXUWtVrO/v0+3
      +20HHL979D5PQRC4e/cunU7n3Cr2mi1QhIXb96BdJx0LM2D3oOuW6BqtGGUdXalJOhVneOom
      GrmBIKsZcVp4uX3IqGeS6Yn+XQE6nQ4bGxu43W5kWUYURarVKpOTk5yennLv3r1zW6CxsTGS
      ySRDQ0O0Wi2Gh4d/Z7ZAx8fHpFIp5d6dTidms5l8Po/H48HtdpPJZDAYDOh0Ovx+P6Ojo/j9
      fpaXl9nb22N8fFxZNW7evNmXW6DNzU0GBweBVyvCjRs3lOvKBOj3p9011/xrUGKATqfTl0vc
      Ndd8Fy7EAMVCAQmJYuFfoCPJJKi1RYrF0utfJEvk89/+v64aWZZJJpPIskw0GqVSqVAul5Xg
      ESCVSikBcafTIRwOK9fz+TypVIpms0kwGEQURU5OTpCkf8Xx6fdENBplf3+ffD6P1+ul0+kg
      yzKZTIZut0u5XCYUClGr1YhEIsqW7/j4mFarRSgUolAoIIoimUzmysbxXZBlmVAoRDqdJpvN
      kkgkzl1XToJFUXz14W6/oKkxcOSP0y4laKsMNGtVao0WkZND0FvIpSJ0BCMbL5+QzVeJBs+Q
      O2XyDei06rRrFfKVBq1GnQGDlk8/f45Z2yVZ7lBOhSg1JURZoFGvUs7ESJba2AfNV/H+KNTr
      dXw+H06nk1AoRCaTQavVks/ncTgclMtlPv74YwYHB2k2m4RCIURRJJlMMjY2xv7+PrlcjmKx
      iCRJnJ6eYjabSafTuFyuKxmTRqMhmUxisVjodDoUCgVsNhs+nw+LxcL+/j6Tk5P4fD4ajQZW
      q5VWq0W32yWRSGAymQiFQjSbTU5OTpiZmbmScXwXZFmm0+lwdHREPp+nXq/jdDpRq18dBV9Y
      AWZvLrD6xZeMWGS+3PZzfBLg2T/+kkT4mILGydqX/8jqjg+71QgaM2ahRqXVJhKJ89WXTznY
      2WLbe0LAu8Pe4TG9kOn0NEAulyPg95NPRjgMxjg4OuIfP/2E46MjxMt8V74Bk8nE0NAQoigy
      ODiIRqPB7XYrQd/a2hrNZpNkMonb7abRaGCz2VCr1ciyjMFgwGg0IggCDodDORNot9tXNiaD
      wYBGo8FqtZLP59HpdKjVakZGRgDI5XI8ffoUWZax2Wy02220Wi3lcpnFxUVyuRzz8/Ps7OyQ
      TCb7cossCAKlUgm9Xs/4+DjhcPjcOC6cAxgGR/B4xpldvEk+X8ThsuOx/xhBraOWCDF35wEa
      jRqVIDA1OcXU6BDVvTB6ucEtu4dpu4aixo6Y2KVpmwNBzY25KYROlSoahoddYBxEXcgyYHdx
      /94yHZ2dq84tlEolzs7OMBgMFItFXC4XBwcHFAoFOp0OH3zwAfF4HKfTyfr6OsvLy/h8Ptxu
      NycnJ+j1elqtFiMjI5yenvLw4UM2Nzd5+PDhlY2pWq0yOztLqVRSZC7BYJBIJILNZuPWrVuU
      SiXl3KPT6aDRaCgUCkQiEXK5HDqdjj/5kz85dy7ST0iSRKFQYGBggHa7zfz8PAMDA8p1JQvU
      bre/1xleyOcYtNlR9Vna7NfpLaGvS2XKsky320Wr1V7ynf329L7gr0tlttvtK0vZXhXXadBr
      3miUNa33VBA7bVCpESUJXR881b5vZFmmVquhUqlQqVTIsozRaEQURRqNBiaTiWq1islkotFo
      oNfr0Wg0tFotZFlGq9Wee53ZbL7Sw6Nms4lOpzt3L5VKBYPBgCiKdLtdDAYDzWYTs9mMLMvK
      +JrNJlqtFlEUEQQBg8FwZeP419L7PDUajSKFsFgsqFSvwt8Lm7qTjU9JdGwMj09h04o4Roap
      lSpodRqqzS42k5Z8tY17xHnl+/Z/C0RR5Pnz59y6dYujoyNkWeYP//AP2d3dJZvNMjY2Rjqd
      xmq1UiqVGBgY4O2332ZlZYVWq4XL5aJQKDA4OEitVmN0dJSFhYUrGUuj0eCv//qv+dnPfqZo
      lnoCuHq9TrfbZWxsTDkFfuedd+h0OhwfH2Mymeh2u1SrVVqtFiqVivfff1/54vQLsiwTDAZJ
      JpNMT0+zv7/PH/3RH/2zNOTCH4gdNg8CCPlT/ubv/pZnqy/46B/X+fiX/43/+p9/wcr6M1Y3
      9hF/wDsmg8FANBpFo9EoW0OVSsXDhw+JxWI8fvyYQqHAzZs30el0ShZleHgYgLt375LP53n8
      +PG5c4TL5smTJxgMBmRZxmQyMTU1hUajQaPRYDKZsFgsnJ2dYTabGR8fx2QyYTabGRgYYH5+
      HoPBwM2bN5WUYT+iUqmUDN309DSzs7Pn4pwLK4DF6eF/+g8O4tEoMzMLTI2P4XYOIFYt2Gtq
      xkYHKJ8kXxVI/wCXAFmWUalUGI1G5edAIIDFYmFjY4Mf/ehHPH36lDt37nB8fIzb7eb09JRu
      t0uz2WRsbIzd3V1u377NV199daVZoJ/85CcEAq/Sz+l0GovFQrvdplgsMjg4iCRJ6PV6/H4/
      7XZb2aplMhmMRqNy1vHPcvf+o9vtkk6nUavVJJNJbt68ee76BTHcNefp7SHN5m8+qBNFkVar
      dS619rtKvV7HYDC8dhvTixPeJJQJ0Ol0EMWrPo665prLRdkCybJ8pbqVa665Ci7EAFKnzn/6
      i//EH/9vf4ZzoP9O/r4PfD4fuVwOrVZLJBLh5z//OV6vl0wmw40bN9jb22N6epqzszOcTicP
      Hjzg+fPnNJtNRkdHiUajTE1NEYlEuHnzJpOTk1cyjmAwiN/vV+KW9957D41Gw9raGsPDw+Tz
      edRqtVID8Hu/93uk02lCoRCzs7PK6W+1WsXpdHL37t2+rAfY2NigXq8rad5Hjx69viSyEDvB
      PuzB5z/kH17sMDw2wNpOgHfevks41eZ//9M/Rttf78FvRbPZJJfLoVKpuHfvHkajEZVKhUaj
      QZIkMpkMP/3pT1ldXWV5eZlUKqVkgURRRBRFfvSjH7G7u8sf/MEf4PP5rmwsTqeTo6Mj4vE4
      ZrOZdruN0WhEq9USj8cZGhoiFotx69YtJElCrVYreqZMJoPb7Uan0xEOh2k0Gkp1VT+hUqmw
      2Wy0Wi2y2SwGg4F2u60E9heiobN4icm5Ser5DPN37jMzMcaPf+89ZqenUDUKNN6AXdLAwAD1
      ep1IJML8/DzxeBytVossywwODvLVV18xMTHB/v4rc6dEIkGlUiGfz6PX69na2mJqaoqvvvoK
      h8NxZeNIJBLngt5yuUw+n0ej0TA5OYnJZGJ0dJR0Oo1OpyMWi6FWq5EkCYfDwd7eniIku0pR
      33eh2+2SyWSQZRm3240kSee2+v9mWqAfCrIsk8/nsdvt3/j0E0WRcrmMzWa7grv77ahUKuh0
      utemNXO53GvH+UPl2hfomjea63OAa95ovtEbdGV9jXGP5wpu5+oRRZGnT5/S6XTwer2k02nG
      xsbw+/2srKxgtVp58uQJWq2Wly9fUq/XcblcrK+v4/f76Xa7vHz5Eo1Gw8rKCmaz+coOlyRJ
      4he/+AVms5kXL17Q7XYZGBjgq6++UgLBL7/8kmq1ytHRER6Ph3Q6zYsXL2i1WkrJZDQa5fT0
      lImJib7bHkmSxNraGuFwmFKpRCgUwuPxvD4LBFAoFtl+9hGfH2T4/dtugqkCjtFJHs0MsZeB
      vc9/yfLjt/FHc/z8j/9HLD8gCXm9XiebzWK322k2m+j1euU0+J133mF9fZ3f//3f58WLFywt
      LSlZIKPRiF6vp1Kp8ODBA7a3t3n//ffxer2Mjo5eyVhOTk6w2Wy43W7K5TLT09N0u10kSSIY
      DFKv1xkaGlLKJYvFIm63WymSiUajiKKIw+EgHA733Zcf/tkcLJFIEIlEGBwcRBRFpbjnQhYo
      Gjik0pA4DUcR6FAqlei2GjSrJdZebhINnSAYreTzWTzzd39QX354JYSzWCykUimsViuJRIJs
      NoskSTx58oSZmRk+//xzXC4XW1tbtNttcrkc2WyWeDyOIAhKnv3TTz/FYrFc2Vjq9TqBQIBU
      KqU4v/XkEA6Hg2q1yuHhIVarFZ1OhyRJ1Ot1Wq0WANlsVvn7er3elwel3W6XVCpFrVbDbrdT
      KpVoNBrK9W+NAWLBI45CaX7y3nsYtf0lhf0+6LlEjI+PvzYLlEqlGBsb+4a//t2iWCyiVqtf
      Oymj0ei57cGbwLksUD/O8Guu+S4oMUCvOuiaa94kLvgCpYIHtA0OfIf7jI6OXPHtXT6tVovV
      1VVisRi1Wo12u43FYiEWi/Hy5UucTifPnj3DbDazvb1Nt9vFZrNxcHCgmEttbW1hsVhYWVnB
      brdfWSlhMBjE6/UyPDzM9vY2VqsVtVrN06dPEUWRUChEJBKhVqvh9/txu93UajWePn2qjG9s
      bIzNzU2y2SzDw8N9tz2SJImXL1+STqcpl8v4/f7fnAUqJsN4T7IUczlU7TKJugaLqszQkJPT
      RB67bQiDwYRGkLhz5/YPriZGr9ezvLyslNAFg0HglfPb8vIya2trvP3226yvr7O4uKjYovfq
      gbPZLEtLS+zs7PCTn/yE4+PjK7NH70kcKpWKYo2i0WgoFovMz8+j0+kIBAIUCgUymQzFYpFa
      rYYkSZhMJtxuN91ul2w2e85Qtp/oZYEymQwqlQqHw0G9XsdketW26kJUK2i0PHrnJzjMWo6O
      fYRDQaotiZlRC231AOVSjWLkkLbG/IP78sOroDcSiTA5OUk6nSadTlOr1RBFEb/fz/DwMMfH
      x1itVs7Ozuh2uzQaDeVL1rPis1qtHB8fKz70V8Hk5CSyLCv+RolEglarxdLSknJm0e12mZub
      w263o1KpMJlMjI+PK9mfTCbD4uIiZ2dnfRkj9gr6G40G9XpdeSj0uKAFajdqCLoBWo0a7UYN
      WWvEoFWj7RR4epTl7eWbbK09Y/mdn2LR92+t6OuQZZlWq4XBYCCVStHpdKjX60xPT1MsFnE6
      nWQyGZxOJ/l8HpPJRDKZZHh4GFEUGRgYoFAo4HQ6SaVSjI6OXtm2odFoKDn9TqdDpVJRtrpW
      q5VarYZarUaj0dDtdikWi3g8HrLZLC6Xi1QqpbheqNVqxWK8n5BlmVQqpahgW63WOd2WMgG6
      3e51Rdg1bxzXWqBr3mguaIGyZ8c839hHZbAyZPn6/lWkUmkQS8TQqLXo9a/2UaehILah330p
      8LdRqVRYW1tjYGCAg4MDBEEgmUySSqVwuVyUSiVevnzJ8PAwL1++xGg0cnJyQqvVYmhoiLOz
      M4LBIAMDA2xsbCjZoF6xzGUhyzL7+/skk0lUKhV7e3sMDQ2xtraGy+VCEARWV1eRJIlEIkEi
      kWB4eJjd3V2Gh4cplUqsra0xODjIxsaG4iIRj8eVv+8nJElia2uLYrFIvV4nFAoxMjLy+ixQ
      JnJCW7YSDMconnkRLMM08zFGZubIx6ukCkGK2SJqqY7eOY3/cIt2R+Dm/PRlj+17xWAwYDab
      CYfDFItFCoUCDocDQRAQRZG9vT3lervdptFoEIvFGBsbQ5Zldnd3uXnzJjs7OwwNDSm/vwoh
      nM1mIxAI0G63GR8fZ2Vlhfv37xMIBFhaWsJms5HJZKhWq8iyzNnZGbFYjNu3b2M0GpX4p1Ao
      cOvWLZ4/f87du3cvfRzfB4IgYLPZlLS2wWCg0WgoLh4Xs0AqFeNTk9TTIQ4DMdZfblGrlonG
      ouQyJUAml8lRq9eInEWJ+Q8oNPt/F9XpdBgbG0OSJB49eoRer1cOBwVBQKfTYTAYCIfDOJ1O
      vF4vTqeTw8NDAMVkqmepeHZ2Ri6Xu/SKsJ4wT6VS0W63abVaaDQa6vU6arWabrer2Ler1WoE
      QVB6iVUqFTqdjiKe6zlcW61WIpFIXzZSl2UZi8WCJEl0Oh06nc45W5gLMUA5E2XLG2Rp+QGJ
      gA/r8CilZATX9DwaUUAWOgiyQCF1htY+gUknI4kSo253X6dFK5UKOzs73L9/n+PjYxYWFiiX
      y4iiSKFQYH5+noODAx4+fMje3h5zc3NKE4lcLofb7SabzTIzM8P+/j737t2j2WxitVovdRyy
      LHN4eIhWq1XauN66dYv9/X3Gx8cpl8tkMhlmZ2ep1Wp0Oh0WFhYoFotEo1FGRkY4OTnh/v37
      HB0dMTU1RavVolarcePGjb7cAu3s7GCz2TCbzRSLxdc3ybuOh69507huknfNG82FGEASO+xu
      viRfbf6L/0m7XiISy5L+lkZqiWTiN16/SiRJIhQKKQHtycmJUg0Fr7T1+/v7iKLIzs4O7XYb
      r9dLuVwGIJlMEg6Hldd1u122trau5Gwll8tRLpepVCpsbGwoGZ+ehXs0GqXT6ZDP5zk4OCCf
      z7O/v6/sAFKpFI1Gg0ajQTqd5uTkhN3d3b7cIfTcocPhMKlUiqOjo3PXL4jhvCtfoJtYYnv1
      BWqxRq7aIR32kyw2aFfzFEo1wv5j2t0uLVlHqZBFrKb4u0/WqTRKuExa9o7DIHVQdev4zrIY
      NRKNrsDz518xZreycxSCTpXTWB6V1KHTqNFo1tg59ON2j6K6gm1mvV7n7OwMl8tFPB5nYWGB
      o6MjisUi4+PjHBwcYDKZCAQCDA8P4/V6MZvNSibI5/Mp1igWi4XDw0Omp6cJh8OKa/Rl0OsC
      2Ww2lYC8Xq+zsbGhWKGfnZ1hMpnY3t7m5s2b+Hw+xTdfEASeP3+OzWbj9PSUUqlEs9lkaWmp
      L7rg/Dq9zpeJRIJMJkOn08Hlcr2+SV6nI2EcMKBCJh6Lk0olOEtVyZ/5WFnfYUDOs+4Nk8wW
      2fzq74nlXz3hbs64OTpNEgyecry/SvA0yIdfbmIUc/zq81WEf3rzsskE2WyayFmMZCpNwH9C
      xH/MF59/QSYWJN/49Tu6HEwmEyaTCUEQ0Gq1rK6uMjU1RT6fB/7ZZrvdbivNJXQ6ndJEoycp
      6GWMeq7Kl62fEQRB6UrZbrfRaDRkMhlqtRrJZBK1Wo3dbgdemYD1zgSq1eqrB6DXS7VaZX9/
      n3g8TiQSwWQy8ezZs75UCgiCQDabZX5+XnkYfH0cF1YAx4iLo+1t5pbuo6OF1mghcuJl4uYy
      s1PjjHom6NYrjI6NEziN8Ac//TEalQqr04NJIzLqsqMz27l7ZwlR0OJxWIgVmiwvTqNWqxmy
      mqk2RUacQ0gqHcNWLTXJwK1bczTbAtOT42ivQGJUKpXw+XwIgkC9XlekwWNjY0pnyEgkwsOH
      D/F6vdy7d49YLIbb7SYajSqTx+PxEIlEuH//PgcHB9y+fftSn5yyLCs2jrIsk06nWVpaYm5u
      Dp1ORzqdJhKJ0Gq1GB8fR61WMzw8TKvVotlssri4yMzMDJOTk9y5c4ehoSGldrhfD8JOTk6o
      VqsMDQ0BnKvu+3ZjLFmm3emi053/EGVJpNnuYjT8Zu/4TqsJah1aTX+WU/ZMg1/XJOLbrv8u
      IYoiKpXqtV9iURT7YhzfJ9daoGveaC62SJIl0okYpeoVbcavCFmWKRQKyLJMuVym2+0Si8WI
      RqPIsky73SaZTCoZlV7nkWbzVbasUqlQLBbpdDqkUikkSSIej1+phr7RaCj3UiwWlbOeZDJJ
      q9WiVCqRzWZpNpvKlqk3PlEU6XQ6VKtVarWa4hTRb/SsLXv1EJFI5FwMcEELFNx5QUwcYnpM
      SyVzhsrswkCLdkeiXCmh1ugwDdkZ0GgBiW6niYgWl7O/BXG1Wo3d3V3ee+89jo6OmJubA+Dw
      8BCPx8P+/r7yhWq1WkoxjFqt5vHjx+zs7NDpdBgcHKTdbhMKhdDpdJRKJW7dunUlY9ra2lKs
      UGKxGO+++y6FQoHT01O0Wi02m42zszOlifSDBw9IpVLk83kqlQqVSoVWq4XVasVisTA1NXUl
      4/guyLJMNpslmUxy48YNjo6Ozjl4XFgBMqkiI8MDrK6vs7e9zYcffsRnn3xCp3RGpJRnd8PP
      xtoKe9sn7G3v8cXHH6O9wqqn7wuz2aykx3oOaFarlenpaQRBQKVSsbi4SCqVYmlpiXK5zNTU
      lOIabbFYlCCr15391q1bygpxFUxPT5NKpc5lfnp1wZlMBrVazfz8PHq9nomJCSUQXlpa4uzs
      DJ/PRywWY3Jysu+6Q/boxTuLi4u4XC5GR0fPdby/sAIsv/MWX65sMTk5QSOdZLtsx8cAACAA
      SURBVH54EOeQCefwIO0hgaahCao2xVQc0Whn8e4Dhkz91z/21ykWi5yenqLT6YhEIpjNZkZG
      Rpifn8fn82G329ne3ubHP/4xL168YHl5WXmanJycIAiCIqjraYaePHnCW2+9dWVj6na7WK1W
      DAYDu7u7qNVqdDod7XabO3fu4Pf7MRqNDA8PEw6HGRsbY2RkhGfPnvHWW28pZwFer5d6vc7Y
      2FjfBcmiKBIOh7Hb7XQ6nQur8XUQ/C3Iskyz2Xxtba8kScrZwO86vabZr3uaNxqNK61hvgrO
      Ncm71gJd86Zxrkne9WJwzZvGhRjg+MWHHOZUWOyjLI7befnsCW/9u5/hsA4gyCKySoMgdZBQ
      sbOzy8NHP0J/FUe33zPVapXnz5/zwQcf8NFHH7GwsEC1WiUej/Ozn/2MjY0NCoUC4+PjRCIR
      xVXB4XBw//59dnd3FTuVSqXCo0eP+NWvfsV7772nSBMuA1mW2dvbw2QyoVar8fl8zM/PEwqF
      +OlPf6qY/Pa63guCQKVSod1u8/jxY9RqNR9++CFLS0skEgkKhQIGgwGDwcBPfvKTvguGJUli
      c3OTcrmMw+HA6/XyH//jf1SsUb7RHl1CwKAXODn0UmyInLz8lLPxJfLBIG2NgKaaZWj6LqfH
      Ryws3UOv7f99o9lsVro5WiwWKpUKw8PDFItFABwOB9lslnK5jCAISpVRJpNBEAScTifZbJaB
      gQFFXWkwGKhWq5c6AQRB4MaNG2QyGcUBemJiQunx1cv8AMzPzxMMBjGbzSQSCTqdDqFQSMls
      TU5OsrCwQCQSIRqNIklS300AQRAYGRlheHhYcYT7ui/QhQlgsAxhrDbRqjUYnSPctTsZMoq4
      5ufZSZ/R1llwOs0k6k1uTLrpdPtPIPVN9LRAGo1G0e4kEglUKhWRSET5vcfjodFooNVqUalU
      TE1NEQqFlM6SPUFcL9122QrKnhYon89jNpsRRZFYLMbx8TE6nQ61Ws3R0ZGi6+k54AmCQCKR
      YGhoiNHRUbRaLc1mk/HxceLxOBMTE32XAYJXWaCDgwOlEP7XHe6um+R9C7IsUyqVGBwcfK09
      er1ev9I+AP9SarUaOp3utZOyVCphtVr7TvD2XVAmwK+3j7zmmjeB63OAa95oLhhjBTY+5YuX
      R9QkHWOuIZC6+E5COByvtD6JRJyt3R2m/ilgBKgVkmTKErVyri+2Ar+JVqvFZ599Ri6XI5lM
      cnBwwOzsLMfHx6ysrDAwMMCTJ08A2NjYoFKpMDIywosXL/D5fLRaLTY2NgBYXV3FaDReujNE
      D5/Px8HBASqViufPn+NwONBoNHz++ecA7O7uEovFADg9PcXtdiPLMp988gl6vZ6dnR3S6TQ+
      n0/xGO237VGvSd7p6Sm5XI5IJPKb7dHbzRodUaBeSvP//F9/yaBnjkq+RDF2gxhmbNQoFtL8
      t7/+LxhHR3lrwsTaUZxCcwC3RSBwuE222sZo1NAqZFj8d3/Koqt/Gon1JA3dbpfR0VGy2Szw
      KkZ67733WF1d5f3331fMonpN8iwWCyaTiVarxY9+9CO2trb44IMP8Hq9jI+PX8lYotGokuZU
      qVR0u12q1aoidFOpVMTjcd5++22q1Srwqra5pxcym81KXNivneIFQVCMjU9OTpQx9eKgCzkt
      jd7E1MQ4WhV4Zm/y9ttvMetxADoePbwHgEGnA5UadafG1mGAsak5zIbz/0rQ6rl/5wbNdn9l
      ibrdrmIq1ZMzJxKvivmfPHnCwsICn332GWNjY0qDjJ6LWk94tra2hsfj4bPPPrvSDvJjY2OK
      BbpWqyWfz1Ov17FarVSrVaxWK06nk1AoxM7ODuFwmFqtRiKRIBgMUqlUaDabmEwmyuVyX8aI
      oijy5MkTqtUqbrebVqt1Ttp9HQN8Cz177dct/6IoksvlLrXw/V9LqVRCq9UqtoC/TjKZ7Mtt
      znfhXJO8fix6vuaa78J1k7xr3mguBMHVbJTnm15c43PcX5rta7/P34Zyucz6+jq3b98mHA7j
      crkUC43l5WWCwSCRSESpD+i5JVitVm7fvs3GxoZiSXJ6esrs7KzisXnZBrnValXpUfbpp59y
      69Yt/H4/y8vL6PV6NjY2UKlU6HQ6stksi4uLJJNJ3nrrLSqVCru7u0xOTnJ2dobD4VBMdh8/
      ftx3UoieFkiWZQYHBymXyzx69Oj1WSDv1iGP3v/3rH/yEZ/HfVSaAsOuQSxGA51Wh6ag4fGj
      B6h/YDOjZxXeq+m12+0Eg0HGx8eV02CNRoPL5aLVamG32wmHw4iiiCzLSv+p5eVlqtUq2WyW
      d999F5/Pd6kToOeEptFoCAaDSkkkvEp1Pnz4kKWlJarVKuPj4+zv7xMKhTAajUiSxNDQEJOT
      kwiCoASMCwsLhMPhSxvD94kgCCwsLBCNRjk9PcXhcJxz8bgwnUfcg2y9WAG9ma6gY8ioxTWo
      4zheZkDTIZ4uXvogLoOBgQEcDgeJRAKbzUYikcDhcJDL5SgUCtjtdqVjYqVSQafTKROjUqkw
      MTGBw+Fga2uLarWK0Whkc3PztQHnvxU9N+uTkxOy2SxnZ2dotVp0Oh1Op5NyuUwsFsPj8RAM
      BpmZmcFut9NsNkkmkwQCAUKhkGL8ValUePLkSV/qgODV+/H06VM0Gg12u51araY8EOAbtECy
      LFGr1tAPmJDFLgIQ8e+jts8wZjchABqtjh9aoqDnjmY2m2m1Wop/Ts/9wePx0Gw2FYGZSqWi
      Wq0qrVEdDgdqtVppsmcymWg0GpjN5ivJqnS7XaX5HbyqBnv1+b46s+hd02g0iKJIo9Egl8sx
      OjpKs9nEYDDQ6XTQ6XRK2vCqxvJdkGWZSqWCIAgYjUZarRYDAwMXjbGum+Rd8yZyfQ5wzRvN
      BS1QOnJMR+/E8Gvh8fGJD+c3BHP5XA79wEDfZ4vq9TpPnjzBYDAQCASwWCycnJyQSCQYHR0l
      EomwubmJ2WxmfX0djUbD3t6eEhDv7e0pQfHOzg5arZaNjQ3MZvOlxwHNZlOxM9/e3sbhcLC6
      uorNZkOj0bC9vc3Q0BD7+/vkcjlqtRoHBwe43W6q1SorKyuKw3Wr1VJcop1OZ99tgXpN8lKp
      FO12m+PjY8bGxl6fBcrHTxkYXKSR8rHtS3Jnxk4w0yYeOSQQTnJ3xokvkmV4yERZ0mFQdTAn
      QhTbBt56ePtiVN0n9CzFh4aG6HQ6Sgak1ySvZ3il0WjQaDTKXrKnoRkcHCSdTnPz5s1z7gvV
      ahWn03lp45BlmZOTE8UNen5+ni+//BK9Xo9arUalUmGz2Wi1WsTjcer1OpOTk1SrVTqdDoVC
      gXa7TTgcVuzie05y8/Pz5zx1+gFBEFhcXOTo6Ijd3V08Hs+56xe/r7JMpVJmb3uHzZeb7IXO
      WFyYxWIbRpCbbK4+I1uu0mhUOT72k85mEZsN/H4/3f6TiijYbDYePHjA9va20hOr1ySid0g4
      MjJCKpViamqKZDLJ2NgYpVKJTqej2Im0221GRkZIp9PMzs6Sy+UudRw9S8dAIKBYHtrtdqam
      pvB6vXQ6HZrNJo1Gg3fffZfh4WE6nQ52u10RyU1NTVGr1ZRqt3fffReXy9V3ZwDwagXY3t5m
      bm4Oh8NBt9ulVCop1y/EALVihkA0y4jdQqkhMTVmI3iWxumyoxbAqIZANINraIBiE1w2E1Kz
      RqEpMDfl6dvsUKfTwefzMTc3h9/vx2AwMDg4iCRJ5HI5nE4nuVyOqakpTk9PmZ6eJhKJMDw8
      TCaTUTozDgwMkM1mGRsbIxwOs7i4eK4G9bKoVCpotVri8ThTU1MEAgGsVivtdptSqYTJZEKl
      UmG1WlGpVGQyGURRZHJyklAoxNzcHOl0GpPJRKlUwmazKc53/YQkSRwdHaHRaHC73cqD6UIW
      SJKka1uUa944lA1dTzZ7zTVvEhc6xBSTIda2DtBbzJTzVSxW04U/SsXiGKyWvg14v4neXtFg
      MLyKZ/5J51+pVBgaGqJQKLC7u4vb7SaRSCAIAu12m1zuVRVcMBgklUoBcHJygs1mY3Nz81w/
      qsvC5/MRiUSUnr86nY69vT0li7OzswOgNPOWZZmjoyNGRkaU5n42mw2v10u321Wa7r3OGOB3
      mV5SoFAoUC6X8fl8uN3u12eB0uEjNMZRvMdHZHwxFh8/wEyNKmbsujaJKnTTCTqqNiHfKdML
      twkFTrkx6yEaL2OyQClf4/5bjzFo+ufNCgaDys/lcpl6va4EwD1LELvdTiaT4fDwkFu3bpFO
      p5EkCbfbrRTPFItFVCoVL1684M6dOxwfH3P37t1LG0evLdLt27fJ5XJ4vV4ajQY6nQ6fz8fM
      zAz1ep1oNMrk5CRHR0eMjo5iMBhoNBrEYjHGx8cJBAKMj48rVuqSJCktlfoJWZZxuVwEg0Ga
      zSYLCwvngvlvfIirtDrEdgv7yAS58AkngRDr6xsc+f2svVwHYG/nGJexxZMX+4yNDbK++pyO
      0UbsLIZJU6NQ76/tVK/R3c7ODmq1GlEUWVpaotPpKGWFAwMDypNkb2+PZDLJ2dkZsiwr6dLe
      31xlxsTj8bC9vc329jblcll58qtUKqUNUqfTQZZlVCoV+Xwep9OJyfTPq70sy8RiMW7fvn1l
      4/i+iMfj3Lx581yfhx4XtEDFZIjdkyg3bt2ClgS0KOUziLpBDFKFsmTEM2Qmkzjm7361wp/+
      2Z8RPz1lYXYcjHaa5QxGnQq9dYQBXf9skkRRZHt7m9nZWSKRCHa7XdEGFYtFDAYDqVSK5eVl
      NBoNkiRhMplIpVJKFqjZbOJwOMhkMiwsLLC7u8vy8vKlZoFkWcbv9yPLMvPz8+TzeTQaDScn
      J0p6s1AoMDw8TKFQQK1WIwgCuVwOo9GotIedn59nb28Ph8OBwWBApVIpKtF+QhRF1tfX0ev1
      DA0NUavVuH379sUsUKfTodPpXOnNXnPNZXOtBbrmjeZikzxJJHjiJZ2vAFAsFC79pq6KQqFA
      o9HA5/ORz+eVnrrwSl8TCASUvrM9I9larQag+Aj1XieKIsfHx5fupCDLsmJm22uIJ0kSPp+P
      RqOBLMv4fD6i0Sher5fDw0PS6bSybQLI5/OUy2V2d3cJhUKk02kymcyljuP7QpZl4vE4iUSC
      dDrNwcHBuc/kwgQ4efmEvGRGkDts7+6wvr5C9NTLvi/ED3mpkCSJ58+fk0gksFgsitDt7OwM
      SZI4PDykUqmwublJu91mfX2dQqHA/v6+8qXy+/3s7+9Tq9V48eIFKpUKr9d76WMxGAz4fD6K
      xSKffvopfr8ftVqNWq2m3W5TqVSw2+14PB7y+TxqtZpEIkG1WqXb7fLkyRPK5bJijHt6eorf
      7+9LWxRZlhFFkWAwSDgcPtckG75hAlSqbdRSno8+e04ilQJkgv4AX336Ga0fcLnA3t4elUqF
      ZDJJJBLBaDRSKBRwuVxK5qSnl3E4HLRaLSwWC1qtlna7jV6vVwRnVquVTqfD0NDQldRY5PN5
      4JWPUbvdJhaLsb+/z9HREZIkkc1mefnyJaIoMjY2RqfTUXx/tra2qFQqpNNpUqkUd+7cwWAw
      oNfr+3ICCIJAKpXC4/Gg1+v55JNPfrMvkCyJnJ4cY3J40GskBBlatRINScfkxBiq/koC/Fb0
      EgGRSASXy0U2m1WqqGZnZxUr8UAgwPT0NLFYDLvdTiwWU0RlQ0NDiv7G7/czPz9/qSlRWZYJ
      hUJoNBrGx8ep1WoYjUZFC9Ttdmk0GgwPD6NSqbBYLCSTSSqVCqIoMjc3hyRJSk2wxWJRDL8u
      U9X6ffF1LdDg4CDNZvNcu9drLdA1bzTXWqBr3mi+cW2OxeMXfhePx5SfU7E4P9SpIkkSe3t7
      xONxvF4vR0dHyLJMuVxmc3OTTqfDy5cvqdfr7O3tKXr/s7Mz/H4/5XKZra0tms0ma2trV2oq
      W6/XWVtbo9lssrGxQbVaRRRFtra2yOfzSlf4RCLBwcEBsizT7XbZ3NykUCiwvr5OLBZjfX2d
      tbW1vowBvp6g6P38db6xvOfwyIvcLBMricw4DZwVOuTTpzSaXYRWiecrXn7ywUOSmQZjLity
      u4HeYMHkHGHQeLktgb5v2u025XKZRqPB9PQ0R0dHLC4ucnp6it1uZ319nZmZGTY3N3G73QSD
      QUUjJEmSkmFZXV3l9u3bl64F+jrb29t4PB6lAbhWq6VUKtFsNjk4OGBpaYlcLqfce6lUIp1O
      o9Fo0Ov1jIyMEI/HefToEQcHB313CgzntUC9TNDCwoJy/cIKIEkinU4Hf+CE9Zdr7B74uHNr
      jlzER7TQ4DgSZ8ptxx/ws/JynUo8yJ7vlK9W1lGr+0f68Dp6GZ9e8KtSqfryyQevMiCFQkFp
      cOf1ehkaGsLj8SBJEoODgwDcvn2bdruNIAjIsqykfVUqlXKW0M+mufF4nMXFRY6Pj0kmk7/Z
      FygePqGhsiLU0hQ6GmaHzQTTdUYcZqSuSLdRIl9XYzNDpiZzf9ZFtCTSrddZWJjr24qwHr0t
      kM1mo1wuK5NhYmKCYDDInTt32N3d5datWwQCAUZHR0mlUkrNcM8a8datW1eiBfo61WoVr9fL
      nTt3lEZxoiiSzWZZWFggGAxSrVYVzyNJkpiensbr9TI9PY3f72diYgK9Xo/dbu/LCfB1LdDy
      8rIi/OtxrQW65o3mWgt0zRvNBV8gWeoSOD5GMzB4rgN8qVBAZzD2/RbndfS0O2azmbOzMzQa
      jVIR1usKHwwGGRoawufzKVVgRqMRrVZLMpmkVquhVqsJBAJKJZJGo7l0X6B0Ok0+n0cURaWr
      fc/RWqVSEQqFFMvAXC6HJEn4/X4cDodSHwAQCATQaDRKgdDX6wX6BVmWFZlHz7T46117LkyA
      49UvqBpd7G5tMmjWcbz7kn/4cpNSIkyq2mbIKHAWLyDSodWoU8klCCRKjDivrhXQ90G1WkWl
      UrG7u6uUQ7pcLg4ODpiZmWFrawtRFIlGo4rGx2AwEIvFcLvd7OzsKM2pq9UqGo1GiR8u001B
      lmWKxSLRaBSbzUYymSQcDqPX6ykWi4qteygUYmBggLOzM6rVKlNTUxiNRkRR5JNPPmFwcBCT
      ycTe3h7VapV8Pn+uuVy/0DMw7lneHx8f4/F4Xu8OXa20GB33IIhtPvv8CfN3bnFj7gYGvQFj
      Mc7K5hpllZnjw30ODvYI+P1kM9m+F8pptVpSqRTvvfcearWadDpNrVZDo9EgyzIGg4FsNotW
      qyWTySgmsrlcDrVajdvtVizEdTod4+PjlMtlpqenL30szWaTmZkZxRrdaDSSSqXQaDTKE/7u
      3bs0m03m5uawWq08efKESqXC9vb2OS2QyWTCZDIp9un9hiAIVKtVFhcXlRj367v+C+cAd3/8
      mGcrX7Fw9xG0q5hNdtRiAMfULIM6FVZkXG4bwYyaqjyAy6IiUemvp8I3USgUlJRhu93mwYMH
      pFIpBgYGODo6wmq1UigUGBsbo1KpMDg4SKlUYnl5Ga/XiyiK3L9/X9l+uFwu3G73pY+jt+Rr
      tVpsNhsqlYqRkRFlVfL7/aTTacXVOpvN4nQ6FU3T3bt3mZ+fp9VqcXx8zPDwMO12G61W23f1
      wPBqa9tLfarVagwGwzl3u+sg+FvoNc14XSpTkiREUVTabv4u0+l00Gg0r93GtNvtK0vZXhXX
      adBr3miUtaC3ELTbbbQ6LZ1276kn02530el+959w3wVZlqnVahgMBlqtlmIFIggCer0eURRp
      NpsMDAxQr9fR6/U0Gg00Gg1Go5FOp6NsFXoNMmq1mmJBeJk0Gg263a5yD717NplMCIKg2KT0
      2jv1moP3rrfbbWW70/OL6sVB/RgEN5tN5b5FUTyXzbpgjLX77HMEyyAvNw9xjwzT7dR5/sUK
      p8ET7E4XkqCi025Sq1YRZYlMJv9PnUOuZHzfG6lUiqOjIwwGA5ubm6TTacLhMIlEgsnJSfb3
      9zk5OVFShlarlbW1NaxWK2azmdXVVcVEd3d3l0wmQyqVolar4XK5Lm0csiyzsrICQCwWo1gs
      olar8fv9NBoNjEYjq6urFAoFQqGQ0kJpa2sLt9uNWq3mo48+YmhoSGkM2CsTnZyc7DuD3K+L
      4QC2traYmppSJviFIPjGzVk+f/Kc+aUFtg7OoPWqS3qxVEIuhdiM2iHvI5ioMmaViCTy/PR/
      +F+YcZkvcVjfP8VikVarRSwWUzyCnE6n8qUXBIH79++zsbGBRqMhGo1iNBqV/gHFYpFqtco7
      77wDvOo5lslkLvXL38NsNhOLvVLvyrKMzWZjYGCAiYkJJfNTKBSw2WwIgoDZbFbsUY6Ojuh2
      uwQCAcVF2ePxKCa6/YYgCJhMJux2OxqN5kKMc2ECmB0e1OwzNTVB9PMXmB0OnKND2FtaKpKR
      YuSI0VE7d+/N4FJXYWAY20D/b48mJibIZDJKHl+v1yMIAtPT04TDYSwWC1tbWzx+/JidnR2l
      /FGv1xMMBpmeniaXyynVU72syWUHlb0tjV6vx+PxEAqFlEZ/FosFgHA4rDTD6PVA02g0nJ2d
      MTk5iclkQqfTYTKZiEQinJycMDQ0dK6xRL8giiJ+v1/R//x6f4MLYrhrztOLDczmb17hJElS
      YoPfder1umJy9U30jMDeJK5LIq95o7k+B7jmjeZCDHC8/oxgpcOjR49xDQ5QL0XY87V5+60b
      V3F/l0a1WuX58+f89Kc/5bPPPsNmszE3N8ezZ8/44z/+Y/b39zk9PeXu3buKPqjnHvHo0SOe
      PHlCo9FgbGyMs7MzpqenCYVCLC0tXYkcAmBjY4NcLofH4yEcDvPOO+9gsVhYWVlBq9VSq9UQ
      RZGRkREqlQrvvPMO4XCYYDDI3Nwc0WgUQRDQaDTEYjF+/vOf991psCRJrK+vU6/XcTqdRKNR
      PvjgA/R6PfANE8DhHuYofkQ26ucv/u//j0d/9D+T2A+QzB2S82eZnrHx2eou/+v/8X+yONZ/
      LXNeh9lsZnx8nFbr/2/vTJ7bOq8+/WAGiIEDSBAUJ4GDIMmmZUmWh/hzOp/txF/1tiub3vf/
      05tsuurbdXdVL1LVXdWpdCqxJVkSKQ7gDI4AAYKYZ1zMwL24vVDwxgytOJNJw+KzYvFywCHx
      3vue857z+zXxer0Ui0UxQdXpdOh0Ovz0pz9leXmZTz/9lMXFRd59911SqZSotPT396MoCu+/
      /z4bGxt89tlnVyKM1aVb39fpdOj1ehqNBoODg4yPjwu59E6nQzqdRqvV0mg0hNdZOp0WpuC3
      b99mcHCw59788OpvMDExQb1ex/lHl9NvFiYuZEONZhuTvsNZJM6777+PqmqxmA309w/hfecB
      Nydv8JOf/oxhh/nyorgEisUifr+fZDIpDDK6U2Hd9ugXL17w1ltv8eTJE6anp9nZ2QFe1du7
      rcUmkwmfz4fH4+Hx48dXUgb9Jt0DL71eT7Va5eTkhM3NTUqlkpBMHx8fR1EU4vG4UL52uVyU
      y2VkWRZ6SL1IdyKsVCqxvLxMqVQ6V+y5zgG+A1VVyeVyOJ3Oby0BKopCqVRiaGjoCl7d30bX
      OM9s/vabVzabfW2cP1bEApBl+Upk/K655ioROUC3q/Gaa94kLvQClTMRnrxYo69/BHuf6Tt/
      wOaaj6EbN+i99OjbkWWZ5eVlMpkM0WhUKAqHQiFWV1ex2+0sLi6i1+vZ3NwU1YX19XVOTk5o
      t9tsbGyg1+tZXV3FarVe2eFSOBxmY2MDp9PJ0tISQ0ND6HQ6Xrx4AUAymaRSqZDL5Tg8PGRs
      bIxSqcSzZ8+w2Wxsb2+Ty+UwGo2sra2d09TsFTqdDj6fj0gkgiRJ7O7unvM6u1AF2t/Y571/
      /QWWSoJ//9W/s/Czn3PmP2XWY+er5QA///gOUtuMRc6xeJhlYWqk56fBvklXRLV7atrX14ei
      KNRqNR49esT6+joff/wxKysr3L59W1SBzGYzRqORarXKvXv32N7e5pNPPuHw8JDR0dEriWVi
      YoJyuUyhUECv16MoCpVKhWKxiMvlYm5ujlAoxNnZGSaTSQjndkufHo+Her0u+p56EY1Gw8zM
      DJlMhsnJSWRZ/ssmeZOeURa//IqN9V36h/pJZIrcmJ4nE09i1EKp/kpUKHQWQ8vVyf59XzSb
      TfL5vBigTiQSlEolFEVhcXGR6elpnj59itPpZGtri3a7TT6fJ5fLkUi8ahz0+Xy4XC6ePn0q
      +m+ugsXFRfL5PKVSiVQqRTweF20b6XSanZ0ddnd3hex7MplEo9FgMBgIh8M8e/aMarUq7EV7
      sVVGURS++uorarUajx8/plwunxvtvO4F+g66DiOvawRTFIV0On0l449/K8ViEb1e/9otWSwW
      68mGt38EsQAURblOgq9547g+B7jmjeZCEhw/Wmc7Uuad+w+44bSD2mH1xQvmH7zPwF9RFepV
      MpkMfr+fgYEBKpWKaGtot9s8evSIo6MjgsEgt27d4vT0lMnJSaG+8NFHH7G+vk69XucnP/kJ
      z58/Z35+nv39fe7cuYPb7b7UWHw+H/CqvSOdTuPxeDg6OuK9997DZDKxtLTE9PQ0mUyGfD7P
      1NQUhUKBDz/8kFKpxObmJrOzs8IvuVaroaoqjx496rntUafTYW1tDY1Gg8ViIZfLCekb+JYF
      UMpEqbT7qaYC/G4jj6Ovj+W1fRQt5Ap1pt39FLCgkdI43WMc7B0wftNDMpHgX/71FwxZe3M4
      ZmRkhKmpKQYHB4nFYjQaDTFBJMsyt27dolqtMj09TSKRQK/Xc//+fZLJpFBZa7VanJ2dCWsh
      nU53zo/qMlBVlVQqhcfjEVNqfr8fvV7P0dER8/PzNBoNDg8P+eKLL9jc3KRYLJJOpykUCjid
      Tubm5tDpdNjtdlqtFk6nU7hO9toC0Gg0vPXWWwSDQbxeL7u7u3Q6ndcLY2k0OsYnp9G2JNxz
      d6iUJO7evU2tUsGqlgjHCszf8lCoyNhUiWCiBHIDs3O8Z9/88CcFMavVzafs3gAAFpJJREFU
      islkolwuI0mSGJWsVCpYLBYqlQpOp5N8Pk8gEGB2dpZqtSoOEuPxOLFYTCiRdQ00LjOO27dv
      E4vF8Hg8OBwOFhYWcDqd4hxgfn6eoaEhMcnm9XqFLOLp6SmxWAyj0YjNZqPwR5vcZrPZk8JY
      XffPoaEhlpaWsNvt58qgF3KAZlUikcnTPzCAxWpDaTZBo0GvUciVmwzZLOgtVuqlLC2tCbla
      wmTrx2AwYrX07hZJVVWazSZGo5FEIoHD4UBVVXFHnZ6eFrX0ZDKJ2+0WekDhcJjh4WFkWWZ4
      eJhGo4GqqmQyGW7cuHFhDO/7jqP7pu0qVNjtdvL5PCaTiXa7jSzLuFwuZFnGYrGIBrFCoYDL
      5SKfz4ut4MDAANVqVQht9doToNPpEI/H0Wq14on8TWnEcxNhvbjCr7nmH+HaJO+aN5oLvUBy
      s8rqyiqy3KKttWI1X97j+yrJZrPCBE+n05FMJrHb7ezt7eFyuSgWi8TjccxmMz6fD7PZzPb2
      Nq1Wi8HBQY6Pj4nH45hMJuLxODqdTvThXLZsYiQSEXo/3dNdn88nhlpWV1fpdDpEo1FSqRQA
      R0dHjI6OIkkSPp8Ph8PB3t4e8MoA8C+1hP+QUVWVvb09IQMvSdK50/kL7+695SXG3vkYQ3KT
      ZM5GYPsYx9AgDucorWqOaCCGajFicQxhUytUNXasujpGSz+FTIqhiTnmJq+m9+UfYXh4mNnZ
      WTQaDYFAAI1GQ61WQ5IkAEwmE41GA51Oh8fjIZPJUCgUuHv3rsgTZFlmbm6ORqNBNBpFp9Ox
      t7fHw4cPLy2OrheY1+sVr7nr9F4oFLBarQwODpLL5XC5XASDQWRZxuFwIEkSFosFs9kszP+i
      0SiNRkP4hfXaAoBXkjfBYBCbzUYkEuHGjRvi2oUqkMGgoV5voSgdatlTTmJJgvEMa49/S9uk
      Q5bNtDo6SvlT4pkapWSEk1iKEVODjeNXk1G9SjqdFmJXoVCIcDhMKBSi3W5jsViErGC5XMbj
      8fDuu++yubkphLS0Wi0mkwmtVsvc3Byjo6NXIjZrs9lIJBJC7EqWZdxut3CDHxoaEuOPWq0W
      WZZptVriY7fbTa1WE+0x3SdYL+aIqqoSiUS4e/futxp8XOgFUjsy/u1NnKPjWG02AkdBRsec
      bPh2+MV//IxStoqqA1QFpVakqrHjsOhwDTvZ21rH5p5hyv3Dn476czqdDpVKRVR/JEmiv7+f
      YrHI2dkZDoeDs7MzJiYmiEajTE9Pi4HzVCqFw+EQd9tIJILH4yGVSnH//v1Lv2t2n04mk0mI
      XcXjcW7evEmtViOXy3Hz5k0ymQxGoxGXy0U8HheWooFAgHv37hEOh5mYmCCTyQiRsF57AiiK
      wvr6Onq9HrPZTKFQ4OHDh2Io/pw69HUSfM2bxnUv0DVvNBdygHZdYnl5lVrrT0+DQiZNu/e2
      f38XqqqyubnJ4eEhuVyOYrEIvMoPVlZWXilo/3FSanV1lUwmA0A+n2d7e5t0Os3a2pp49F51
      ThQOh2k2m6ysrAgvYJ/Px/HxMSsrK7x8+ZJqtSpec7VaZWlpiXq9zsbGBqVSiZcvX4rKUa+h
      qirBYJBQKIQkSeL/1eXCAth+8Yw+1xiBlf/Hf/v1l/jW1jjY2iSdSbK4vM7ib/87v/7DMr/6
      1X/lLJlm+cVzsqXan/+YnqWbEHo8HprNpigTdrXxNzc30Wq1WCwWpqenOTo6QlVVtra2mJqa
      Etqb3WP37l7zKsjn8ywvL1Or1ZiamiIcDtNut4Uh9qNHjzAajUIyXKPRoNFocLlcrKysoNPp
      2N7e5v3338dgMPTc/h9eLQC73U4mk6Fer5NOp89dv7AA7nzwMcUjH/mmnrfv3CZdyKMDFh9/
      SSoaRD8wzltvv4Nn7jbapB/j2AwraxuXFc/3Tnci6vnz57hcLvH5TqcjRgbz+TxbW1sUi0VR
      5Wk0Gjx//hxZlmk0GrTbbTKZDNvb21cVilBEy+fz5PN5bt26hVarRavVsri4KGr77Xabra0t
      crkcWq2WcrmM2+1Gr9dTq9VIpVK4XK6eXAAajYZMJoPX6/3W0dQL5wBVqUDH4uTewl12DkJ4
      5+exAOPeeQKhOHO35jmKhJmfcKEMuqkcH/HuvQeXEcul0FVT83g87OzsUCqVaDQa2O12ZFnm
      wYMH7OzsMD4+TiQSYXR0FL/fz927d8lms5RKJVRV5cGDB/j9fmZmZq4sli+++IJUKkWr1SIS
      iaDVajEYDCI+RVGEHPrx8THJZJJ2u40kSYyPjxMIBHj48CGKoly5wNffi6Io5HI5Go0GJpOJ
      VCrF7Oys0Ea6ToK/A1VVz7XP/q3Xf0goioJWq33tnVxRlJ6I45+JeAJczwRf8yZy0SlBVcln
      c3TesOdC12FdVVWy2SzlcplSqSRai9vtNul0mk6nQzKZRFEUMpmMGHjpyo188+sSicSVVE5q
      tRrNZpNWq0U6naZcLhOJRKhUKuJ1VatVMbtQrVbJZrPCH6JarYo46vW6+Dv04mZBVVUqlQrt
      dltIxHyTCzmA3Cjx6//1P/i3//xf6OQjoNGw6g/w808+JJWvMO50IDXaaOQqmIdwOx2XFsz3
      Sa1WY3d3l48++kjInLRaLTQaDZ988gl7e3vU63Wxp45Go2JL8d5777Gzs0O73cbhcNButzk9
      PcVoNCJJEl6v99LiUFWVaDSKwWCgUCgI+fNsNkun02FiYoJKpSKGYQ4ODujr6xOVLbPZzJMn
      T7h16xaZTAatVsvIyAiJRIKPPvqo57ZIqqoSCoUYHh4mGAyi0+l4+PChKF5ceAIkg7u0tEb2
      dndYW14nV25itfbx8vHvWX2xiG/5BelSkc2jBBsri5ce0PeF1WpleHgYrVZLp9PB6/Wi0+le
      tYeoKlqtlvn5edLpNF6vl3K5zOTkJAaDQZTa+vv7RctAuVzG6/XSaDQuNY6uHLhWqxXiVt2P
      JycnxVCI1WrF4XAwPT3N5OQkyWSSRqPB1tYWpVKJdDpNs9kU/URzc3M9aZKn1WqZmJhAo9Fw
      48YNkeh3udAOncxU+OzfPqdVyGK29WG2DSDXK4yNudFb7IyPuZmcmaOaOsU84GZizPW6391T
      lEoldnd3UVWVs7Mz8XmdTkej0cBms7G/v8+jR49YXV1lYWGBYDAoxiM7nQ6tVguXy8XR0REL
      Cwusra1x9+7d16oxfx+oqorf7xfulYFAQMz46vV6Tk9PyeVy2Gw2cR7Q3Rbo9Xrm5uaYnp5m
      cHCQfD6P3W4nmUzSbDZxu909VwrtHlx2J+LMZvM5qfdrYazvoGu0/DppwE6nQ7vdvtIDr7+W
      RqOB0Wh87Z286yP8JiEWQHf+9Zpr3iSuzwGueaO5UAVa+/K3WCYnODguYNM3+Nl/+BcUVcfL
      J19jMbWQR7x8svDjNcyTZZnf/OY3eL1ewuEwBoOBTz/9lK2tLU5PT7lz5w6Hh4dMTk4Si8Vw
      Op188MEHPHnyRJjkRaNRcd3r9TI7O3slsaysrNBsNhkZGeH4+Jh33nmHqakp1tfXaTabSJKE
      wWDAbreTSqX4/PPPqVar+Hw+JiYmCIfDfPbZZzx+/JixsTHu3bvXkznA8vIyU1NTpNNp/H4/
      v/zlL8WW9cJm8OaMm+2tKM4BFb3Rwe9/9xt+/9vf0ehANJnDNfTjKHv+JRwOB+VymeHhYXK5
      HIqiiHJoKBTi008/JZvN8uDBA0wmE6qqMjw8zPj4OKqq8sEHH5BOp/nss8+utBvU4XDQbDYp
      Fot8/vnnSJKEJEmk02na7TZOp5NcLoder+fevXvUajUGBgbEouiWb/v7+ymXyz25RdZqtXi9
      XrRaLe+88w5vv/32uXztwhOg3+1Bp4sxqm9Sd9/FGC5Q7fQxaOvDNTLA9PiPo+rzOlRVFZ2P
      BoOBqakpYrEYFouF5eVlHjx4wNdff82dO3fw+/243W4ikQj1ep1Go8HY2Bibm5vcunWLJ0+e
      cO/evSuLRa/Xo9FoGB4e5smTJywsLJDL5Zifn6dYLIr4zGYzR0dHzM7OUqlUxOjn8fExkiQJ
      47xepNPpsLu7i6IotFotbt26de76dQ7wHXQV47o1/j+n20PvcPzwn4yVSgWTyfRalYpisfja
      OH+sXJvkXfNGc22Sd80bzYWT4PDOCxrWG6y+eIbHc/PcF5fSSVSzDUPvnYj/VTx79gyDwUAm
      kyEQCGC1Wnn69Clzc3McHBzg9/ux2WwsLS3R398vRHDdbjdLS0sEAgEhxCTLMltbWwAMDAxc
      Wgzd6bSDgwNKpRL7+/vo9Xp2d3eZnJyk3W7z+PFjKpWKEPMqFotsbW0xMTFBMpkUcuJLS0ui
      HWR5eRmPx3Npcfyz6I6A6nQ6Tk5OWFpaYmZm5vXy6M1Kic3FFxRzOVbWVl79kGqRSFJi2DaI
      3e0nFq8z0m8lWW7T73Dw+ScfXm5U3wOZTAa73U69XqdSqWA0GoXCM/xJO/Xs7AyNRiOay7op
      lCzLtNttYrGYOD2+CkVljUZzoT2jv7+f4eFh4FXT3+3bt8nn82i1WhKJBB6Phzt37lCpVIBX
      StBdhbxGoyH8EnoRrVbL7OwszWaThYUFOp3OOa2mC/dyvbmP9z/6CWNDDgqpKLF0kbbcRmm3
      UVTQaHXcueOlI8vM3L6Hkctt9vq+aLfbJBIJotEopVKJcDgsKiGxWAyz2YyiKNjtdjQajegY
      jcViJJNJsYUcHR1FlmWKxSImk+nS/QE6nQ6pVEq8+fV6PfF4nJ2dHc7OzqhWq+zt7aEoCg6H
      A6fTCYDf76fZbFIulzGbzdTrdWw2G8VikWq1KhTkeo1uFWh/f1/oNX2Tv6oXKBY65CRV5sNH
      DzHo3pwKAbzaUqTT6dfOxCqKQj6f74mRwW5Js6+v71uv9/Ls79/LOZO8Xq31XnPN38v1OcA1
      bzSiCtTlbG+Z5759Km09YyOvqV7IVTZ2woy5nd/5C1r1PAfBJK7hwX/G6/3ekCSJp0+fYrFY
      WF9fF2OC3faA4+Nj1tfXsdvtQvb85cuXRCIRpqenWV1dJRaL0Wq1WF9fF/LoXef5y6RSqfDy
      5UsajYaoAq2trWE0GjGbzbx48YJSqUQul6NWq5FOp0UVqFwu8+TJE+x2O6urqzSbTQwGAz6f
      j6mpqUuN459BtwrUdf7JZrMi74FvqQJVCikqDR2Vao7//T/XGLvpJlsoMe+9he/rr7j1wU9J
      nOzTUq0E9ze485YXqdam0VboNyjEU3kGx8YohCNMzUwQjkexDM7w1qWG/bcjSZLo7Z+YmECS
      JDH0Aq+qJ92+f6fTicViYWFhQSjHFYtFhoeHGRkZ4eDggMHBQWGrdJl0ldAMBgOlUgmdTids
      m/R6PQaDAYfDgSzL3L17l2AwSL1eZ3Z2FkmSqFar4u/h9XqFUnavjUJ20Wq1zMzM0Gw2mZ2d
      xe/3n7/+Ld9C/+AA5UIWy8AYuk4Ts0HlYGeHjlbh8OgERd+HDi1atUEkW8G/4aOSDNIxW6h2
      jBQLGQxWJ33tOqaBAXohb+6ORMZiMUKhEI1Gg2AwSDAYpFAoUKvVsFgspNNpoaETDoeZnp6m
      WCwyMTFBLBYjk8lgMpnY2toiFApdujlGNyk/PDxkaGiIZrPJ6uoq4XAYnU5HJpNBURQkSRLx
      NRoNjo+PURQFo9HIwMAA+Xyeg4MDIQR2eHjYs1WgQCDAyckJoVCIYDBIq9US1y/kAHKrSaVW
      p89mg46KXqehUmtgtZio1xsYzRZajRp6o5l2s47JYkWR2+i0GnQGE41aBYPJAqqKQa+lXKli
      tvRhNPywnWY6nQ7lchm73U6j0cBgMAgtzVwux+TkJPV6nb6+vgs9NbFYDJfLJXwCms0mZrNZ
      LJqrmBbrzr12BaG6ShHdp4DZbBbnFH19fbRaLTKZDBMTE9RqNWw2G/V6HZPJhF6vp91uX/pi
      /mfQtbCFV+OtXeGC7lTcuSrQdT58zZuGuC0ritKTj7hrrvlHuNALlA7v8XLrEItjEPuf+f4G
      AkcMDX135adXOTw8RKPRsLu7S61Wo1gsEo1Gha5ONBrFarWytLSEzWYTBnrd7+mKS21vb+N2
      u9nf38dqtV66TVKz2WR3dxe3283q6ip9fX34fD6sVit9fX2k02nS6TRnZ2fEYjF0Oh27u7uM
      jY1Rr9fZ39/H4XCwsrJCJpMRX9+Lh2SqqrK/v4/RaCQej3NycsLY2JiI40ISXEiEKTdBbVZZ
      /PpLjk/jPPnyD6xtHXIaOWV7bZHlzb3LjuN7pyt6lc/nkSSJUqmE3+8Xb97+/n5kWebs7IyF
      hQXi8TgOh0NsHZPJJHt7eyQSCWZmZgiFQiQSCWq1y5WOV1WVQCBArVYjGo1SKBTo6+vj5s2b
      1Ot1FEUhHA6L/p5KpcLu7q6oVpnNZnFa/ODBA2w2G9FotKfnBIaHh6nX60iShNVqPfc/ubAA
      NDod3rsLyPkoJ6cnbCyv0bE7ySUyQIelF88pV388fgBdzs7OKJVKnJ2d0d/fT6PREK7ptVpN
      DL5otVqSyaRIdrvXPvjgA9xuN6qqksvlSCaTSJJEMpm81DhkWRZ3ulAoJKpWkiQxMjJCNpsl
      m80SDoexWCx0Oh3sdjt6vZ5UKoWiKNTrdZrNJsfHx8zOzvLee+9xenras+3yrVZLmP6Vy+Vz
      yfyFXqBaKUswkmB07AZSqcBAv4M//N//w423PuGdeTftmkSlY8Qz4b6ygL4v2u02iqKQTCZF
      paBcLlOtVhkYGCCTyXDz5k3S6TTj4+MEg0FMJhOKotDX10dfXx9Wq5VEIsHNmzeF8+JVVE8q
      lQo2m41qtSqkHK1WKxaLhdHRUer1OtlsFr1ej9PpJBaLIcsyIyMjxGIx3G43FosFq9VKPB5H
      r9d/q77+D51uGRTA5XJRq9XO2aSeM8nr1RV+zTV/L9e9QNe80VzIAYrpKJVWh9PTyFW8nitH
      VVWOj48JhUJ0Oh0ODw+BV60QS0tLtFotfD4f+Xxe9JgDJJNJtra2qNVqvHz5knq9zsrKinCa
      vwqq1aowwVteXqbVatHpdFhZWSEQCHBwcMDa2hqpVAqfz4eiKLTbbeF7trm5Kapfe3t7PX9O
      tLGxwdOnT8+dBF9Uhw5ssXN0woulJY4DYcLhE479m2ztBznY2eDr5yskYyc8W1qjrfT2H+Tb
      qNfrhEIh+vv7OTg4IB6PA7C5ucnIyAiRSEQMm3QrQd3Sp8vlYmNjA5fLRTAYxGg0XolTfJf1
      9XVGR0cJhUJMTU0RCAREQnjjxg1SqRQzMzOEw2EajQb1eh1ZlqlUKhQKBWGd5Pf7xURZL3P/
      /n0cDse5/qzXTveqGgOnoT1OQ2G++nqRdDJNMJJCLxXZPDpmY2uNavPHeXCm1+tZX1/n8PCQ
      09NT2u02Go0GSZI4OTlBo9Gwvb2NwWBgc3MTeNV0tbOzI1onuqOTV2mS151ci0aj4nNarRa3
      283KygoTExPCHhVe5YFdj4Au3faO3d3dnj8oLZfL2Gy2c+LAF3KAYjqKfuAGuUSU4MbXeP7l
      P9HJHFHuWBnut2AEqq0yyUKTB/cWMOl/XBPyqqpyeHiI2WxmenqabDZLPB7H4/Gwt7fH/fv3
      2dnZYXZ2lng8jtVqRZIkhoeHyWazzMzM4Pf7WVhYYGdnhzt37lyZZlC3xv/222+zt7fH1NSU
      cI0cHx8XHbDdAX+TyYTL5WJvb4+5uTny+TyTk5NUKhUxS9yrZwEAuVyOwcHBcwvg/wPlcmkP
      rZpA4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='contracts_my (2)' width='192'>
      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
      HY0QgKCj+f8XTBd1LNRwFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='cut' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy915MkV36o92VmeW+6q9rb6e6Z6TEwAyyBxQJcim5XusEQyVBIcSP0oAeF
      3vQXKIIvelXEfaGkiGt045KX5nJJkSLXYQcY12N72ptqV11d3ntflZl6GHQtgB7TA1RhgNn+
      Xiais+bkyao85/z8T1BVVeWMM35DEV/1BM4441VytgBeklqt9qqncEYXOVsAL0mj0XjVUzij
      i5wtgDN+ozlbAGd8Yzx+eI9as8zRYeLkRbnO4VH8+QMoTR7cf4z8/A/x+O4t7i2uIitftO8E
      /AG+bPHRnGLeZ5zRFQIH67QNErlAHY1BoFUvEzk8oK5KDI4NsXhnmeQbV3Bq6mRbBnRyHufg
      Odz6Jg9X9xhxidzzlbn2W8+7i0K20MKoj7KzoyOezHN+sg9/vEwplaRSq2GQmiRKAl6LenYC
      nPHNYeqboJIK0GyUCUci+A8DVJoC7abMUbqJZ2SKxNEON27doVosEYhnGB/2cLDpY3y8n0Sh
      xdzFC0gvuE82foSpf4pEYA/foyXub+9x5co81WyQw1gW3+Yuq4+WWD0II5z5AV6OfD6Pw+F4
      1dP4TpJIJrFoFLJNDdl4kP7BETSCACqoWh3JwC72oWl0jQyxksqgx8GAx0O7UWZ5bZcrl2bI
      10W8TvNz7qKSTKTxePtJBPeJ5dqcm/bg2w0zMjSAoMqUihlagoVKdONsAbwsZwvg9eJMBOoV
      qkos6CeWyndnPEXm6CiEgkwgEHzmx3L53DOv5XP5E0rgU1EVjo6CKMgcBYJ8fosMHe6yF4ic
      ft7PYX9zkV99fJ1U+cWm5b3dPZSvcI/YgY9CU8Hn83WefXdvp3Nd+rM/+7M/+wrj/sZSr9cx
      GAwv/Fwl6efeboapARvltkC5EOOv/uNfUi/G+Xg1jNAqIrWbbO0f4naYePRoBYvDjVGvffqA
      rSr/8T/9JWOD/fztz+9waaKfrcMo9371/9LQuUmHdmhIFlaX7mOSVGL5Gu1Gk3qtTDETJ5Sp
      4ttYZXx6+sW7ntzkL//T/8PA4CB/99NPGB8egHYNVWvi3r37qLkQBdFJpZwmFAjTLKfJVBUi
      +9tIFjcm/elsK5vb61yc8rC8kyG6u05babK0tkO9kmVp3UexmCYcyxI+2OTR+j5Cu0g812DQ
      4zrV+AByNc7GXoJsoUTycIdQukIyfkRbFchms2cL4GU57QIopwIUNF5mHC0eBUokY0GsFitv
      nR9FsY6Qix2Qj6TQSSq/Wlzl7QvD7MfajA7Ynz6g3CQajRFMlulzGDjYXKVYqaG3Onjr6gXW
      Fh/hO4hjNsLy40eUmgKFRIhIMs/q43uUagqSJDB1mgWgyERjUSLxHA67GbmYZjeWZ2Z6gpVH
      d9DYxygGtxm6eJFD3wbRRIUJl8LNxR0UtIwNe071XQZ8K9x84OPqhQE2VnepNOucv3SFwMEO
      br3EWiDOB+99j+3dHUw6PQaNgj+a59Lc9KnGB9CbbNz+xT9w/spVoqka1VISjSRQLleIp9Jn
      OsDLclodQFVaPLp3F7tniGg4hmtwEKmaxu4dZdcfZcRrQ6dK6A1aMpkYdx8u8fbv/CnXZr1P
      H1BusHMYppQvYbMZ0cg1IoU2o31mSoqWfDiAyTWC1SxQzaVo6d2MWNtkBS9K9oCqYMNh0TEz
      O3OKBdBm5+CQcqGM1WbCrOZZT1r4wx/Ms7O7x+zsDIGdPYbnJjnaDVDKRjH3DRMPHjI6e4Wp
      kdMtgGIhh9lsJpsrk89nGBoeIhgIMTLiIZYq4emzY7XaSYYPqWHAKNRpihbGT7nAPvsliEfC
      uAdGyUT9YHKjlxSUeplsQ/z1Amg0GrRarZcY+DeTUqmE1Wrt6pjNWolEpszQ8ACSIHR17G6Q
      z6Yx291opW/f3L4unQUgyzJnh8GLKRQK2O3PEFPO+O6hfolcIqSWG7IaCBx9+dIXqRfVULLw
      /M+8ItrNmrq1sa5mCiW1Uq2rqqqqrVarK2Pncrmn/n11dVX1+XyqoihqJpNRl5aW1Eajoe7u
      7qrtdlt99OiRGovFVFVV1f39ffXg4EBNp9Pq8vKyWq1W1Xv37qnNZrMrc3wa29vb6uPHj1VF
      UU5cazQa6v7+vhoKhTqfURRF3dvbU+v1uvrw4UM1n8+rm5ubaiQSUVVVVaPRqLqxsaFWKhX1
      /v37ar1eVx88eKBWKpWezF9RFHV/f1+t1WpfeQxZlr/wO2xubqonxMHY/irru34W7j/Gt/aI
      pc09wpEw8ViEnd1t7t25TSKV5M6nv2Dl4AWxG6+IXCoGOgu0q2yurhBN5YnHYwT2t9k7DJ/O
      FPiS9PX1EY8/+T78fj9Wq5VEIkG5XEaWZSYmJojH4yiKQi6XI51O4/f70ev13L9/n6mpKQ4P
      D3swM1BVlUQiwcTEBMJTRKytrS3i8TgWiwVZlpFlmVKpxPr6On6/n8HBQdbW1lBVlXA4jKqq
      RCIRZFlmeXmZiYkJ7ty5w/DwMDs7O0+ZQXdotVpUq9Wv/P8//zsAJBKJ58UCNTgMF0BNkrNZ
      MIkK0VyNtybsfHJrgd+6Mkcp++2UCe19g6himkg0yeDYFK1KgUazhlZrhFqJNvAMY+NXQlVV
      BEFAEIQviJFGo7FjMYpEIszPz3fxri/HyMgIS0tLfPTRR2i1v376RqPB/v4+jUYDl8vF1NQU
      kiSxublJqVQimUx2Xef5KgiC0BXR8/h3UFWV0dHRk1agfDKM1jFEOhZGqeWpSg4slEjVBPqc
      NvqsOkoNlZB/n4HpS4x5vn3ycLNWYnf/iNHJKbSShCK3kOU2+75N+sfmGB3s46su3adZgVRV
      ZXl5GZPJRL1eZ3R0lGAwyNjYGKurqwwPDxONRunv70cQBAwGA6IoYrPZCIfDzM7Osra2xltv
      vfWFl7NbqKra2Znn5uZOnAKqqpLJZAiFQpTLZSwWC1euXKFUKmEymVhdXWVubo5wOIzT6SQe
      jzMwMEAul2N8fJzNzU2uXr3K2toa8/PzmEymrj+DLMs8ePAArVbLO++885XGqFQqPHz4sPM7
      CIJwpgS/LGdK8OtFRwRqt9s0m81XOZevjaIoPTflVqvVs43iNaKzAPR6PXq9nko+xV4gzrkL
      57E8wy3fblSoyxosJv1TripkM3l0okw0V8fjtOBwOl84kXw+h93uQBCexInXZC1Sq4xkcWM4
      ZdbC8SKWm3UqTRWLQaRYbeOw/Tp6sNlooNXrEYBWvYagM6J5iYgoWZZPdcQnEgmcTidHR0dM
      TU3h9/sZHR3FYDAQjUbR6/VoNBqKxSIej4dgMMj09DSi+M2HZ8myTDabBSCdTnP+/HkEQSCd
      TuNwOPD7/YyPjxOPx3G5XFitVjKZDM1mE6fTSTgcZmJigsPDQyYnJ9FoepNmkk6nsdvtXRUT
      T4RCHCzfRBq4jEGuEEmmaBSSxPINGrkooUyef/rrv0KnlUmkyyRKNdIBP1VVRylxSLYuYtPJ
      LG1us7Wxx8zsFEuPH2LWquxH8ghyC6VZZWdnH71ew5rvEKNOolGv8ejxQ1w2C2vbfhqFBG2D
      m8jydUp6L0e7G9Tqaf72b64zOTXE1u4hbpueh4ur2Fz9GHRPvnBFUZBlmVomw048jq5RIJBp
      oGkVKLdE5GqOTV8Am92K2myRTUVRDWZCgSPsTifiKZxQzWYTvf5pC//X5HI5PvnkE0RRRKfT
      sba2htlsJhaL4fF42NzcJJfLkUqlaLVa7O3t4Xa7yeVyOE+xWXSbnZ0dgsEg9Xqd8fFx9Ho9
      jUaDjz/+GFVV0el07O7u0m63SSaTHatQtVolGAxis9lYXV3F4XAQi8Xwep/hzf4aKIrC3t4e
      RqMRo9HYtXFPbDeq3GZ7a5PNlYfURSMrPj+RrWXWdvdJZ0qMTk8x6nVAs0QkFSGaqrO7eJuf
      X3/A1tYWksHGD65dRNBZcTufyMpHgQB3bn/CxsoSC483yCcT3Lz9gPmL59ja2uZga4OGAuGj
      AL6NBwjei4z1Pdm108E9RJ2G3WSJqYlZHtz4JYG9ff7+5x8z0adlM/y0aEsBo0Yg1xKwizWy
      NYlcIkIyV2bI4yIei5GNRqgBsaM9srk0idxXN699mfv371Or1XC73YTDYWw2G4VCgVwuhyRJ
      uN1uIpFIZ9ecnp5mf3//lVScaDQarK2tEY1G0el03Lp1i1arxeLiIrVaDZPJRCqVQpZlNBoN
      yWQSQRAYHh4mEAh05t7f308ymaRYLPZknqIoMjAw0PVxT5wAqgoz829i0WvwDg6iVjIoln4G
      7Hpa6PHatNQw4nS6Mdts9DmcOF0uXFYtds8wg/0ukAyIrSx74SxD3j5EVcbo6Ofa/ARl0cFw
      n42BASe7gSR2XZuKqmd4aACjVgStmfHxcUw6CUVpY3b243LYMRkdtEpRJs7N0FIlJrwWPrn1
      kIHhMTRCi3JdwWTQIssyqCo2u5G2YsBqtaJUc4gmJ3q1TqUl4DBrSOVr9Hv7sFnt1Gp1PB4P
      eu2Lco1OdwLMzMzQ39+P2WwmlUoxPz9PLBZjbm6OWCxGvV5nZGQEAK1WS39/P4VCgcuXLyNJ
      L55DN9FoNMzPz+NyuWi322g0Gmq1GlevXmV4eBi73U4sFmN+fp5sNsvU1BSxWAwAm82GzWaj
      XC4zOztLPB7n6tWrL/x+vgqyLLO+vk6xWGR4eLhr435ng+HqlSKpfJXhoQHEzySXb0KR/zqx
      QIqioChKz2TkbtFsNtHpdF/5+neJzgKo1WrU6/VXPZ9vPZVKBbP5eSl5Z3yXOHECtJsNyrUG
      VqsVSXy+UqgqMi0ZdJ8THVRFoS0raLUaQKVeq6LVm1441ulQaTRaCIKKVqvnWTqrqsi0FdCI
      0JJVdNpf77iyLCNKEgKgyDKIEi8ztdOEQ7fbbWq1GmazmUql0gkxUFUVrVZLrVbrWHuazSZm
      s5lyuYzVan1qqEI3qFaryLKMxWJ55j3a7XZnjvBEP9BqtZTLZcxm8xMLXavVUZKPT7NarYbF
      Yul8rldi3PF8umkpO6ED+O7/jPVwkaNwEo/DQKOlkEmn0Ok0pFIpkHSUcylkQYdYC3NnJYNb
      XydTaVEu5GnVSyxu7tLncqHVCPz1v/9zpL45bAZot1u0G1US6QICCpl0hkq1jFanJxGLo9fr
      SCaTtOUGN67fYmhkiFQqg14jkS+WMRg1/PSffk70cIeByQvonvE9VxIxVo4imFs5Vo+KuEwC
      TVlAadbY2zvE6rAjyDLJsB/Z5KCSz2EwGk/18p0mISYYDLK5uUk8HieRSNBut9nZ2SGbzeLx
      eLh58yaxWAyNRsPi4iLpdJp4PI4syz2xAqmqysLCAoIg4Ha7n/mcgUCASCTCwMAAzWaTn/zk
      J2g0Go6OjigWi+RyOba2tpiYmGBhYYFwOIxOp2Nra4tYLEY4HKZUKvVEWVUUhQcPHmCxWLrq
      aT4hjAqShstvvcfK7Z/xj/+4wvzUBFXJwsP7N9H0naOdu0U4EGNs/nv86N1BAPKxKAfJKC3z
      EK10Ep9vjZGJWYbrUSqqhe2tDYpRAIVytoQstKnKWlxCkaZliEI8STqXYn52hkxLi0YL1XyB
      xXsLGE0alu5lENzT/PijS6d8LAm9BjJ1Fbehyf5RHFQZvaSiqhJHhwHsQEUH+YAP/36Ay9/7
      Ycfy9HWx2WwMDAzg9XpZW1tjY2ODdruNzWZDFEX6+vrY29vjypUrSJKE2Wx+EpjVQ93AYrEQ
      DoeZmpp65n3Gx8fZ29sDYGlpCVEU0WqfGBYODw9RFKXjBPR6vayvr3P58mXa7TYul6uzqHuB
      KIpMT093/YQ8MVuz1cnK3U84N/829UKMyQEHd5d8TE6dw9B/jkq8jUlvYXhyBFGjJxN5hHdm
      lL7+ASyD02QlBc/QR1TzOTJqkd//4z8lfrhPu5qmIdpw2I1s+0NMXnyDKdsgTdMAOZMZa97F
      2Ogg/Vo7jXqNglKlr9/DUSTOxNQ0jtFZREFkYHAAvSQjPecU1Oj1TA44SeYVrGYBNZNEMdiR
      2kUaqgarViUYLTA2M4xgEhkYamM7rbftFOzt7dFoNLDb7ciyzPe//30URelEgMITS1E0GkWj
      0aDVajv/9gpBENDr9c8VH3w+HwcHBwDMz89jt9txOByEw2HefPNNrFYrwWCQ/f39jim0UCgg
      imJn/r2wAMET0XV7exuDwcD777/ftXG/cStQaH+LfNvIpfOTXzkg7VXydcqitNtt2u32qXKK
      XyXHAXFf9fp3idfKCqSq6hM/QA+pVqs9iXY849XwnfUDPI1vux/gjG8fJ6xASrPM//Xnf87k
      5WuYtM8zN9W58ek9KpUqHk8/d2/8lPXNHTJ1kRHv6eu2AAR9j7mzuIWjbxCz4XNysNxifecA
      b7/7C5+/c/0Gg1MT/OKn/0w2uItxcBaT9texQNVUnPVQHItSYPUwz7Dn15aVRCSK0WZFBDIh
      P22TE/1LWO1O4wn2+/0sLi7S19fH9evXsdvt3Lt3j7GxMURR5MaNGxwdHVEoFFhdXUWn07G0
      tIQkST0JtVZVlVu3bpHP5/F6vadSJHd2dlhZWaHVarG5udnJANvY2GBsbIz79++zs7NDrVZj
      ZWUFURRZX1+nUqnQ39/f9WdQFIWFhQWsVmtXY4FOaH7p8C593hF8vi1WPr3O+7/zA259+oA/
      +MMP+Ie/+ive+fGf4rXZKKWzNEoZPl5ZpX9kjJag57d/5/v86lcf8xf3/pm6YwZTM0q1IWDQ
      mRkfNvMvt/f40UcXSRxlsAzYuL+wyJ/8T/8r+cMYH/3uf01m+wH/cDOB1SCRKCvo5DLhRJl8
      eJ+crh8xc0BdNmI2mVB58jK2BfjyGaaqIoIgky7JOPUiS48fo2qNmIQGhRoUajVsqFS1oIZ2
      +NnDZd773X/VNSvQwMAA5XKZdDqN2WxGURSmpqY6FhRVVVFVFUmSmJ+fR6fT0dfXh9vtfsHI
      Xx29Xk+9Xu9kr70IURRptVo4HA40Gg02mw2/399RogVBQJZlms0mH3zwAeFwGI/Hg8fzMiVL
      To8oipw7d67roegnFkAokmdiZpxsMsW5mRGS2QpDHhO7e0He+t67iKKGwN42jr4RrK4BLn72
      XZo0Krdufsrw2MSTL85iwGa5gEZRMQoCkWyGK+en0Gi1KKgYTDa+94MfMug00jczzu1PrzPs
      tiJJEharjb5zM5Rj2xh1RfQWB+9eusz23Ri0jVgsZgSemPaMOvhytQ5BkhhxmUgWFCw60Gkk
      VK0WQW6i1+uQlAZH8SJD5wYRNHpmL85jN3bPCrS8vIyqqthsNuBJEs3u7i71eh273Y4oip0f
      0ufz4XQ6KZVKDA4O9szLrNfrKZVKp36BFEXBYDDQbrdptVrYbLZORGs4HEYQBCRJwmAwcPfu
      XQYGBgiHw5hMJlyul5MAToMsy2xtbX33rUDJsJ+dYIZ3330b/csE4p+Cb7sOcJzU/V3PKEun
      0/T19b3qaXSF184KpChfpYTq6TmzAr1evFZWoG+Cs/LorxcnrEBHW8s8XN/B5vZi1muRmzXC
      8TR225eO/VKMm+sxjvZ9TIyPfYNTfjG1bJLlbR9anRFVFdHpNKiKQjKZxGKxUCwWv7LH8jSx
      QKFQiEAggCRJ3Lp1C4PBwP3795FlGbfbzb179zoVGFZWVpAkiQcPHuByubpq4ThGVVXu3r1L
      Op1mYGDgqUqwqqo8evSok7oZDAZZWFhAVVUWFxdRFIX19XWy2SwDAwOsrq6yvb0NwMOHD9Hp
      dNy7dw+dTtcTEU9RFO7evYvdbu+KI1FVVe7cuXNSCRZFaDRlGvkY/+e/+wnn3/2ATd8+F8aH
      sVsMpPJ5PGOzvD0kkcmXofTsevSvCrnZpK2qKEqdVKzAbiGN0eohn9gnkcqQS8WYHB/j8eoG
      s3OXqdZLXLl6Ff3z4itegtHRUYrFIul0mo8++oibN2/yzjvvEAqFUBQFq9WKLMs0Gg3m5ubY
      39/nww8/5OjoqCcKJJxu4bbbbaLRKM1mk/HxcYrFIqqq8v7777O6usrY2BiFQgFVVRFFkZGR
      EWKxGB988AG3b9/m/fffx+/3MzbW/Q1RFEWmpqa66uhsNBpPKRSs0UM1xf17j3G47dQEG06L
      nrlRF1vRCnpBw/yFc12bRG/QMHfpMnaTRL1WQ1ZVmo0mIxMzOGxm+l0OWo0GVlcfBo2G8XPT
      XXv5AQ4ODlheXkaWZT755BNGR0e5e/cuqqqSzWaJxWKdfOC1tTVcLhc3btzoqYPNbreTSCSe
      +QIJgtBJeC+Xy5RKJTQaDV6vl1u3bmE0GtnZ2aFSqZDJZCgWi+zt7WE2m7l58yZDQ0Pcvn27
      p7FAKysrrK2tdWU8RVFoNBqn1wFCO6u0beNMDn635N9WvYRv5wDP6Dm8rq8fv/J1dIBms0ku
      l+tJ0ng3CYVCjIyMPNNfEAqFGB0d/YZn1RteKysQ0POaPWcZYa8Xr5UV6NvuBzjj28cJJXhv
      fR3HkJOjUA2D1ODS5S8lobTrrO9HuHz+ZJuax0tLIKi8/ebbPZvwaWgUs2wHQvR5RhgZ6F14
      wYuIx+Ps7Ozg9XrJZrO8++67SJLE4uIiRqMRnU5HNpvlnXfe4fHjx1y6dKlnPobl5WUEQeDq
      1avPFG2OQx0mJiYIh8McHh4yOzvL7u5uJ63z/PnzmM1mNjc3qdfrnaJe165d4+DgAK/X2xMn
      maIoPH78mAsXLnQ1FPvEAtAqWRbXCggSaFotlIe3CJU1WNQ83qEx/Pt+KoKBmH8TQ984jewR
      ssHNH/729zkKBkFQXvkCaNfbjM+dJxMKETxIg9b4pPKcs59iLoHB2ge1DA3JzqW5yZ7NY2Bg
      gEqlgtfrRavVoigKgiBQKBQ6qYfpdJqDgwPK5XLPyjqqqkoymWRy8vnPOj4+3kmIyefzHZ1l
      bm4OWZY7OcHH1zOZDK1WqxMwV6lUeublFkWR0dHRrp/wJ0wfntEpDneDuFpxRNsYm9s+Dg79
      lFsCA8Y6gtWL2CqxcxhBFEDWWlBbla5O6uujkEklabZVVI0Bt1GD3uagUsjjHhjFoFWIRRO0
      2r2tIyrLMtVqFYPBQDweJ5vN0mg0uHjxIm63m9nZWZxOJ/l8nmw2SzKZ7NlcZmdniUajtNvt
      Z34mk8mQSCSoVCqMjY3hcDhwOp2dam+JRIJUKkWtVmNubq7zDHa7nVarRS6XIxLpTgvVL6Mo
      Suf+3eSEDqAqMrlCCaMW0FmpFdLIGgNGnQazyUA8GsNodyFXC6CzYNCKqIDFbKZUKgG8Mhn5
      WAdQ2k0yuQJ2pxtBldFqNORzWYwWO5L4ZEdsNao0Fc0X6oaehpfRARRFod1uI0kSkUgErVZL
      o9HAbDZjNps7GWJOp5NWq4UkST2pqKCqKvn8kwp6z0u6T6fTVKvVTuGucrlMf38/jUYDnU5H
      LBZDkiRKpRJ9fX2d0o+lUon+/v4vVL7oNoqiEIvFEEWRwcHBro37BStQo/HihsXfZmRZfu4O
      1w1qtVpPvLVnvBpeKyvQN8FZLNDrxcniuEqbBwt3achfWhftCofBY/lLoVL+YjHZkP+AVDxA
      JPfqfQnNSoGV1RVS+fIrnUetVmNzc5Nms8ndu3fJZDLAk55cq6urpNNpAoEAjUaDhYUFKpXe
      6VIbGxssLS2d2k+iqmqnTdLCwgK5XI5SqcT+/j7wpPbRysoKhUKhM/eFhYWeFcdVVZWtra2v
      1SPsaZywAtULcXy+LezjsxQON3AOjhAOBJiZG8W3EaPZOkejEODmzQ3+6E9+jN8f4Oo7v4V/
      ZxtXv46yw8aw89VWPWiWaozOzZE4DNAu6WkLegrZNC7PMPl0GIPdi04u05QsTI12T578MpIk
      IctyJ+xhfX2d3/7t32Z0dJStrS1MJhOJRIK1tTUMBkPPauocN7W7fPnyqevq5PP5jkVIVVXW
      19exWq3U63Wmp6dJpVLo9Xo2NjaYm5vj7t27XLlyhYODA958882ePMdxVls3TcUnToCDjXUk
      i5nNhzdJq07EQoC+sQk2Nw8QDQ52Hn9C2+BiZvYCh6v3yJbrVGrfRt1BRW4rVBoyNqGFbXic
      TCyExT2IpNTY8e1SKPRmtzpGp9Oh1Wrxer2cP3++oxz6/X6uXr2KyWRCEAQ0Gg0OhwOfz9ez
      uczPz7Ozs3NqU+ve3h6FQgGdTsf09DT1ep1IJNLpZPl5favRaKDRaHoaSSAIQk98JCe2HM/c
      2/zrH/SRTKQoZ2PoHFcphg/54MMPqZRr3L/hZ272AjaaOAevsLPlw242MP/WNXR6kbb21deL
      MTgsHO4dMDl7AVFuYjIayOztMD57Aa0koCpWTFqJstybwK1jMpkMyWQSo9FIIpHgypUrbGxs
      0Gg0WF1dxe12k0qlePPNN9nZ2eHKlSs9m8tx84vTWmjeffddLly4gEajYXV1lR/+8IdotVpy
      uRwrKytMTU2Ry+W4ePEiGxsbfPjhh6yvr/esE6YsyxwdHaHVarsaMdtRglutVs9r6rwOFIvF
      Tq7vGd99vnACfNcNQrIs97xJXrPZfCWdXM7oDZ0FoNVqn7jr5RarS0uMX7iKy/IcZVauk8w1
      8fR99d0wl0hi8brxLS6SrbS49v77mL9Ui0hu1shXW7gdL75Pu91GFEXajQqFuorDJJEttuh3
      //r/1ms19EYjAtColhENFp5b/uhLnKYu0NN49OgRXq+XsbExgsEgrVYLu91OJpNhbGwMn8/H
      1atXe9Yk7+DggFKp9NxYoGKxSKvVwu12k8/n2dvb480332R7e5tz585xcHCAVqtldnaWdDpN
      MpnshE9cvHiR9fV1Ll261LPmGZFIhL6+vq7mHJzQATYXPsE8c41bn37K+akB8uUWoqhl0GMl
      FE4zNmSnpnGR9T8i2ehjyKnDaJKwOfoIBiNcmp9hc3uP3bVHXP3Bj5DrBawaFSwDUEmSb2kZ
      dxsIpGqQiDH3o99jdqKPhZBKIR4m2pZp5dNoXaOIlTi1lkyy1GBuZoSov4BWV3GtBGsAACAA
      SURBVEZnH8bQypFuaHn3jYsnHqpRqBDIZhkxQLRhpF1Joxqc6NUK+8E0s3NTGIBcLomhb5h0
      JMz41HTXq1Qc02w2EQSBoaEhgI5OkEwm0el03L17l8nJSfb395mdne36/Y8TcS5duvRcK1C9
      XieXy+F2u9FqtZjNZpaXlzuN/VRVZXZ2ttNkWpZllpeXGRwc5NNPP2VycpKNjQ3eeuutrj+D
      oijk83mMRmNXF8CJX7zVUjAajYgo7AUT5HJJ1EqMx2s72MmwE8mzuvwY58g5JKFNJhFj8zDB
      3soCyWSE67+4xcj5y4xOTTEzNkA66ucw08S/sYzvKEYhHsHnP2Dh/gIt+YsVHLZXl7HabRwE
      I9y6+wk+f4rxARcPb99E0Qmk4ymSpSZB/yO29tJkE4fPfDCTJJBvi1ipUmjpKGbiZEt1hvud
      pBJJstEYdSAe3CdbyJEp9E6sOU4hXFxcBJ4oxzMzM8zOzpJMJjl//nynP0CvsFqtLCwsPNdT
      /uXeAbVarVPM97jD/XFmW7lcxuPx8MYbbxCLxRgdHaVarfZMBBVFsSeFw06cAJfee5+Hjx5x
      5dpvodRLCIKCUQJXE1xGsCh6pMlxjg73OTc9iVZtIuhNOHUyy74A52en2NtcZ2bqHIFIkrn5
      tyhlkjA4j1kLElCv5XnrTRcT/W4MgMbkZnpIRXBcxW234vV4GLX3oWvkiBRk/od//d/TKraY
      m59GMmlQ2iOsLnxCIGsDZMKhBCoKg4NPGjPozGbGbXqKRQW9TqScS6I6+tC0SpTbAi6rgUS6
      wrDDjeSWCB6FsJp61/PquMra0NAQPp+PbDbbeYGGh4cxGo1IksTMzEzP5qAoCoODg8+NNdrd
      3SUej1Ov13G5XDQaDS5fvszW1hbT09OEQiHGxsbY3Nyk1WpRr9eZmJjAYDAwOjrK+vo6V69e
      7cn8j3sU6HS63liBvmtUykVErQGj/tcv7rc9Iea4JOKraIb9Msiy/NyF8qLr3yVeu5TIXnOW
      Evl6ceIEaNUrROIp+geGKGfTOPo9FAsF+twO0uk8eq2AwWqnVWtgMmpI56q4HEbypRpu59cL
      ElOVNrV6G5Pp2danWrmEIEkg6TE8o0mY0m5Sb4NBK1BryJg/N16r1UKj1SIA7VYTQaM7UVv0
      eXyVYLjjcGSHw9FJiDnu2FIoFOjr6yMejzM4ONizJnmZTIZms/nMukDwxKN7XPen2WwSi8UY
      HBzsKMbFYhGj0YjJZKJarVKr1XA4HCSTyU6+QH9/f89COorFIiaTqavjnyiM5V/+lFjbiZQL
      sJss4N/d4eOPP2ZqpI+//P/ukItsUEPH3sYRY174N//ul0wN6vjZ7UUMooBelIlmi7TLRWrN
      FkfBCDqtRLtZo1RXaFSLHPkPMVjMpOIJypUqkVgCu83C9toDNvbjmLQQPAzT0mowCArlSgV/
      IILb7eTRp/9CvpAh1XIy6Hp6WHIlmWA9HMHYyLEdq2IRG9TaInK9xPaOH5vDBu02qegRitFG
      KhrDYrUidqlJ3pdpt9s8fPiQ4eFhRFHk4cOHxGKxThJMPB6nVqvRbDZ7EmmqqirLy8s4nc7n
      dol89OgRJpMJu93O4eEhjUaDdrtNOBwmGo2SSqVIJBKMjIzw+PHjToJKuVzuNMg7LsHebRRF
      YXV1FbPZ3NsmeY6BafaWV0mUZd78gx+xtfBzRob6ebARZHrQic7oopUP0VSe2NbH3AbWgxW8
      LhOhwBGHh4d8/8O3+Zef3GZg2MrQkJvbn25TViWchjoawwDp4Ba7kTC5NMy42hj7HfyX/7zI
      +fev0A7tcXupgNegoVqJs1RQaFezlEpVzN7TFlwS0UsC2Sa4tDXCaUDOoNNI2CxGwsEQdqCq
      g/zhDvF4CsHkZLRL5dG/jFar7XSGVxQFh8PRsfh4PB729/d57733ODo66sn9AUwmExsbG8/d
      oY/THD0eD1arlbW1NfR6PW+88QZra2sMDg52oj1NJhMGg4F0Os3Vq1e/UBirF4iiyNjYWNdP
      yBMnQKmQIVOocuXaW+ytPGT64tv09TtB1TDsdWO12Zga8ZKri0yM9CEZHOg0Ah6XHZvNgdUA
      ubrK0MAw50acbB4kePu9dyhmK7gMElMXZqhUGngHhxgbmaCVCxKpiHzv7fMcHUbwDgwwPjGJ
      zahn4vwskWiGa/OT1FQdUxPjiO06FocLk9WFw/J0y40iy9jtemotA1arBbmSQzTa0Sp1qi0J
      u0kkmirgHfRgNltpNtsMeL0YdC8+Wr/KCdBoNFhcXKTZbFIul6nX6wiCgMPh4OjoiPn5eR49
      etTpFdALIpEIOp3uufV+BEHo7PrHotrly5dZWlpiZmaGWCyG1Wolk8mg0WjIZrNMT0+ztLTE
      tWvXePz4MbOzsz3RkWRZZmlpiXw+39WaRK/cClTO5zDYnPTIB9V1vk5CjCzLyLLcs5e8W7wo
      6+11yop7raxAxy2Sesnr9OOf8S04AbrJt90PcMa3jxM6wMHjX/Lx4wC6VoFPFx4ST2X4m7/5
      W+ZnBvk3//afiB88oGmwsf7Qh8dS5fZqgIMDP1OTYyzf+Al/f91HMX7A/Xv3cE3OE167y8PN
      A9z9XtqNOhpJpFyu0Go1URGpVysogkirXqWtCCA3qdYbPF58gHdwlE/++j8QFh1s/uzfkjFM
      ICkKgtJEUaHZaqPRajr9ho9PgEoyykogilnOs+zP4XWakNUnZtajQBCz3YagqqRCftomB0qj
      jkajOZWC9VWD4Z6Gz+fjk08+odFosLa2hslk6sniOs7oKpVKL+1FrVarndLqx62f3G43t2/f
      5uDgAEVRuHPnDsVikfX1dWRZ7llhrNu3b2OxWHprBdJbPJgIsbtd5trv/lds3Po5I8P9PFg5
      YnbCg9EIpbgfWbViGZijcv0/8NYf/DGPl1e5dOVNCnoFU+OAlKhBElQCyQK//+P/hrV71ynX
      6lSqkK+U0NtsaNpt6uU6OocdbTHCYUnPtNfC1NwFtre3uPjG9zA6h2jkDtEZnTSLCZb20gh6
      PX3tPLm+WX7/3QtPabitQaeBbFWmzyiw7dtDFSUMYpt6S6R1GOg0ySsEd9na3OGtD36PUfc3
      2/llZmamEyj34YcfEgqFenIfQRA4d+7cV6qpYzKZMBqNGI1G7HZ7xwrkdrvZ29vD6/VSLpex
      2WycP3++kzHWbURR7ATidXXcL/9BYzSj14hMzJ9jc+EGw1PzzMzNISsw7HXjdLo5NzpI+7Md
      c/rcZdz9Dq69eRWN1oDdakBvNGK3WxFUuDo3wSe/+hR0ZqoNlYGhAS5dmmf2wjz9DiOVUgG3
      24WodzE1OoDDZqKpapkY8tKWVWxON2ZVZfD8PDaLmX6vB6FdR2Nx8uaVOaKhCJFwmM/n8Ita
      LaP9VpqCGaPJjE5S0eoNSAIIkgad0CaYyGLQG7BYbIxPTmEzfPOu/Xw+z/DwMG63m7t37/ak
      vSg8OQG2t7fZ29t76bIx+XyeRqOBLMtotVoEQehkZvX39yNJEk6nE5fL1Wny0QtkWcbn87Gz
      s9PVcV+pDqC06yTSJQYHuvPDn+kA3wyvU2mY18oKdNYk74yX5bWyAn0TvE673xlPa5K3s8x/
      +YdfMDRx7gsx8o8f3sHpGUH7nMixVjHEX/zNrwglUsxNTzz3xg/u38Y7OIYkPl+pSR+usxuI
      s3aYYXr0dF3Iq+k4G6EEVrXIymGOYc+v62EmolGMVisikAkfIhud6F9C/P8qnuBnEQwG8fv9
      NJtN7t+/j91u74kXVVVVbt261Ql0e5YiWS6X+dnPfsbc3BzRaLSTxrm6ukoul2N9fZ1kMsnw
      8DCPHz9mc3MTWZZ59OgRgiDw4MGDjk7QbY6tTTabrat+mBNWoPFz5xk/KmNsxPnf/7d/zwc/
      /iPyuSqinCb893+BxTuOyWgin8siK00sFgupSBqrZ5LfedtFtVbH2m7yn//v/4Ow0s8HU0Zu
      +0q8MeUgmi7isOl4+4f/LdVqBVC587O/4+5+lfkhCePQPJHVT0kLg0y5Ye7tD3E069RqMuXK
      6QuuKm1oyw2SebBqJZYWH6FqzZiEGtmySrFawwaUpTaEdvnHO/f54Ed/wkT/NxvmPDY2Rrlc
      plAo8NFHH3F0dNQzRRiemHBVVX1ml0i/398JZAsGgwiCQDweR6PRoCgKzWaz48XW6XRMTk6S
      TCb5wQ9+wO3bt/nggw86xbS6jSiKnDt3ruuFG54SgCCg1WoJh8NcfeMipdoTpVJvsvHm/CR9
      ExfZ3tj4wm48eWEeAwqCIKLV6lDaLWyeEX7wvTdIFVpM9DvQmB1MjY9z4cI0rbaM0Kpxd3GF
      TKnNeJ+dofExtrc2cXhG+eDdq1idg8xNDiNKGjRaDbpTxOl0nkAUGXboKbR1aD+XuNGWFbRa
      DXKjzO5hGFGSEEQNc5eu4DD2JoT3eezv77O6ugrAjRs3eipamT+r3v0sHUlVVRqNBjs7O4RC
      IQYGBlAUhUwmQyqVIhgMdjLb4vE41WqVg4MD7HY7t27dYnx8nNu3b/csV0KWZdbW1tjY2Ojq
      uC+tA5QyEY4ybS7Njnd1It8VfhN0gHg8jtfrfaaodJwn8DrwWlmBgDMr0BkvxWtlBTrzA5zx
      spzQAaL7m3z8yQ1SxZcvE7J47wYf/+LnRDLPKfPdrLC0sYfv0SLZ1osjN1W5xt/97d9RaZ5+
      Z1eaNTbW1whFY+QL37b2TSdJJBLcuHGDQqHQk/FVVeXRo0esrKx0TYk8ODjg4OCAcDjMrVu3
      iMfjXL9+nVgs1pXxv4yiKDx48KDThahbnCyPXq3QUiXKCT+PHyTwOMzEkln6PQOcm+5jZytK
      NFdh2CGSiKYYmZ1keWmDH//xf0cyV2TIbSUWCvPgV/cYmL5GPupHslhppmMo9jH+6KNLLD5c
      QM2WuKqT2Vz08d4H7/Lg5k0uXn0Di7OPyME+UzNjVOhnzJBBQGb/KMD2g4e8/e4brKxs8N57
      73D944957w/+lNnhL8rkqVSKiZkL6NQqq6sbuIfGqaT8qOYBDHIZg9VBLpfHZDGTCgfxTF7k
      3Nira16dy+XQaDQ9y6WFJ/m0AwMDXRtvfHycw8ND8vk8kiSRy+V45513CAQCPdEPRFFkfHy8
      63WHTpwARrsLQyPFw7U9DGYruXwendgmk0iyvrFBJldgeGKGUrEAzRqRaAyjzYnmM/9APJGF
      ZopCQyHi36fcEChnE8QzRez2J5WjR6fnuXJ+imQsitHuIna0B3IF2eLhxs9+zpvvvcOvfrnA
      9Lib/Z09NFYze+ubyK0i/miKaibK/YWHyKJAOBwll82RzP661LnNYiJweEA6X2Fs+jw6oUy5
      LFMq5jFYXdiMGvQGI9VimrosvtAX0WtcLhdarbZnuyfA0NBQV4tvhcNhDg4OsNlsSJJEoVBg
      dXW1Z8k+iqLg9/sJBAJdHfeEDtBuNajUmlgtJirlCgajkVq9idmoo1pvoNfpEESJ8N4aS744
      P/5Xv0ezUsVitSK3W2g1Es1Wm2ariVYjce/GrzB653hjbhgZDWajjmZbRlBVBEmkUq5iNOpp
      NJoYTGZazQZqvcjKfoL3r12h3Wqi0WlpNRrU6w0MRiP1Wg2jyUj9s/kgCCgIaEThMx1ApVGv
      I0haNJL4pCles4mo0SKJInKjzNqGj5Hp8zhMGiStHq3mdN6wXugAsixTqVSwWq09qQqhqmrH
      wNEtJ9JxFTiTyUS9XsdisVCpVDCZTD2pe6SqKqVSCUEQuvr9v1ZWoOOujL3kLCPs9eK1sgJ9
      E/wm+AF+kzhxVsX96/z8408Ip77UPqiWZSeY/twfFPK5J1aLvd09TiNZ7u49K5a7zcbGNpvr
      66eb9QtolHIEokmalQx7R4kvXCvkchzbk8rZFLVvQU+QTCbDzZs3yeVyPbvHysrKSzXJS6fT
      XL9+nVKpRCAQIBQKcf/+fba2tlBVlb29PRYWFkin02xubpJOp7lx4wZbW1s9mf9xbaNuNxI8
      YXbIJcOcm7nI2pYPf7uA0T2MXIrjtptYDVZQG5MkggfY+/u4/eld/sf/+X8hEAgwOTvD9spD
      si0DXqceSYBcoUAhm2NwdIxwvEA5d0QoEGRicpwDf4hRj4uMrOX9t2fY3z9AUJrMX778tR+q
      VWmQzGcQK1BTjexurqEYHBiUCpFUhcmpUUyoFGoFDIKG/VCQsZl57K8gHALAZrMxPj5OrVbr
      SSCZqqoEg0Hm5+dPrWNEIhE0Gg06nY5gMEh/fz9Wq7VjhhwbG+tUagPo6+tjZmamJ02yj3G7
      3Z1G493iZJvUdouf/vRjRt06iqKTuH+DbE1lsM/B7tYmhdQRj30hBL2VyckJzDoRpd2iVC6y
      vLzEyuoqoeDhExtxMs/4gJWlVR9TMzMYTDaGXSK3bi6QzmWJhaJMnL/4tICkr41TL5FrS+jl
      Kg3RTKtWpC5Dv8tGIZshForQApLhQ2KZPNXqq9N/IpEI9Xq9J7m0x1y7do1QKHRqM+LIyAhe
      r5dbt25RKpU4PDykr6+vo/xubGx0Kt2Vy2WazSbJZLKnwXyNRoNyubutb0/oANVSDslgpVgo
      0ihn0DuGUCtp2pIBo8mC0qyRyyRxeMep56I4h6cpJY8oNCSMYgPR6EArV6ipemxmAyadRFsV
      CYVjeLxujFoRWRE4CkUYHhjE7HSiExUymTygdqUGvNxsoogq9bqCRhKol3OoOhtSu0K1LWEz
      CuSKTdx9diRJIhaJ4h0exaB9sSWoFzpAJpMhFAoxMTHRs9KI0Wj0C006XkS1WiUYDHZKttdq
      NSKRCC6Xi0Qigdls7pR4j8VijI2NodfrexoMt7OzgyRJzM3NdW3czgJoNBo976/1OnAWCvF6
      0RF6NRrNd77m+zcRC/RNpF2e8c3RWQDHL7+qyqwvr3H+jTfQncJDGo5EsOpEWlorTpv5C15V
      VVVot2VQFSSt7rPqywqRSAyHUaCq6aPf9kXPYSGbQDC6sBmfr0wdHQUwa8DQP8HnS4QqikKr
      ViJbU3CbJVKFFoOfywirVioYzGZEoF4uIpps6F5CCZEkqeshC9VqlbW1Na5cudKzSNPd3V2q
      1epzm+RlMhlkWcbj8RAMBgkEAszOzhIKhTh//jyBQACv10t/fz+hUIh6vY7H4+k0yTvuGt+L
      NrKqqnbCLLqVkQdPSYlsFBP84uPr2IcnCW6sk0qn2d7fIxI8QmOysLb4EFGnw7e9jcHWx+L9
      TwlGMljUNrlanq2tPQRJw/b6MuVilr/7p+voNTICAqvruwyOern58cfU0gHSODncXkWjFdn2
      7dFuVrl54xO0Fje7mxtopBYrq9ug0eJbX0HRaNhZ38XW18/dOzehGEPwXMD+2fdxXBirnivg
      T6fQ1IokqwqtYopCXaFRTLNzEMZkMqDW6+TyaRStnqD/ELPdiVZ68UroZmGsY+r1OkajkVKp
      1DMdwOfzMTMz81wn3nF/ALfbjd1uR5Zl8vk8oiiyt7eHoijE43HGx8fZ2NigUCiQTCYxmUz4
      /X70ej2VSgWP53Spqy9LKpVCq9V21RF54hc/3FxDMJnY2lojEC4h5xLotRIms5aFm79E8kyx
      9uAewWwLl0UHqLRaLQrpHPHQDpZ+D3d/+VO2j5LUFA1zMzM0yxkeL61y6eqlL9wwG90nGDzg
      8eISBdWIb3ubS3OTrD+6RTyTZt+3hcnZx73r/8zWUYJIcI9MCSwvOB0ALBqBnCxhVqtUFCPV
      fJpCrc2Qx0kmnSEbi9MAEsEDcqUi+dKrswLV63UajQZjY6ct//7yDA8Ps7Ky8lw97/M793F4
      xoULFzrV2CYmJpBlGUEQuHjxIq1Wi/n5edrtNqqqotVqe6ZHCoLQk5PlhBUoEg4zMDxINHyE
      KFgwiC1krfaJNUWWiOxvMz4zR1MWGfG6PhOBBJLZBla7iM7kolEuEQz4GZ25RDK4h7Pfi8Nq
      YtN3xLvvvUniMxEoV1cJBsOMDg2gt7oRqyl2QilmpsbZ3dljamoMvdlBo14mdOBncHIKvWTC
      63U8VQQ61gFatRqyJFMuK+i0IpVcEtXgRNMqUmprcJlEktkqQ8NPCjsdBYKMTc5gNrxYtOmF
      EhwOhwkEApw/f74nptBjxxU8qUb3LBHI5/ORTCaxWq3Mzc0hyzIGg4GlpSUuXbrE7u4uY2Nj
      hMNhrFYrqqricDgIBoOcP3+etbU15ubmenKKHSff63S6rrZh7SwAWZa/853ivwkluFwuY7FY
      enqPM745OlveN/HyfBP0qsfW58fv9T3O+OboLAC9Xv9EicmnOAilmJmbw/iMJnRPRVXw7+5g
      HxzHbTudJaNRzuE7jHJudg6zvnuWFblZo9wEi0GkWGnhtP96x240Guj0egSgWa8h6owv1ZxD
      luWui0CKopBMJruasPJlwuEw1Wr1uSJQpVKh3W5jt9uBJ0qn0+nE5/Ph8Xio1WpYLBbcbjeF
      QoFSqYTX6+Xw8JDp6Wn8fj8TExM9C4dIpVI4HI6ujn/irQtuP0K1TXLz4QbTDhmTZ4JczI8s
      6NAYHXjNCvGyyu7idaau/T6WVhajZxJ7I8hatMn77v+fvfd6kis90/x+x6X3WS4ryxcKKHig
      DdCGTTaXY3apMZqZVYRiR7taXSn2QqHQH6DQjW51oQiFpJW0K+3OaFbL4cxyODMke7ob3Q2g
      4FEolK8sk957b885ukBXNpsFtOFUNpYgnisg89SX52Se73zf+77P+zwt9jd3MQ5P08oFacse
      HEKdpuzCrJboGIewSm26mgGhsEldmOb9D65x8YSPtsGLlSrZUhNNF5n3D7EbTXH27CKbq+ss
      nj7JTmCPiblTlGM7OMYX6FTSWDwTDLs+m3TNQontXIFZm0CwZmKmmkU3ezBpdTb3kpw9fwoj
      kM/GMY/NkI1EmF84gfycGmPK5XJfimQQ0HWdZDLJ4uLiFx5XKpUolUo4nU6azSbXrl3j3Xff
      pdvtYjAY+nLob731FltbWwiCQCwWw+12c/v2bTweD5ubmwMxy9Y0jWg0euyO8UcmgK72uLF0
      h2+/eZGfXl9mejKNwW5Gr7cQ9RhRUcCsqCiecfwegT//kyWmztf5T/7BVUYDf8etO2ky8TCj
      cxXkbglJikOzhsV/glo6j0aYerPM7/7+P6ZQAMlgQRFU9vYC7KYazPrdmDURUZN5mIvgHpvg
      B3/2/yIoCtVSAdHt487194ilq8xMl6jW6/zR707T6bQRJOXTVKaAWREpdgVcUoNM1QylKIok
      MjrkIhmNYuxpqDaZcihAMpnG7Bln6hsWxjqE1WpF0zTa7faxp1gPoes6H330Ed///vefWcdw
      OBwkk0k6nQ737t2j2WxSKBSIxWLU63UqlQpWq5Vut4vRaESWZWq1Gk6nk2g0isvl+qUk2L8K
      Dhth6vX6sU6AL+QCtao5BJMLq9WEoGqAjqC2KTRhzGUkU+0itctg9jDutbIT2GN8doFaJopm
      cmEzSYBOvZgHixdDr0rP4MCsgNvlpl0rshNMMH/yFKVkGNVgw24xIAHoAuGtR9Rsfl5dnGJ/
      d4/RcT+yYkTVVKrZBJJtCItJwaD3aGsaksmJ06L8ynGBisUi4XCYycnJY/1xD/FVuUChUKjv
      YXz27Fna7TaKorC3t8f09DSZTAar1Uo6nWZycrK/BQqFQv0t0PT09EC2QC+5QP+R4CUX6MXC
      Sy7Q18RLLtCLhSNcoELigKLuxKkXqUpeZn1uUNvE0xX840O02x1yuRw+v79f1S1n42yEslx9
      9eIvpbCQScZwj0yQioUZn55GAur5OF2LD6dRp9uqkanpTIw4abe7CAIoBsNTrJE+4wIFDiJM
      zMzjtH6eN9KoVjBYHU/N/Ki9Dt0emEwGKpXKUyuPg+ACHXqEXbp0aSDbB13XSaVSmEympzbc
      RKNRms0mXq+3zwVqtVokk0lmZmZYX19nZGSETCbzTC7Q6dOn2djY4Ny5cwPpmf7GuEChtZus
      xLtIhR0OaiZKkS1aqsr1a7fQFBPpRIRIOIpJ0VnbiTAxPsSH79/gzbffJBIMojWrBMNRNnf2
      sVtE7j1cw2xSeLS8iqAKoOikwjECwRjdZoHN/SSF5B5e/wL3b3yMosDa+jadUoT7gSxGsUcy
      tsfH99Yxmc3E9/f4yU9+jHvEx8bjR0iKgZ2dTSyuUYyy0OcCmX1jpCIRRLVNqlCjUysQTRXQ
      2jV0SSR4EEQQJSTpiWZOMBjCYDCwu7ODZLZTzKVpVovUuwJ262c/6CC4QJubm0xOTpJKpQYS
      A8CTrVuz2TwSvxwKTs3PzyNJUp8L1Gq1yGQywBPhLpfLRTqdfiYXaGtrC6fTSSqV+so9B18X
      3wgXCFHGrFdpiXb0UpCiOMLO2grD4zNE9zYp5J/0BX/y0Ufkk2lagI4OAjSzEa6vh8hEE1h6
      bT64+4jZCScPltfJZeJsrwVIZxPsbG6imdwEA7us3r7Lz2vQxYMhXFaZeK7O7IkpdjfWKVXq
      jM+cZH9zhWKpwczcSZTiAdaJBR7evUWiouGyPO2prLK7s0u5VKTeAa+hS6UNqVSayYkhspk8
      m5sBarUazXqeaLLM+OQ0pVwGTe2wuxeiMMA+3W8Kh670z4IkSayvr38utrHZbH1ZdEmSCAaD
      X8gFmpmZGahm6qC4QEfuGt/cedyqAKLMFAq5yA7eK98hGznAduoKVlkFBC6cmWM/VsEgyLzz
      9qusrG4ybFPwyGOc9luRJZEFs8zmZpA3Xr/A5tYeJ09MEYxlOXvpElbPCCV5BsfoPD6fE5MM
      5y9fRlFkjEYD3uFRzG4vI8olZEUiGAzju/IOitqBToWu0Uk3tM+b3/4uPf3z1VmD3Uxo/4CJ
      mXlG3A6KTWhXs+iOEab9dkRJJBxJMOEfYi+iMTbkptXpMOz1kEnFGZuaQ1DbmI1GMB3/l/6L
      OHXqFKurq1y+fHkg4x9ygRqNBn6//3NbuEPd/W63y97eHplMhnq9zujoLxem2AAAIABJREFU
      KJlMBq/Xi9FoZGxsjEQiwaVLl1hdXcVutzM3N9cfY2JigvX19YHUAOBJFigUerJKH6cR30su
      0NfESy7Qi4WXXKBfYvyXXKAXB0/lAjUwY9IbtEUbQ87P9nXFUhG369myHeViCbvTRrFUx+tx
      HssJ9jpNml0BvdPE7HJRKxVxu58sgcViCbf76N72V40LpKoqe3t7LCwsDERWEL6YC1QoFLBY
      LNTrdWq1GlNTU3Q6HYLBIAsLC8RiMRwOB7VaDaPRyMjICI1Gg3g8zujoKLFYjBMnThAIBPD5
      fAML5AfBBTqSBdp/+AF3Qh1IrbBZNqPmg2ByEQ2scWN5A63dxqAotJoNioU0O4Eg6XQK99Ao
      D5ZuMjY5ynvv32RoZJRGpUTkYJtiS0CtZQlna2jtKsVSmf2dTRSjmbW1DYxWG4G1R2jo/Omf
      /ACX3UCtA5vrayhCk71EA2ttn/2Ghd31dRS1RqkjsfbgIfML80cuqpHNsZVIYGwV2c+1UTol
      al2RXr3A6sYBTrcDOh1y6Ria2U7kIIjL4/m0ZfOLcZwmeYdYX19HURTK5fJAjKZ1XScQCDA7
      O4vBYDgyASKRCJ1Oh729PSqVCuPj42xsbPQ5RO12m+HhYVqtFqFQiImJCR4+fMjk5CTwpDqe
      TCYxmUyMjo4OROVa0zQCgQBms/lYg+2jZyoZMOoNOpIFiru8v1pmPhTCPnEBp0UmnUpRrVaR
      6ZGtVRmVRVSrm2C2gtapcfPGEg0VHt+7jmIZotGpo0QyxDNhbMOzKJ0C33r7W4TjSRShR00e
      4s6HH4LJwE48w/z8Ccxqg0goSDIdIpW0MH7iHGNnXuX2v/8BvhOXeO+T+0zMnHjKyR9CwCwL
      FLoiLqlBruGAchRZMTA55iUZT2DXNJomgeLBNuVKHUthnMmh58MF0jStH2QOCpIkcf36dX77
      t3/7yA06Pj5OsVhEkiRKpRIAJpOJeDyO2WymXC5Tq9VwuVycOXMGeHLT37x5kzfeeINiscjo
      6CiJRIJGo3GsDSuHEEURn8937NvPI/eQ1zfHhSHQpSlcgozdsIVvZp50PMrw2CQuk5FGOUND
      t3NifgyHKIDRjGIzYjh5jqm5SbYDERJbDzlx9V0++NGfcf61dxkf91DRrQw5ZnE4nIx4HIiC
      wM7mNr/x1gUSsRSTQx60aoGO0c3YsE5L6zDi8uLwukC04B+fYPHCOaROGcUzjkVUicZiyILO
      iG+Sw5ZexWplzq6QL2lYjCLVfArN5kHplqm0VTw2hWSqwtToOJJLpNeLfWkT/iAxOzvL8vIy
      V65cGdhnHN5AT6v2r62toaoqbre7nzFyOBzIssyZM2fY2tpieHiYSCRCr9dDURTOnDlDPB6n
      Vquh6zoWiwVJkgZWA1BVld3dXYxGI1evXj22cQcjjqur5AoVvB4XjWYT6zOWLK3bpqVJWI6x
      F2DQ+HUQx/15O9Rf5v1fJbyUR/+aeCmP/mLhyAqg6zr1WhXZaMZk+MVtgU6n3UFWZHqqjixo
      VGoNZMWIzfr0m0LXNTpdFYEnqgFqr4soG/gqlKFWo44mysiicOSJo3Y7ICuIukZP01FkuZ/K
      1TWVngayCF1Vx6B8tsJoqoogSQif/htR+krncohBsEF1Xe/XF45zj3vo/XsY+P48jUPXdZrN
      JvKn35uu6/3Kr8lkQtd1Go0GVquVer2O2Wym0+kgy3Jf/aHX62E0GvvHHfYzDCpNfEjPPs5M
      2ZEsUGTjHivBLLKskM+mkVGp1JrcuH6Nsck5Ipv3eLC6g2QfxiH3+NG/+yHK6Cg2o4luu0W5
      mKPVA73ToFzvYDGKfPjBBxyEY8zOzbF1933wLECzQL7SQEGj2mjRqpWoNnvQbVBudrGaRf7y
      Bz9EsjpZfnALu3OISjqBYDGTyxZIrNyl6Z0mv/uAjUSNmfHhvi5QI5tmLZrA0i2zEa3itgh0
      NAGt22L/IILNaUdQVXKJMKrZQb1cwmQ2faUfbhBcoEAgQDAYRBTFYy33a5rGnTt3GBoaIpvN
      cvv2bU6ePAk8mcjLy8s4HA4ePnyIwWBga2uLWCzG5OQke3t7/erx/v4++XyeUChEOp1mYmKC
      +/fvEwqFqFQqRCIRVFVlc3OTiYmJgaRyNU3jwYMH2Gy2Y12Bj2y+k7Ecs2fPsLGxgyJ1CDzK
      YPGfoVh6womZnpvnZ7f/hssXzxDMSsxOTTM7OczNj25gkA0USlmMkpli7oC6Msa/+Gf/GSPm
      DjHRz+76QyptjWFg89FdPrgf5O2zPhzTCxwcJBG7Der5GF2zj//in/wBZ0/PsR+KovV6XF+6
      yZTJQnHnMQfBPGemfOgPl5BlEf3I9yFhlAQKbR2PscNBNA26hlHS0XWJaCSKA52GAuXILqFg
      hDOvvsOE9/n4/3Y6HV555RWi0eixjitJErOzs2iaxvLyMqqq0uv1kGWZarVKo9EgGo1isViI
      x+OMjIywtrZGr9ej2+3yyiuvcPfuXa5cucL6+npfEh2ecIWGhobI5XJcvnyZRCIxsAAYngTx
      s7Ozxz7ukRXA5bKw8ngLt/eJlo/LbqbalRiyiNiHJ0lFglw8v0hNt3Fqeox6tYpnYorc9gPG
      L7zN3to9RqdPMeq2MeybYmLUSbIMDqnN6UuvodVybIVSCFoXm8PN1KSfuZMLJPf3KNa7LMz6
      GfZPMTHuZHcriGS2MTLiZcjjxm6x4hxxYTA58Q+7cQy7yaSyDHnc6OgUc1WsNhNat4vVrtDo
      GLBZzPRaNUSTDVlv09Zk7CZIZip4R7yYzRY0REZHhjEZvjwYH8QKIAgCy8vLnDx58ljH7vV6
      fVOJV199FUmS+g7wJpOJXC6Hw+Gg0+mgKAomkwmDwYCmadjtdh4/fswrr7zC8vIy09PTJJNJ
      zGYzlUoFTdPI5/NMTU3x+PFjJiYm2NjYQFGUgXgcqKrKo0ePqFQqTExMHNu4x5MF0jrs7MVY
      ODFDLl9gZPjrijuprN6/j3tqkcnRXz7D8tIo+3jwZXynF4kP9UJlgYCBd2s1Go2B0n5f4pvF
      S5O8r4lfhzrArxOOxACZ4Dof3n6MKih0243+cr+xscbIyAjrd68TjCepaibsQoN/+3/+W9o2
      NxPDz+KwtPn4w3vMzE1+6clE1u9yYyWA3swRLMK4x0Iqk8Nue0JR+PCjj5mbneH2Rx8xPDXL
      3/7gT9jeCWDzzX2uklvPJHgcTmBXyzzcLzI59tm5JWMxzA4HIpCN7NGzeDB9jVboQXCB9vf3
      uXv3Ljab7Vi3V6qqcu3aNUZGRiiVSnz44YefU1S4ffs2lUqF5eVlYrEY8XicWCyG3+9nf3+f
      paUlFEXh1q1bfQn3wyzQ3bt3WV9fp91u8+DBA3q9Hvfu3QMYCBlO0zSuX7+Ow+EYbBZobyvM
      2YtnCe0nCbdLLL33I1xzlwk8vo3XP8/Js2f4X/7VX/BP//MJwgWJxfkTnJ4b4qfvf4KBLolk
      CKNllHYxQKjh4r//b/+YbqeLrtb4X/+n/5mhU5ep5LOcmBqjXq+i6iaWH9zmnd//51yZHkPd
      f0y7ZWBn5wHJPQOKrPHvHj3EOXeFcYfGX//ln5Mvtbn8beh2uiAajgha6ZqIgEq2quIxidy/
      dw9dMWMRWpQbAuV6AydQN+ho4S1+fOs+7/yjP2LmOekC1et13n33XcLhMD6f79jGlSSJhYWF
      PpHM4XCgaRqiKJLP5/u5/MNGf4PBQLVa7dcAvvvd77K0tMS3v/1tHj9+zMLCAuVyuU99GBoa
      IpPJ8J3vfIcbN27w7W9/m/39/WM7/5+HKIr9FO6xjvuLL5w8N8/G4y00TcdqsTJ7Yp5CucbJ
      uSkEYHdnl9989wrZppFTM+OYrVZkkwtbO8HwwkV63R52pxPfxAm++9ZrgECtmGBrfQP37AVc
      NoVT51/BP+RAEDQEg5VLr7/NwoSXZquDxShRa/U4d+kKbpuEzWbnxOJ5Xr9wCqvVhsFgwOZw
      IPBEUMpkMJJLxcnlUqRLT5orRVlm0mulrpkxGowYZAmDYkAURIxGI5Le5iCeQVEMmIwWTp+7
      gOs5OUQCOJ1OPvnkk2N/cvZ6PTY2Ntjc3MTpdFKtVvsxkiRJGAwG6vU6kiQhCAJGo5FOp0M8
      HsdqtXL9+nXOnDnDzZs38Xg8HBwc0O12icfjdDodQqEQQ0ND3Lhxg4WFBW7evNmXVTxuqKrK
      2toaGxsbxzrusWWBVlZ3OHf+DNFYnNnpL9e5r+aTPNrY5+Lrbzw3e9JfBr8OMUAul8Pr9T6z
      MJjL5QbqaPlN4oXKAn0Tmj0vs0AvFl6oLNDLOsBLfF0cyQJV0iGuLd2ny+ezQMHQAW6Xi61H
      dymUyxRaIlbq/ODPfkjTaMP/jCyQrrb56IP3yVa6xMNB/BN+cpkksvGJoV54+wFtwzC2doI7
      Bw0M1RA/vblMvtxg2v90teRgMITT7ToijHXIBWoWs+wm81ipsRUpMzr02b40l8lg/NQkr5SK
      oZq+nkneICrBiUSCu3fv4nK5jjXDoaoqt27d6htc37lzh5mZGeDJin/37l3q9TqCILCyskIu
      lyMSieD3+0kkEty5cwebzcadO3f6XJ9SqcTo6Chra2vs7Oyg63qfS3Tv3j0MBsNA5EsOeU0O
      h+NYs3BHNt8byxssnD9LNl0hly7xaOlDPDPnWL79EX/0T/9r5uZn+d/+zV/xz/7Jf0q2ITIz
      Ns6puSE+ufUQRW+SSkZQrGOI9Sj7FRP/zX/5B2hqD0SRZGSPH0UTjE540LfWuf1wg9dePYNc
      WmEltYvqf5MJrUat2cTZrPGTH/0HRIcXU7dGsafgFqvozkkCK3f4rT/4Y2Z9T590Wlen1WmS
      LegYJYX1xyvoBitmWuSqPcaaLWxAjQ5iKszHK6tcfvs3GHc/H5pzPp/n7bffJhqNHmtLpCRJ
      TE9Po2ka4XD4cybWJpOJ6elp4IkynNlsptVqIYoiuq5TLBZ56623uHPnDlevXmV9fZ3JyUkq
      lQq6riOKIn6/n3Q6zRtvvMGtW7d44403CAaDx0pVOMQhF0hV1eMd9xdfmJwZZXVlk3Q6Q71R
      x24zsbUfxT/qRQB2trZ55cIJIvk2XteT1UE0ORHy2yieGcrlCp12m0anx/zMJLqmYbHZ2N3e
      xmQbYtJjoVSrU6k2mJlfwChCrVYG4bNTEUSFaq1Ao96mXq/SqDepN+o47DbWNnaZ9j9JFVby
      KdKZFLlS48iFjdhlih0JSdfo9FQ63S6tdhtJFGnWiuzshdCAbqeDwzOMUXp+Sg8mk4kbN24c
      O72g1+uxurrK+vo6lUqFQCDQF0DO5/Pcu3evL3seCASwWq1ks1lyuRyyLHPjxg2mpqa4efMm
      JpOJ3d1d6vU6hUKBarXK/v4+FouFpaUlfD4fS0tLA5N3V1WV1dXV/3izQLfuLPPa668S2Nvn
      3OkvNmIYFF7GAMeDeDzO+Pj4M7NA8Xgcv9//DZ/VYPBCZYEOY4BB4mVH2IuFFyoL9E3g16EO
      8OuEI1mg+M4yNx6sIykGOqpGs94gFQ5i9oygiDqB9RV6qkq60sFCnb/+8U+pCwbGn5EF0not
      Hm8EyGeSuIdHSO6vo1tG+XJLXp071z8gUepQyGcYHRkhm0hisNuRgPD6JtLwEFo5STTXxv1z
      xnytcp5gtoRNbBKIlRn2fLZlKebzGCwWRKCSS6EabChfIws0CC5QPp9naWmJ0dHRY202V1WV
      O3fuMDw8TLfb5cGDB30tn2azya1bt+h2u/2Or1QqRTgc7meB7t+/jyRJrKysUCgUCIVC1Go1
      hoeH2d7eJhAIoCgKd+7cwel0cuvWLWw22+eC7ePCoYq1y+U61u/oyG1YKaSYmJxlZ2sTp8fF
      8v01To67WdsL8873fpNJ/wj/1//3M/6rf/7HaILAqM3J/LSL5Y19xE6ZdDKCbBvDopfJ96z8
      zve+hZrfJS7NMNOokU3GkMfOU9h6xP2dNCdHbXQdbmrxKB3ZhkdpkWka+Ie/+SapZJaz0+dZ
      vfcBwUiSmbEhCqUkq1txhhWFhk1k58EDhk9+i7mJzyqTvWaXYrWEoaWj6ia21lbQjE7Mep1k
      vsXUdBsrUOlUMegij3d3OXnhdby256N0EI1GefvttwmHw5w+ffrYxpUkCb/fT6/XY39//3Pa
      ryaTiTNnzlAoFDCbzXS7XcrlMtlslosXL+L1etF1HavVyuLiIuVyGYfD0c8CtdttvF4v+/v7
      vPHGG9y4cYO33nqLg4MDRkZGju0aDiGKItPT08ce4x159umaSrYOb5+bpG1wMjE2jMVsY37U
      QaHeJRGLMTk+zEE4Rr5UBUC2esht36RnGqbS7NAsZVnf2EEQRHS1Q6mtoFUzpFMJWp0u8USc
      9fVNIgdBcsUai7Oj5Fsy9WKWza0dRElE0zVOn7vM/TtLmF0jGBWNbDpDYGcLTRfQdJ1EMMqQ
      3wfdNrVGg0q51r8Or1mk0JUxaG3aGOm2arS6Gk67hWqpQCQYoQcUsynqHfW52kPJsszOzs6x
      xxaappFKpUgmk6TTaXZ3d/vXWS6XWVtbw+v1ks/naTQanDlzhqGhIXq9HuVyGbfbTalUIpFI
      MDU1RTqdptVq0Wg0aDQaZDIZDAYDgUAAj8fTXxEGgcNrSafTxzrukRig3awhGmxIeptWT6Re
      zmE02zEqIoJiotNqYDEZaHQ0bBYTzVodo0nig4+W+PZ33uHmjU949fW3kLUWtQ6MDTmpt7oI
      morZaqVdr5Ap1nBajbR6AnaLCbPNwLUf/xVdxxTvXD5BtaUxNuIhm0qiWF0oEv2ilyJBOlfG
      7XRgMMlk0jlcLieIElpXw+G0ofV66IJOp6sjiQKdVg1kM6Lapq2JmBWBerOH3WFBFESKhQJO
      zxCGryASOogY4PDHPW7lM03TiMfjKIrC2NjY5wL4TqdDIpHA4XAgCAKKotDpdJAkiUwmg8/n
      o1gsMj4+TqfTwWw2k8/nMZvNRKNRJicn+4Ybh84xmUyG4eHhgVhtaZpGIpFAFMVj7T3+XBao
      3W4f28AvKl6kdsCXeMGyQC/rAC/xdXFkze+1aty6cZ10sf7k/+0qscQT8+Ng6OBzx+q9NrVm
      h0omwtpu9Mj7v4j9/QPiBztkSkWCoWcLwSbDO3x47WOy5QbVau2Zxz0L3XqFRLZAt1kmksh/
      7r1apcohX7RRLtIebNngK6Fer3P79u2BrcC6rrO9vd1XfP7F9x4/fkw4HCYajbK2toau6+Ry
      Oe7du0etVuPOnTsUi0V2dnZoNpvous7a2hqffPIJmUyGW7dukc1muXXrFvl8/hlncTzX0Gw2
      v/zgr4EjWaC12zfxX/4ONmrcuHYb/4kZouEcod1NkqUK9UKarnEYrRbHbXdSMfnxVFPc204x
      5lIw0mM3VmTY68RtEomWu0wOWbB4J9jb3cFu1CEeQbP5SUZ2GfJPko5HsNqcVCslFi+/SSyR
      5PylS9z8+EOmJyahU8M2Pk8+vIZzaILRES/lUpFAKMXsiUVOzXyeNNept0gWClCFsmoitJtF
      N7kwanWi6Qqzc1OY0SnXS5gEmYNYlKn5U1iNz8cmdn9/n8XFRSKRCAsLC8c+vq7rZLNZBEHo
      e34dQlVV0uk0yWSyL23e7Xb7kun37t3DbDazubnJ+Pg4rVYLs9nMuXPnWF9fx2q14vf7abVa
      2Gy2fi/BIGA0Go+9EHlkBVAUkWazTWQ3QCpxwNpBjlIyiOyexKL02NraZnn5EYlsEb/HQK7a
      AQTOzY2wtpdie2uD7bX7FNMprj0+YFip8+GdLSxGGZ9ZpGQYIhoIM2RosRdL8ujRMmXVSLOY
      Z/bECIGdOABqr40gyuSyORqNOtFYnGy5gUEtk05GCYcOUIam2N8JPPXCHIpAUZUwa01aoo12
      rUijC75hN6VikUIqTQdIRw8o1RtUG8+3Ct5utwfqPCPLMqIoHumXkGWZK1euYDKZUNUn2bBD
      EzyXy8Xs7Cyzs7NH3BnL5TJ2u51SqYSiKHi9XsbGxqjX6wM5f0EQBlKBP6oNqvVYe/SQofFJ
      MqkUo5MzGASIhoO4Rn008ilMrjFsJokhh4V8W8ZKC9VoIxE+wGESydZUFucmiGSrGJopwjUT
      77x6mnY1R7ohoTfyjPv9rK5u4/OPohitBFfvUjN6eefqK9SyMdb3k7x+5VUq+Ty5ZATLyCwW
      uYfDorAVCDNi7fKztRJ/+FtvUqvVQdPwjY3Q6XTotdtokkajriHLIo1yBt3kRu5WqHZlPBaR
      bLHFmM+DLMuEDkJMzp74SirVg4gBer0e6+vrXLhwYSCygrquEw6HUVWVubm5IxNtbW0Nv9+P
      pmlUKhUajQZjY2OkUilOnTrFysoK58+fZ3V1ta8zOjc3h8ViIZVKEQwGmZ6eJh6Pc+7cuYEk
      CVRV5eHDhyiKcqxmgv0J0O12B86jGTQOJf0GiXq9PpBK50s8H3zukfernhCSJGkgOeifR7fb
      PXYqxEs8R+i/gFImql9fuqPX273Pvd6pF/VCtaXruq6XszH940+u69lyXc9kMr84hK7rul7I
      ZvV2T9WL6aj+YGVT72naU4/7ebSqBb1QbejBYEQvpjN6S33yN4VcWu/0Pv17radvbqx/9v+n
      oNus6tliVe916no6W/rce416XVcPP69e1Tvq0b//IhSLxa/3B18B3W5Xf/Dgga6qX/NkviI0
      TdODwaC+v7//uddCoZDe6/X0vb09/eDgQM9kMnogENA1TdMrlYr+8ccf65VKRT84ONBbrZZ+
      48YNfWVlRdc0Tc9ms3ogENDb7bb+8OFDvdfr6cvLy3qr1RrINei6rkej0WMf/wgZLri2hGvm
      PLeXbkOrQK6hUcvFSQY3CZc1jAYz8eA6Vs8QGxshsrkoar1Crq5Ty4aJ5hqI7SJ/9dd/x9z5
      8yxd+4ATi6e4/eP/QEQ1oBZipCpdysl98g2V4N4+tXyCYkfCoTS4c3eDza1tCrUyI04Tj7eC
      pCKb7EfzmKixsr7J3a0ovXoVAy12o3nURplsuYHH9aQVr5ErEEgnURolopUeej1PpQ2dapaN
      nRA2hxW93SafS6IZLYT393G4PUf0hZ6GQZDhHj9+jM/nI51ODySDous66+vrNBoNfD4foijS
      6XQIh8N9zk88HqdUKtHpdBgZGSESieDz+bDb7ezv7zMxMcHk5GS/6ruxsYGmaX3TvOXlZcbH
      x/t/d9zQNI1IJILJZBqsMBaApJgQaHKwVyZZ3cVjlfnW5Vn+4ofXuPjf/QvQeiQzJQyKjtYo
      E8xZ0UMP6Ukypp7GrqRz8lMluLfefotrH33MkHOUEydnWP/op4TyWyz6bEhOnWaxQEVvY2wb
      mfctkEu+z8TUItlKjZsffYBuGUIW4dw0fPJwh+nZec6fHaaRTvDB+49wj80RalT53u/9/ueu
      wSILFHoiduqUOg6oJ6grBiZGvWSSaaxqj7ZFohgMUK42sZeaTDwnk7xDTZ5D6fFBQNM0ut1u
      f5trNBr7Gj7ZbJbFxUX29vaQJAlN03A6nQQCAVqtVv+4cDjcb6OUJKlvtmc0Gun1egPdGoqi
      OBApliMrAJrG1vYer125Sq9Zxz87x+z0FF6vl4XFk7QaXTx2I+lsgfmF0wwPD2HSmtjHZhm1
      iYiuMeZHHOQaGrPTk2QiQQSrl4vnZolEMtiMEmOT07jMBgxWD75RL4oEJoeX0WEP9HqcWlxA
      MVlZnJuk3hWZnxwjlG5w9ZUz2B0uXA4bLoedKf8IutHG3Owsw8Oez3K6goDTZQXB8uTHa5dQ
      bEOYhDb1noTHoZCrdhjzjeJ2e2jWG4yOjWJUvjx+GMQKYLfbWVtb4+zZswOxGIUnFA6TydTn
      GzWbzb45Xjab7dOc2+02pVIJi8VCsVhkYmKCnZ0dVFXF4XDg9Xr7JLpGo8HJkyfZ2tri9ddf
      Z2tri8XFxYG0RR62RJbL5WPtRnuhqBDfBH4dGmJUVf3CZMKXvf+rhP7j5kVpifwmTPJekgZf
      HBxZAdRum2Q6z6hvDEV6elFG63Vo9cBiUijmc9jdw8gi1Os1rNa/XxGk3aiSr7ZxWM1YbdYj
      2j+H6HWaJLNFfD5fP3jtk+G0Hl1dQnmK0sPf1+JzEIUwTdNIp9OMjY0NtBr8LBSLRQRBQJZl
      Wq0WXq+XbrdLsVhkeHiYdDrN8PAw5XIZRVFwOBw0Go1+fJDNZhkZGSGbzTI0NDSw1aFSqWCx
      WI51m3gkBlj55H2KghmH1UT4IIjd5SZ6EKBSzNJQFcKhA+RehfVomckRO3/+b/4l8ugZxEaG
      v33/E/xDTpL5GkKvRiiaIbH7gO2MilEtU6h3uf7e32C02Ujk6rRKKXqSkVIqTq7awmUz8bOf
      vYd7aIQHSzfRDGYauQRNDaKROG6vB/HTG+T6+z9BtDiwWp39vXu/Kb6RI1EXaeTSNFoNOqpA
      q1ag2lTJpFMYZciV6hgknVQ6S6uYZj/fYNTz5cKugxDG2traolqt0m63n8v2KhaLEQwGSafT
      ffnz9fV1arUaoVCIbrdLOp1G07S+7s/KygrpdJpcLkej0SAWi1GtVimVSgPpCNM0jfX1dSwW
      y7FmgY5MAPewl+1H99nZDTPs83DjvZ/RtU9gqqbJVus8XrlHtS5gsLtwaylurCZpt6tk0lUM
      ikarnOPmrYeU62VcQo3tbBvf1DyxzfvcWt7E67BxcnaM1fU1UnUDiYNV4pEiuUyCuflpdqNp
      3njtEnuBXerpDIVmnXg6htfYY6NghFKQtmRjbnKM1Xt3MY5M47UZ+1+SqqrQrVNWu9TyLRrt
      Nr1ui0azQaNaRZMkeo0KG1shzEYRAZFOr43ROYLL8uU39iAmQDKZZGFhgUKh8FxEZw8bX6rV
      KvV6nZmZGcxmM/v7+3i9Xmq1Wt8KdWpqCrPZTLFYxOl0UqvV+hmkCxcuUCgUGBt7uqLf3weC
      ICCKIpIkDXYCJCNBCrUOp08uEA6GOH35CqX4AXbPExM5VTIwPjpKv53ZAAASZklEQVSG0+Oh
      XWnwzve/j9RtIKsNNKMdu1HG6vTQaxaoqlauXD5DKpVDEXo4vaPMj3uotEXsnjHUfAzvxBzD
      Hg8et4Nhnw+9niMQyTE8PMSIx43Z6aBRypAoabx++TzjPh82k4FYaI9KS3vScVav0lRFzAb5
      yQTQVVRRwWayYnNYMBkVcqkYksWN22FF0DUQFIZHR3A57BhMCql0gbFnmnx8hkFMAEVRePjw
      IadPn/7GHdh1XefRo0f0ej0MBkOfECfLMqVSicXFReLxOPPz84RCIVRVpVwuI8syxWKR2dlZ
      VldXuXz5Mo8ePeLEiRMDEQ9WVZXHjx9TqVR+NbJA5VIRu9P9tUyon4VqpYjZ5vrSQtUXNcQc
      mjj/vc/l16Ah5ssoxy+SNtILJYwFg+czvSTDvVh4WQf4mvh1qAP8OuFIPikRWOb+Xp6FhQXm
      p/0I6OiaCoJIu93GarPRqNXQ6xm2igYuzQ3RVQUe3LrG+de/g9gtk4nHaMoevMNe7EYRs8VC
      u9XGYjHS6WqYTCZ+9OO/BOAPf/8Pj/2iaqkYa5kKi16J9bTA1bOTICqIuko4HGVibhYFyET2
      MPkXMPSedDk9jxQkwM7ODvv7+1y8eHEgmpu6rvP+++8zNDTE5cuXn3mdu7u71Gq1vvP76upq
      XwG60+kgCAIul4s33niDjz/+mF6vh9PppFwuMzExQSgU4rXXXmN4ePjYr0HTND755BMuXLhw
      rHypIxMgvJ/k7IUz7G7tEdrbxWyCdCjB+PQ4qizRaXTY34vw5quzbGXN9BKPuPEoyrlFH8vX
      f0JLsTDk9CJrcXaaPeIr1xn1j/B4dZvLlxapKtP83ndfObYLeNZlGWTINzSGLbC+sYMuSpil
      Ho2OSHdv/1OTPCiHtlhb3eT1d7/P9HPiArVaLb773e8SDocH9hkOh6PvEfasPP3c3By7u7sA
      uN1uxsfHOXnyJAaDoU+Ay2QyAAwNDbG9vY3f76dUKvV1jQ6lUY4boiiyuLh47A+pI5Wu05dO
      s722g9nqxi1VGJq9wPzp85yen6JVbzEyPsX4qB3F7cch9ehoMmdPzuJyuWhjYmJsGLvDjs3h
      xKRXUQ0uxkZ8nH/lCpNjo1y+eBZFBK/Hi9czmN5RyWBgesRBR7BisdowiDoGoxlRAFGSMYg9
      Qqk8JpMZm83JzPwCzi/XahwYhoaGuH79+kDy54eQZflLb57t7W22trbY29tjZ2enzxGCJ3wl
      WZaZm5sjFAr1J4Xb7UYQBN58800MBsPAimCqqrKxscHW1taxjvsFMYDKxto2p8+dPZZMzouC
      X4cYoFQq4XQ6nzlhXqTv4IXKAukvTfJe4mvihcoCvRTGeomviyOV4L3773E71KEXu89KRmJ+
      3N1/7/rSTQyK8swbQG2X+Zf/+59y4bVXkAVA1wgEDjDLOg1VRtar/Ps/+yGa0cbf/cWf4j99
      gb/4v/81MxdfY/n6e+xHcozPTPDVdpEl/uT/+CGxYomFuWkEPqNCNPJptuJZrHqV9XAJ3/Bn
      y3UmlcJksyEChUQY1eTC8DW2rYOoBEejUe7du4fT6RzI6qLrOktLSxQKBUZHR5+5tbl//z6x
      WAy/308qleLevXtYrVYCgQDlcpn19XXy+Tw+n4+DgwMymQzVapUHDx4gCEJfTn0Q2yNN07h9
      +zZ2u32wJnldVaNZL9OQWnRacf7H/+H/Yf7Ca5gkgYamo7a6RMMxZEElnU9SzZYRTBZe+973
      keOPmZifZGX5IaFoHKsCe3tR3nn1IrrLjcUIjWYTSZLwjtrZePAATbSj6mC1mClX2qze/pi6
      4CAT2uLE/DR/9eP3uPTmW2w+uMvi62/RK+Ywefz83j88R6Pextw8um3TVYGe1iFfBpss8fjR
      I3TFglloUaxrVBtN7EBdUiG+x0/uPuCN7/0uU88pC1Qul3nnnXeIRCID5QIddoQ9awLout4/
      xu120+v1aLVayLLc5wgddq1NT08TDAap1+u8/fbbLC0t8dZbbxEMBgdy7qIoMjc3d+xb3CNZ
      IFk2MGJo0rb4UGSR2cVLnJ0fR9MFTEYDIFDMRAkn80hmB4tz05w6uUCvpxJIFLDJKrHwAbOn
      LmC1mTkxOQICuEcnOTk9jiIrqKqKyTVNJhrk5IIPkSfZmUY+Re1TVRPnsJ8Tk6OcvvwGC/5h
      Fs69yum5cSZOLOIwAgjMzc9hViSi0SjRSJRDURdBEBh3Gin3FOQ+pVtHVVUUWUZt19iPPFEa
      FkSZE4tnn6tbvdVq5caNG/3Ww0F9Rq1W+8IbyGq1Uq/X+0pxBoOBfD5PNpulWCyyv79Pq9Ui
      nU4TCARYX19HEASWlpaYmppiaWlpYPGRqqqsr69/k1mgXz28jAGOB+l0mpGRkWeuFOl0mtHR
      0W/4rAaDFy4LNGhxr5dZoBcLL9QK8E3gRcqBv8RTskCRtZs8TvZQU2tsFyQmhz+zvV9eeQQ6
      z9wCFBP7fHL7Ma7hUSzGZ1vldOolSrUaxVIbh/0XaLWdGj/6m59yEEszPzv91GW4nEnTlY0Y
      5aenb1rFLLupAjahzlakzKj3s2vIZ7MYrVZEoJSOo5ocGJ6zSV46nebWrVsMDQ0NRFpE13Xu
      3r1LJpP5wrbLvb09CoUCHo+HZDLJ3bt3MZlM3L59G1EU2dnZodFo4PF42NjYYHt7G5PJxP37
      95FlmeXlZcrl8kAaYg6zQE6n81izcEciv3qtQqYqY5GyFBQTf/Kv32P8xGk69TKFZpdeq0su
      k0MWNLLFDMVMCdFg5JXv/AaPH23w29//PSqpA/7Vv3ufK1cvshevMD09SWTrIe6ps7SycXzj
      XhqtFvceZ3nn9UniqRLDdis1q5PvnZ0kky/h6ImsPVginqsx7HWSSWXwT/rZS5RxNbO0fItI
      6XXqJj//+Pvf/dw19NoqtWaVdE9Hwsj6yiN0ox0TDTLFDv5mCxtQVRvIWoxba5tcuPptRp3P
      R/IwlUrxrW99i0gkMrBAuFKpfKlg1ezsbJ8LNDo6SrlcJplMcvXqVdbW1sjlcjgcTx4mqqoy
      NjbGysoKFosFl8vF9PQ0brf7iz7il4YoiszOzh676MHRZ58g4KBCQ/aityrkGzpGWrQ1BYMs
      UCqViIf3CRxEqLZ6THqd+Md9VBttJrx2bt19yOO1x2idCol0ARWJZDhAvqGSiuzRaIOktTA4
      Rxl22SiWyih6h3SyyJnzZwEwmq10Ok3yhTKy1iEaz2KWexTbIunQDtZhHzaLkWQ6i8vpIJvN
      9Elahxi2ShQ6MrLWpaMJdNpNWp0uZpOBernA3l4IFahXyohG85MusecEg8HAw4cPBxpbHFqf
      ftENFA6H2d3dpVAosLa2RiaTwe12s7y8jNFoxO12k0gkKJfL1Go1otEoPp8PSZKIx+NUKpWB
      bQ81TWNvb4+Dgy82Yfm6OBID9LodnrwgoCPQbTWQDCZ6nTaSYkASBbReF02QkCXxyQwSBJAk
      JAFq1RoGo4FOp0srHyQj+Dk14aLZaGAwGtG6HZBkFMVAu1HHYDLSancxGRQkRUFEp1qtIsgG
      zIpEo93DYlKoN9tYTAbqzTY2q5lmq4Ms6vR0EUUS0HX62wdd09DRUTUQBVB7HRAVBK1HTxdQ
      JIFOV8NoVPoiUSazBekrkJ4GEQPout73HhsEJVvX9X6C44s6uer1Ot1ul0Kh0DfDsFqttNtt
      zGZznxKdSCSYnJyk2+1iNpupVqvYbDY0TRuYsJeuf3pfCMKxZuFeqCzQN4GXHWEvFl6oLNDL
      OsBLfF0ciQFa1RzXPvyAQDh15OCdwO6R12rZCH/73gfEkikK+SR7wRSlyrON7brNCn/33k+4
      /WCNX5x6x2aw1qlRajx9r5vLHf0Mrduhoz6/GKBSqXD9+vVjN4D7qtja2qJYLKKqKg8ePEDX
      dVKpFLdv36ZUKrG0tEQ6neb+/fuEQiEAgsEgDx8+JJvNcvPmTRKJBEtLS5RKpYGco67rrK6u
      HrsF01GTvDv3Of3W93hw7X0qSTuydQiny4HarnMQiiD1asRKGg6hjnFklmE1TarU5GwtS6Kr
      sreVIFzI8zvvvkYwlGDE7aSh2LhycRERUNt1Ysk0ro5CZF9iN1piYshIqWfCoLcoJsPkOkau
      vHL2KRH6V0S3QbXdI7wRRDdIONzD6M08TcwYJRC1FvF8E7/bRCRVwK6opFQbb184foO6r4JQ
      KMTly5eJRqOcPHnyG//8Q2+vbDZLo9EAnmgVVatVlpeX0TSNR48eAU+UpKenp6lUKthsNhRF
      we/3E4vFaLVabG5u8tZbbw3kPN1u95O23GPcgh6ZADabgVQ8ji7JpPNl3piZZW0vSK/dAV1j
      5dEKsRKcnBnjt96YoLCX5eLrb+LkgHhZwOYeYc5hJbByj4rooFtv8Npv/w69eoGNUI7Tfjvj
      Mydo5rM8Xn5EMFLB8d3zBPZjjDoNFNC4fPWdZ0oiflXodPGOTqLLKmgduooJpdNDQyafzRI+
      SOO8dJb56UmqtRw+4+C6sb4MoiiSTqdRlGfXTgaJdrtNtVollUoRjUa5fPkyi4uLmEym/k2e
      TCaZnp4mEAjQ7XbpdDp0u100TcNgMHD+/HkKhQLFYnFg53kYhHs8X67f9FXxVJO8vcAuo9Pz
      qNUcla6E2qxg9wwhCwKtapG2aMZpNeFyu+g1a7QFIyZaNHqgaxKlXBL3kIdINMX42Bh2txvl
      08e51uuwvb2JzTuBWW9Q7UjYTDqVloDXacEk68SyNU7MTX3tSdCPAdQObU0ADRB00HXCB7t4
      fTNYjBJqp0mlqeF125ElCU1XyWSL+Me/vIAziBhAVVWCwSBzc3MDMcn7Muzs7ABw8uRJ6vU6
      sVgMn89HoVBgcnKSvb095ufnCYfD+Hw+wuEwExMT1Go1FEUhlUr1j5+fnx9IW6SmaQQCASRJ
      OlYr2f4EaLfbAzeYGzQOVc0GiZdcoBcL/S2QLMsvjOb7ICEIwkBpyy/xzaI/AQ5v/kLigMe7
      SS69+ipu29OpAalYnKEJP9VkHNkzglmW+rz7wPpD8k2JibFh/BP+zzXU97odRNmA2Gtw/dY9
      XKNTXFic+9KTzCRjuEcm+AoGLgB0m1W2doNMzZ3E9Yxr+GXx89ZAx4VWq8XKygqvvvrqQOIA
      XddJJpPk83nOnTv3hVygWq3GxYsXabVaJBIJZmdnWVpaYnp6mnK5jNPpZHJyknA4TKvVYnR0
      lL29Pc6cOcP6+jrnz58fWFfbwcEBfr9/sB1h6cgOU9NnuP1wHb+li8kzTjEVwuydxG03IgC7
      D+6ihXx4WmXEyWksRjvpaIRXrl4lcBDk0mvfJrC2gqg1CaerzI272IsWqAUfYTjzLv9g3kKs
      3CNX2sCttElWNDxmUCUjxWSc6cWzRHa38M3OkQolKZYTjM80GXEq7EZy+IastDUTp0/OPjVO
      aJfr+E+eILZ/QNfroKNLVAo5vGOTlLIxjI4RDL0qHcnOtP/5Bb+H2NraYm5ujmAwOJAskK7r
      rK2tcfHixS88zuVyEYlEUFUVVVWp1WrU63V0XcfpdBIOh6lWq0xMTBAOh+n1eiSTSVwuF598
      8gk+n4+1tTWuXr167NcATzraGo3GsU6AIxGX3uvyN3/7HtPDCh/d3yYVi1DqyST2dggcHLAd
      CCAZrAxJVcL5Fo1qkbXHj/DNn8Eof364T65do1xI83cffEwuncU5Os7JhcMnvoCmq3x87WPy
      uTTr6wHGfR5y2Syrd6+zEUqRiO6Rr+iY9CYrm/vcvn6NQjHP+uo6I+MTXxIkP3m3WK5hVdtY
      x/7/6s6mt2kgiqLHnoCHYDux67pOkzRpmzZVHAIpAsSG/79FQoqBQpOGClmVS5UucBgrwwLh
      DWWBVC+4P+Gt3se973RJL8556Gyh1S2z2Qey63u6O/wHEkKQJMlf6TZaa7TWJSTPtm1qtRqm
      aRKGYZn3VUphGAbj8RilFJPJBKVUSY6vSlW1nn/YoR/Ix5y+fEVRGHR8C6fpM3v3ltPXb3CN
      NTUnoBu5ZGuLaTygGWzT7+9zefaeoNWm2WjQabeQUnJ42ON7IXjxLCYv4MnkhMsvKdHONt+u
      vtLaO2I87FGYjzg+HuA3HW5ubhk+fY6l1+z2BnR2I8Iooh8FtPsH5D80J8MhwZbPHQCYX8US
      ms8fP9HdH9BwbRzf5+rinJ29A1y7Tl3WcW2JkA5+4982OlXYoT3PI0kSRqNRZXOYZVmYpllC
      8u7ScrlECEGWZRRFwWKxwLZt0jQljmPyPCcMQ+bzOZvNBs/zkFKyWq3K9+nT6bQSP9DvSOR9
      Q/J+Av0u4MP1K6NDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cut (2)' width='116'>
      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
      AzsaFdmk0XltAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cut (3)' width='192'>
      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
      WOvgTFlbCqQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='j2d' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='j2d2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d3Rd13ng+zvl9l7RCYAoBMUmiqJ6sSW5SHGJFMvKxMmke97EnmScvhIn
      42Ty5iWZ+HllMklePJkkLpnERZac2FGxmkVRFCk2sYAFvbeL2/tp748LXAIkCAEkyqV4f2th
      ATj3nHP3Pmd/e397768IhmEYVKlykyJuxpdWosxVYpnWk5upvsvVVV7JhQKw1C0EQbjKza92
      RQld1xHFTZG9q6JpGpIkbXYxNoybqb7L1XVZAYjODJLXQ9QHRU6+cwGn3Uq6mMdsdpLP59l7
      6056z53FMNlRsjEsFhvJnEJTcxtKapqpeA6vXSSniqDmsboCtDTVoet6xfVAuq5vdhE2lJup
      vsvVdVkB8AUDTE+DoSv4QrUkp0ep3VLHyGiaGq8TDQOz3YWuqVi9AfLxGUK1zRSLBXQkfC47
      iAJ2SUWwe8HQEAQBQRCQ5WW/esNRVbXiyrSe3Ez1Xa6uwnKT4OmJEXKqiNVsxtCKBGvrmJqc
      pC4UYCqaQkTDZpYQzE4K6RhOf5jo9BQWk4Td7SaRyuG2iuR1GUHJYHH5sZlldF2vuOH3ZmoQ
      cHPV95oFYD0wDKMqABXAzVTf5epaXQWqclNTWUsxVapsMBsuAPOT4CpVKoENFwDDMKoqUJWK
      oToCVLmpqY4AVW5qqiNAlZua6ipQlZuaTVGBqlSpFKojQJWbmk2ZA1SpUilUR4AqNzVVAahy
      U7MiATB0jWgsjlrIMj4VIZ2IMhtPYxgGk2MjFFSNkZERVCXP6PgUAMlYhFgyS2RqnGy+yNjI
      CKpenQBXqSxWZA6tFPJMRKKgKui6gSEKCLrBli0hRkcTpGbH8G3ZwujgNI1BJ74tLUyPDKOr
      KqLJhJKaxuRrRhQM6sMBdF2vuLlAJbppric3U32Xq+uKDMJ1tcj4yDChUJBEpoDHKlLETDZb
      JBaZxOV2Mzk2gcvpYCqawhHKUsyl0SUrajyK1e5idnKchpZWRFHEMIyKs0W/mezj4eaq77o4
      xBiGTjqTxeV0XvFZKpXC5XJd5ToDTdMq7uHfTA0Cbq76rotDjCCISzZ+4KqNv0qVSuPmUAKr
      VLkKmyIAlTYBrnLzUh0BqlQMhmHw4osvMjY2RqFQoLu7G1VV6enpoVAooGkaiqIQjUY5d+4c
      PT09dHd3k8/n0XV90U9/fz+GYZQ/U1WVfD5fvkcsFuPFF1/cnKgQ1Unw5lOJ9c3n8/T09GC3
      2/nKV77CY489Ri6XQ9d1uru7CYfDNDU1YTKZsNvtJJNJEokEb7zxBh/4wAdwuVwUCgW8Xi+6
      rtPW1sYXv/hF2tra8Hg8xGKxcp23b9+O1WrdeAGAygzLV4kNYj2p1Pq+/fbbWK1Wpqen6erq
      IhqNIggCiUQCj8dDR0cH0WgUk8mE2WxmYGCASCTCnj17SKfTnDp1iscee4yBgQGy2SzxeJxg
      MIggCHzzm9/kx3/8x1EUhW3btnHw4MGqAMxTqQ1ivbiZ6rtcXTf8CVRdIqtsFLlcju7uborF
      Ilu3buX06dM8+OCD6LrOqVOnMAyj6hJZ5b2JYRicPHmSbDZLIBDA5XKRTCbRNI0TJ06QzWZx
      u93VVaAq713cbje5XI6+vj7eeecdHA4Hvb29eDwestlsaX5RXQUqcTPpxHBz1XdhXfP5PFar
      tfxZVQWqclOxsPFDdSOsyk1OVQCq3NRUBeAm4OWXX6anp+eK4/F4fNGStKIo5PN54vH4Fece
      OXKEeDzOmTNnysempqaIRqNLfueRI0c4duzYovunUqkrzhsaGuLgwYNXXRpPpVJMTk4u+dnV
      jq+GVU2CM8kYs6kCFFMUDDPtLfV0nzmLx+cjEo3j8fhIJtPs3LWdkf4eNMmKmk1ic7qIR+M0
      tHbgd9sq0hupEjfn1oru7m7S6XR5BzUajSLLMlu3biWVSqHrOj09Pfh8PtxuN4FAgImJCaxW
      K/F4nA996EO88sor+Hw+EokEx48f56GHHmJycpLOzk5EUUTXdS5cuADA/fffz4kTJ5BlmUKh
      gMvlolgsMj4+Tnt7e9kmx+/34/V6GRsbQxRFpqenaWpq4oc//CF33HEHoigyPDxMKBTCZrMR
      j8dxOp1MTk5it9txu90YhsH73//+Zet/zUnyLsfh9pLMTKHKViwG6EYer7+JxGQfTdu76Ds3
      RFuNh7wBktmOoClYPH6K8TECTdvJZVPoTktFJmirRDfNtWJgYIDGxkYkScJqtbJv3z50XadQ
      KNDQ0ABANpvF7/ejKAomkwlRFLHb7XR0dGAYBjt27GBiYoJQKMT+/fuxWCy4XC5MJhPj4+Pl
      +2qaBpRsbZqamhgZGSESiSCKIs3NzciyXBY+QRDK5ejo6KCpqYlCocC2bdsAuPPOOykUCths
      NmRZLpf/9ttvRxRFZmdnKRQK79qelnu3qxoBkrEII+OzhENuFENGQieXThCobWBidIz6+lom
      InHcNjMiGrpsR83EsPtCRKfGaWhpxyKL1WXQCuBmqm/F5QirCsDmc6311TSNN998k4aGBgRB
      oLW1lWg0yujoKDt27GB0dJRoNEpTUxM+n4+RkRHcbjcDAwM0NTWRyWRobW1dhxpdnYrLEfZe
      VTVuBiRJYvv27ei6zuzsbPlYJpPh7NmzDAwMIIoig4ODqKpanm8MDQ3R39/P9PR0RdmC3Txd
      XpU1Y2xsjPb2dg4dOlTu5XVdR1EUxsfHkSQJTdOYmpri7NmzmM1misUihUKBYrG4oWU1DAOj
      UMQQBIQlJsJVFWiOqgp0bUQiEQKBwBWjeiaTQRAE7Hb7dX/HtWIYBql/e47Et76N7dZbCfzy
      ZxEuW33c8DdeNYV4bxEMBpc87nA41vV7DcNAnZ4m88qrIAg4H3o/cji8+CRdJ/H0dzDyebKH
      D+MZfwJTY+OiU6r+AFVuSPRMhpn/9seoU6VQnNnDR6j9oz9EXCh4ooilbSv502eQfD4kv/+K
      +1RHgCo3JMX+gXLjB1AnJsgdP4FgNmNub0OeU8uCn/sc6SOHsbW3Iy6hjlVHgCrrimEYoOsg
      imva8cnBAJhMoCilA6JI9O/+HiOXQwqFqP2j/4rkcSPabdjvvRMjcx5d9SDKi4O2Vc2hV4Fh
      GJw5c4aZmZkrPovFYsRiMaanpzl8+PCKd7s1TUPX9bJJwokTJ4jFYkDJDuZqncV8eI/LPx8e
      HkbTNPr7+xcdV+YbCpRDh1xOsVgkmUySy+VWVPZ3wzAMMi+/wtTnf4/Uc8+vaccn19Xh+/c/
      hRwOI9fU4Lj/Poy5chfjCQYHJkjk1NKiy+yr5Ab+kvzIP155nzUr0U2Aruv09fVhNps5cuQI
      ZrOZ5uZmpqamsFgsADidTgRB4NChQ0iSRCgUIpPJIMsyg4ODhMNhTCYTU1NT1NTUkM/ncTqd
      dHd385GPfITBwUEsFguZTIbe3l4EQSjfM5VKsWXLFlRV5fDhw+zatYtisYgkSczMzLBnzx76
      +vqYnp5mdHSUgYEB6urqEEURVVVJJBKkUinC4TBms7lswjAfTqSzs5OJiQl8Ph82m+26n5eR
      zxP/1rfREwmUqWkc99+HtOqwmQZK/CTK7BuIlgCW2o8hyKXn4XzkYRwP3A+CgFEsUhwYRBkd
      pe99H2NM8WC5EOUj2wOYJBsIEoJUqpOh6xiFAoLFsjkq0I2KIAgEAgH6+vpobm4G4Pz584yM
      jHD33XcDpfp5PB4ikQjRaJRoNIqmabjdbgYHB6mrq0MQBGZmZgiFQgSDQUZGRsr2Nz6fj4sX
      L5JKpaitraVYLOL1etE0jUQiQXd3N4ZhEAqFyOfzeDweCoUCp06doq2tjbq6Os6dO0d9fT1H
      jhwhm80iyzLBYJBAIEAgEGB6erq8bn/+/Hk6Ojq47bbbEEURSZLWbIQWzGYsHe3kjp/A0t6G
      eA1CpWVHyQ38NVAasXQlgb31P5bfhzDX8WA2U/OF30cZn+B80Q1ZnaJqkFd1rL57cTi2Ilpr
      MTSN2b/4n+SOn8B+z92bsw+g63rFWV5u5D7A9PQ0g4OD7N+/f9PUwY2qr14ooIyOYWqoR7zM
      G2slFCMHyI98pfy/YPLj2vmnVz3fAGJZhVMTGYIOE7fU2NEX7DsVevuY+vzvzd1M2JxVoJud
      cDhMeG7N2jAMCoUCsiyTzWbLpsPzPbTNZiOTyeBwOBAEgUKhgN1uL4cK3OzNpndDtFiwtG29
      5utl1zYQzaCXdpBlz65lzxcAv93E+9q85WMLZztyOIzo8aAnEkiBQDUw1jybtROcz+d58803
      2b17Ny+//DIf+9jHGB0dZXBwEIfDQbFYZGpqikcffZTu7m7GxsbYvXs33d3dSJLErl27yurY
      ariRdr617CBK9DCCOYA5+CCCaFrV9ZfXVZ2eIX+uG+uuXVWPsM3GZDJhtVpRVRWbzUY+nyeR
      SLBt2zbMZjNQyrfQ19dHW1sbuVyOCxcuEI/H8fv9nD9/fpNrsH4U+vqI//M3UCc0LA2fxBJ+
      ZNWNfynkcAjngw8i+/3XNgJEZyYQzB68bit9F87hq6lncmyc2toapmYTbN+2lcnRITTJjpqN
      Y/MEiE1N0Lh1G06bqToCLKBQKHDx4kWCwSCZTAYAWZbLS5U1NTVMTU1hMpmw2Wyoqkp9fX05
      7qXD4cDj8az6eyt9BNASCcZ/5XMY+TyC1Ur9n38J6RrqCZfqauh6+X7zNkHX9AS8fh8zkRy6
      Q8Purmeqr4f6nbfQc2aAjlovGR00TOiFLCabi+xUP576nSTis9jMIXRdr7jVoPkQ2hvNvHkx
      QCgUWvKclpaWRf+rqorZbC7PI66l3Ferr5HPo4yOItfVLTYr2GDURAIjn79UpkQC4xrLo+s6
      aqFI7K/+ivyJk9juvBPvp3/h2ifBkakpIkkVSXKTik0S2LKF0Z4BGhtCjMWT1ERnQc1jyHby
      6Ti2QBPR0V4at3ZWk+StM4amlda4bbZlFxyWqq+WTjP9X/4AdWwMye+n5g/+C/JVhHK9kZqa
      cD/xOJkDb+C4714sTU3XvICiqiqFQ2+RO3wEgOwbb+D5+McwNTZcmwCE65sJ1ZXMmoPB0gOq
      CdcCUF9XW3q4ZSvButLx2tLnldbzv5fQMxlm/vufURwYxPmBR3B//ONIrqXzuC1F4exZ1LEx
      ALRolOzRo7gffXS9irssgiDg/eSTeD/55Jrcr7BgriQFA0iBkmHcNXd5giBcPeT0e6AnvRHJ
      nThJ/nwpMkPqe98ne/Ag4f/y+5jmOp+rYRgGxYsXSb/6Wul/Su/X3LRlTcql53LoqRRSMHiF
      Pf5G4Xjf+5DCYSSfF+vOneVNuWpLfQ9hat6CaLWWdWctFif39lFMH/3Istdps1Fmvvgl9GQS
      ANnnxfezP4tlxy3XXSZDUZj5k/9OcWAA/y/8PI7777vue14VXYVCCiwuEBc3bUtHO5aO9isu
      qTifYEVR+MEPfsDIyAjAkkGaoNRr9fX18fLLL696KVBRFLLZ7KJ7DQ4OMjw8zEsvvXRNxmBL
      lfPw4cMcPXqUgYEBBgcH0XWd119/nXPnzvHCCy8wMjKyKNDU9WJuaiL027+JMLd8iiBg2vLu
      vbg6OYm+IGiVYLNju23vmmxaGoqCMjWJUSigLDBfXnPUArzzNTjyP+H0/wFtZa6XFTcCzNut
      ZLNZvvSlL/HII49w+PBhzGYzqVQKk8lEa2srW7Zswe12E4vFkCSJp59+mnvuuYfjx4+zf/9+
      NE2jWCxisVjI5XI0NDSgaVrZ7kbXdXp7e+ns7MTpdLJ9+3bGx8dJp9O88cYbnDt3jp07dyLL
      MqlUCqvVWvJCUlVUVWViYgJRFNm+fTuRSISWlhbeeOMNnE4ns7Oz3HPPPUSj0bJ/rNlsLgen
      isVi7N27l2w2u+Y749auLkK//Vvkjh7F0rUN6+7ld04BTFuakGtqUOcirdlu2wtrtEwt2myE
      /vOvUBwYXFXvb2gahe5zqLMRrLt3I/l8yz+r5CjEB8AwMGZ7IDWO4G151++RvvCFL3xhxaVa
      I5aLDBePxzl58iSSJOFwOKitraWurq6cFM3v9zM4OEhnZycOh4OxsTE8Hg8+nw+Px4Pdbqez
      sxO/308mkyk3XE3TyOfz7NixA4/Hg6IoBAIBGhsb6erqwul0YhhGOZ9UTU0N6XQav99Pe3s7
      iqKUDcXcbjcNDQ04HI5yDPr5BG7zEdI6OjoIBoPY7Xbsdjsmk6lsbRkOhxkYGCAUCnHu3Dla
      W1vXdN4kh0LY9uzBNBe65N3egWixYLttL5Lfj+OB+3F+6IOIa1UeQUAOBrG0t18amVZA6rnn
      mf2rvyb39lFyx47juO9exHnDt6W/CCbfQS8kyQ+8CSYHYv1tZC6e4+1z/8rsUDchZ/0VTjFV
      U4g5lloWvDyW/EpQFIWhoSG2bt1aceEfF1Lpy76Tv/O7FPsHyv+HfuPXsO3bd/ULDAMyU2iD
      B8i++ifI7Q8j7/4Vnn/5i1y81QGGwcOHTOz59OcXTcQr9wmsA5qmcfToUbq6upBlmTNnztDU
      1MTY2BherxeTyURtbS1vvfUWra2tzMzM0N7ezsjICDt37lyRumIymWhvv3KyVWUhBoahASKC
      sHQnYWpqKguAYDYj19Qsf0tBAGct4o4fw16/D9ERIv3aITLWS/17Ij5BcXoKc01t+V1uuAo0
      bw69Wb3j2NgYiqLg9XqZnZ1leHgYj8fD8PAwqVSKjo4ORFFkYmICl8vFsWPHcLvd+Hy+iu4x
      V4NhGChjYxTPn0fy+xFM129fsxrU1AVyg19Gz/Qju3cgCFdqA5ZtnRiFAqLLjfeTT2LZ3rWi
      DkgQBESbD0G2oGcyyM++QqzWgm+igKQaHK6dRE3GCYtBRKt14wVAEIRSdr5NEABFUejt7UXT
      NCKRCJOTk7S2ttLT01N+uG63m5mZGRoaGjh58iSBQIBIJMK2bds2pMyGYaDnx9DS5xFkF4K0
      nN57bWjRKNNf+EMyr/0QLRbDtm/fupmp6+kM+e5uRIejrMPnR76GlulBz40gu7oQLVfuNosW
      C7a9e3Hcdy+mxqvPZZZDDocwRzM0/utZaicN3vpIkLSQYzI2QOM3juK6576bSwUym808/PDD
      JJNJbDYbprmer6urq2wXk8lk2LNnDwCPP/74hpdRzw2R6f0iaDlEewuO9l9HkFbvSLLsd2Sy
      6HPLwOrMTEl/XgbDMNBzwxiGimRvvaracsX3FApMfeELKKNjyOEwtX/83xDtdiTXdtT0BQST
      D9FSd931uRqCKOL9yU/h+NhHEUwSjVPPMJToITSSh6k0hqrenFEh3G73ksdlWb4my8prxTAM
      tNQZtOwwsncvkrUeLTsIWmkfQs+NoatJpDUWAFNjA55P/QRKTw/uj/zIu+7OKrG3yA/9PWBg
      aXgSS/iDK/oedXoaZWz80t/j41ja2zGHP4js3oUguxHllZtqXAuCICA6HMiyzEebn2L6wnHk
      yNu4f/4BxM3wCb6Ro0KsNWryHXL9fwkYFGdewtH1BWTXLQjmMIYyi+zehWjyLbrG0DS02VkE
      sxnR47mmZymIIo5HHkb+8IdWdL6WPMO8X5WaPL1iATDV12O99Vbyp05h6erCPOe4Iwgikq1h
      1eVeRDEDE8ehfh+YVuYRZxLNNGy/C7bfVT52U6lAlYaW7qNkeQOGmkIvTCE7O3Fs+x0MJYZo
      qV3kAKIXCkS//Lfkjh5FMJvxfPJJnI88vO4diilwH2ryDIahYQ48uOLrBEki9Ou/ihaNljay
      1nIRIdoD/T8Aqwdqdl/TLQzdqArAZmLy3kox8iroeURrA5KtCaCkFiyhGuSOnyB78CAARqFA
      4pvfwn7H/mt2FFkpsms7jlv+bzD0KwJLvRuCJK2PSXV4J5gc4Fs+14CeyxH9y7/G+b4HMTU2
      lCbjc2FmcidOXKcAGAaFYhGz2Uw2m8Vus5LNF3HYbSiFPIYoo6tFZLOVYj6Hze6gqv1cQnK0
      4ez6fbT8JLKjvRy35mrocx5j8xjFIsYGhRtfb1191YgyBDre9TQ9l6N47hzRCxdK3mAOB/6f
      +xnsd9xB4fz56xMAA+jv76el1s/wTJxiXscsGmzdsZ3R4SE0JAytiIRGQbfgC4WoC3rLewGV
      xKrKZKiADsLKt/aviimIZApiUArYtBzWW/cg1dSgzRmVWfffjujzXdOzrMR3sB6IXi/+X/5P
      RP74T0p2QvE48X/8Jyx79mDbv//6VSCTLJPPFzCZTeSzeUxmCVVVEUQJ0RBAkkFVkM1mjDk/
      181eBboetEw/uaH/DXoOc81HMYeWz1C4lkh+P+Hf+10K75xCdDqw7NkDFWhuYRQz6OkpRF9r
      RSx4GBiLlnr1fA5DVTG3bb1eATDwuF2YnB6CxQJbtzhJpnLkEgnq62oxJDNaIYfF7iSTTuH2
      eBEwNm0jbDlWujudn/4+KKXYoMrUv2AJ3vOuqstaIgaDmB5+6Lrvs5678dnnfxtt8AC2x/8G
      qfnudfmO1WBub8fU2oIyMAiCgOPBB5Hs9pJT18ITc6kUstNKPqPhcr772rMgiIRq5ryNHKVG
      4PW4gAUTJUtJTfB6S4GKbuDOv4R4qbHr6TyJp5/FuvPWFW/V3wyI7np0mw/BunF7KsshWCyE
      fvVz5E6+gxwMYN21q/yuFliDGrz2zNMkHU727b2PhtD6THpu9NCIenGW/Og3KFx4h9yrGdTh
      UujvwGd/Ccc992xASdeG5epraBqZAwfInzyFZVtnaal1FfZChqGDWkAwbdzIuBwrzhLZuWcX
      WiaHINzo3fT6IZoDWGt/hsy39VLjB9B10j94eXMLtobkjp8g+uW/JfvWW8S+8lUyP3x9VdcL
      glgRjd8wDAxFwVDVsuph6Dp6NltecFggFgJSIYs1UIvVvL7bAzfaJNjQdfTZHoxiBqnmlpK3
      1GU9omBde6O19cDQNTB0SlE0l6Y4OFhKajFHob8fJw+vf+EWYhilhgsgy6tWLw3DIHf4CIlv
      fxtDEPD/zM9gaqgn8j/+guLgEJaOdgKf/ewlATAMlYQm4ZTAvI4CcKOZQhi6TuHVP0I59S3A
      QKzZgf3xv8HzxOPEvvo1UFVEpxPP4z+6OeVTcmhT3QgWF2KwfVlDNUNXyT37Sxi5OJbHvwyy
      d8nzbHt2k/q3f8PI5cFkwrbvtvUq/lUKapA9epTEN74FgOtHHsN+x/5VBeoyslliX/0HzK5S
      koz0C88jBYIUus8BkH/nFKnnnls8AlgdLsJ6mv7hGLs7w1e59fVRCcZwq0Gf7Sk3fgB96izK
      2WdwfuBnsO7YgTo1hXlrK5J36ca0rmXLzpL7zqfRZy6AIGLa8++wvO+3ri4EmoI+24eRT4KS
      A5Yus7mjg/Dnf5fCufOYt27F0rVt/SqxBHo+T+x//z1qPI4ARP/myyT/9V8J/dZvYlrgGGNo
      GurMDKLTieS8NGfVEgn0oaOEHvJg8pdG6uyMSC6SXvw9mcxCAdCJTE+jilZ2b1869eVacMON
      AMUM842/fKyQQhAETA31mBrqN6dggHL626XGD2DoKO/8E6Y9TyH5lw5HLphs2J/6GmhFdMfV
      zRMEQcDS1oalrW09iv2uGKqKXigsOqZFpsi/+SKmj3wCTDYMwyD21a+TefVVRI+H0G/9BubG
      RvRslqnf+33Cj9gxBS5tVNp3tyPL28gdO46RzSK6XDgfeuiSAAiCiY6tWyja/Vjk9WugN9oI
      IIVvQQzvQJ8+WzpgdiJv25xoaZdjFNKXHdChmF365DlEd0lg9U2Ig7pSRKcT1wceIflvz4Gq
      IrtNhB6tQ/b0wPH/Bbt/El0zkzlwAKNYRJuZIXf4CObGRpSJSdTpGbL9AZzbPQgWM4gSQqgd
      S6Cduj/7U5ThEcwtzUgez+JVIIEi3/vWPzMwkVy3yt1oI4BgsmJ/4v/Dcv+vYb7j09if+hpS
      8N1tUDYCU9djJYOwOcS6PYjBzk0s0dqQef0A6vQ0od/4dWz79+PcE0L2mEp2ZNkITBxHtFox
      z8c8kmXMc0k4zM1bsO7ZTfxogtjFAOz/DNpt/wEC20oRKvx+bLfumVNZL7MGLaRy6KJOsVC5
      vcNmINh8mG//2c0uxhVI4e3Yn/oq6sXnEaxeTDt+FEFeuX1ScWSE9AsvIgUCuB59FLFCVrJS
      zz2PMjiI/Z57CH7uV2DwdYShVy6dIFsRZJng536F3PETyDU1WLZ3ASDIMqHf/A20eALJ60GQ
      JFBVlrbCFC5thBmGzqHXX8Vb384tHavPOLJSbvSNsPcKaj5P5A//aznygvenfhL3jzy2yaUq
      Uejro3ix59IGnJKDC9+FxAh4mmDbx2EV+wzLvdsFR9NMjKUYGjtEOBwi6KncvFNVrh9D19HT
      l8yr5+OCVgJXTMBNNtjxSdAUkEywQp/klbAoMFYumUJ2WcindVyutfVDXciNEhjrvYyqqhQO
      HyH5zDNIPh/+T38aOXT9q3+GYaAnk+jpNHI4vOEhV5ZiuXe72Bbo2adJ2Bzcvu9+GoLr5wBx
      UwuAYaDn8wiStKpQgWuNqqqld6CqIIolXfk6MQyD7JuHiH31a+jZDJbOToL/6bObskeykBWp
      QIah4q9pwiwJ2CyV1TivxtDQEIFAgGw2W463aTabaWi45HCdy+UQBAGr1UosFuPll1+mra2N
      mZkZ7rvvPsbGxsjn86TTaVwuF5OTk+zYsYO6unUI12EYpJ5/gcR3nkG02Qh89pewdG7eqo0g
      CFeYdKwUdWaG6N/+HYaq4P+5n8XU0ICRzxP72tfQEwkACme7Sb34gzVLcrEeLNoJnhgdQg8E
      0fXVrdMbaoHz/aOEPFZGJ+Ps3H0Lw70X0CQrWi6J1e4gHk/T2NpG0Lt2I4vFYuHgwYOEw2G+
      /vWvc//999Pf388tt9xCLpcjlUrhcDiIRCIMDg7ymc98hubmZmRZRlEUTp06xdTUFF6vF6fT
      yczMDC0tLUxPT6+LAOi5HIlvP42eyaCnUiS+8yzh3/7N67pnX/ICJ2cP82jTEweKzWMAACAA
      SURBVNg30G0x8cyz5N95B4D4P3+T0K99DiQJ0WxZlJf3WrLDbyQLNsJkbt+/mxODo8zG86ua
      BAuyBa/LTr6oUO9zUjBAtjgQNQWrx08xMUmwoZ18LoPmsqFp2ppshvn9fhwOBzabje3bt+Pz
      +di9ezeiKNLf38/evXuxWCxIkoTf70fTNHw+HzabrRzpra+vj6mpKXK5HIFAgP7+fnbs2EE8
      F2M0M0ibexsmcW1UFQMQrFaY8+0VHPbrTswXy88ylR0nW8xiZgXzNl0ne+gQ+XPnMTc343jf
      g9ekp4su14K/naV6iCLup54k/pWvoWezWDo6sN5374YmHyyoKv2zMwiCwNZAELMkL5sAcdEk
      ODk+yLH+cW67bT8e+8ofilbMcaF3gNraWhLpHHazhEkCXbajZuLYfUGiUxPUb2nFJAloC1LX
      rwfFYhFVVVeVQf1yPfGVse9zYq5nvcV365qVLd/dTfKZZxFdLryf+hTyXK6qa8UwdIp6EbNk
      QVjCwtMoZtCTE4jOEILFTeLZ75L4xjcBEMwiwSfvxbZ7J9TeWsqsskL0QoHUc89jqCruRz9c
      NlQzDAM9kbg0Cd7AeY6iaXzj5NuMxGMAtPgCPLlnHyyTlPHSUcMgk0uTSefQVBVYuQBIZhu3
      3FJKp+O//H36SlHY3Fvb5r5m/cwgkskkiUSiHPE5FArR3d1NY2Mj58+fZ/fu3RQKBaanp/F4
      PEiSxOzsLKFQ6AqVZ5t3F5qh0ehoWVUZDK0AhgbS0lkarbfcgvWWK1MPJYtxClqBoC28ZEO+
      GoIgYrlK5Dg9Nkjue7+KHhtAcISxfvj/If3ypQ2l0AdrsTonoH8CJk/C7f9XaZlxBYgWC54f
      /fgS5RGQvF5EtwNDL4Bh2rCd//FkvNz4AQZjs0ylktQ4ry7YlybB5Dh+eghXMIjHsb47guv1
      QMxmc1kATCYT09PTjI2NUSwWqa+vxzaXOnRkZKSsho2Oji6p7zc4ttDgWHmSOMMwUGZ/SGHi
      XzAMBZPvTqwNP44grmyke37kO8wWZvj5bZ/DLK1Nr1k8+vfokYul8iXHKB76S0SrDw2Q7BKW
      2gWCk50p/biu37hPj5xFG/wuihAB31ZszT+/IX7TZklG4JLpoigImKTln/+CHQWZmpoAZlEn
      mS1c/Yo1YL1GgdnZWc6ePcvo6CiDg4OMj48TCASorS2lbs3n80xPT6PrOul0mmKxSF1dXTkf
      2fVgFKfJj/4zhpoELYcSeQ0l/vaKr98fvp/7aj+ASVy7dXOjmL7s/wyeJz+BYDaj5TXU9AK9
      WLaB9fqXK41CCqH7O5hSeWxJB1rsNIWp56/7viuhxuViX2MzJlHCJEnsb2oh6Fx+YWCRNWh9
      OITos5NNF/G5Knv2vhQNDQ089dRTxGIx7rvvynxU8Xicrq6ucmb2hVzvRE0vRObiBS04lp9Y
      8fWtrrU3sDPt/ATq4EEopkEyY9r9FKYdd1Lb3EK+pxeh0QPp06XsilvuX5V5wVVR06Ud2zkE
      Q1jVc7geREHk4c7t3N7UgiCA22pDFASWi360aHyITIwwPqiy/84H1q2QG2EN6vP5ljzuXccN
      GdG2BUF2Yajz2RZFZNeVgrYS9NQkhYP/Az02iNz6AOb9P4dwDWqRtOUu7E99DX3yFGKgHbG2
      FA3BVFuLEAzOTQzfPYneqrCHUXxOpEQMxZxDF1XM7p3XfLvp6WksFsuKonanUqnSSt8q3vOC
      BBkC5DMMzIxjlkOE12kneLkMMYVCgWeffZZCoVD2G8jlcszOzpLNZjGZTOXkFlarle9973sk
      5jZdTCYTmUyGeDyOKIpEIhH6+/vRdR1FUYjH4wiCQCKRwG638+yzz7J161aSyWR5I0xVVURR
      RNM0+vr6CAQCK66XIFmQndsw1BSCyYO17nFkz57V+7LqGvnvfgZt4IcY6Sm00SMg25AbVu+W
      KAgCoj1Q8mlw1S4qy3rFBRIEEcHXSUGaQrdImMMfwBx83xXPIVssMhKPYpZlzMvo6e+88w7D
      w8MkEgkymQzJZJILFy4Qj8eZnZ2lWCzS3d1NbW0thw8fxuPxcOrUKQBOnz5NJBJhdnaWZDLJ
      uXPnMJlM5PN5RkZGiEQiC3eC06QFK7vadq1r9uDlRoD5bI7pdJqXXnqJvXtLuWoHBgbo6OjA
      4XBQKBQ4fPgwTzzxBF1dXfh8Pr7zne/gcrnYtWsXk5OTTE1NkU6naW5uRpIkJicnEUURSZIo
      FovcdtttjI2NcfDgQTweD7Ozs6iqSiwWo6amhm3btqEoypJlXA7J0Yp962ev6/kYuRja9LlF
      x7Shg3DHL1zXfTcS0RLC3vKLV/08VcjzlbcPkSrkcZgt/PT+u/FYl1a/YrEYXV1dRCIRDhw4
      QCAQwGazlXM9z87OMjExQVdXyRx6ZmaGfD7Pm2++SVdXF5IkEYlEKM7FsP3hD3+IzWajpaUF
      w1jkDyDSd+EcRQR27LlrycKsBct5hJlMJh577LGyuXQ4XPJLdjgctLS0IMsysiwjiiL+ufVW
      s9nMrbfeSjgcpq6ujueff54PfvCDZDIZGhsbKRaL7Nq1C6vVyptvvkkymUSWZT796U8zPT1N
      MBikUCgwPj7O1q1bGRkZoaGhAZdrdVGQ1wrB4kZwhjHiw+VjYmBzXBPXi8HoLKlCKZt9plig
      f3aGvQ1Lr7h98IMfxGQy0dTUxC233FLO/+xyucjlclitVuLxOG63m9tvvx1N06ipqcHr9ZY7
      24sXL9LS0kIqleKuu+4inU7j9ZZi1FbTpM6xHsZwaSVJQSvgtwRXpQqpo0cpvPQH6OkpBHcn
      9se/hOha2xDjm2n9Op1O8Q9H3kQzdERB4N/ffjd17vWLIrdCa9CNYy0EYHh4GE3TaGlp4ejR
      o7S2tnL8+HE8Hg+JRIL77ruPnp4estksmqbh8XiIx+M0NTXR0tJyxf3WukGouspXe/6KVDHO
      T3X+En7L6kyN9UKW2T//EvnuXkxbthD6tV9d0zwAm23+PRKPMTA7Q4s/SJP3XbLAX8bMzAyv
      v/46dXV1FItFHnzwQQ4ePIiu6/h8PlKpFFNTU+zZswePx8OFCxfKas8bb7zBAw88UJ5Ub3iE
      2rWSt/r6eorFIoIgUFdXh8lkoq6uDo/HQyqVolAokEgkiMfjJBIJUqkU4XAYxypiy1wPoiAS
      sITwmP1YxNX7VhTOXiB3/CxGvkDxYg+ZA2+sQyk3jyavjwfaOtni8696oWB+sWJ0dJRYLEYy
      mcRqtWI2mzl+/DgDAwN0dnaSTCYJBAI4nc6y1XAymWRoaKh8rxvWA2RoaIjBwcFyTl+/34/b
      7cZsNuN2uxkaGsLlciFJEoZhYLFY6O3t5dZb186uZzlEQeSjzU9hGAaSuLrRTo3GiH3t6yXj
      ufn7bdKcpBIJBAKEQiF27tzJuXPnymYvhmFw5513Eo1G6e/vx+l0MjQ0xOTkJFCaY27fvp3m
      5ksuvzesCgSl0URV1XK604UoirLk8atxuUqg5/MYilJOp7ORpF95leiX/9clAZBl6v7sTzHV
      1q7+ZmqhlE3lMiFcExWomIahA6Br0HzfmuwkrweL6moYkBguRZeo2XXjjgBQWlK9WiNfTeNf
      iGEYpF9+hcQ3v4VRLGK/6078P/dzCOaNc+0T56xYy72/1YponVOjNKUU/0degb2Wmoe3/wr8
      HbDto1d+np2F5CiEblmxEdwi+l+GiWOlv5U07HjqKtEXroJhlHahRXl1110PahbO/BMoWdAK
      N7YArAfazAyxr3wV5vYBMq/9EEtnJ86HNi4TjHXvrdjvuedSNshP/BiixwOFFJz8h1LD3v0T
      4HqXVKOiDJ4t4LrKyDHwMkyfAZONaamBw91jDE/HOT8cYduWAD/9oVtx2ZYRNDV36W8ld/Xz
      lkLXoO8FiFwo5fpq/3CpvOuNaAKLp9SRWDxrKwDFfJZEpkgo4GV2euKSP4A3SHR6gvrmrVjk
      ysoMcznqTKTc+OdRxsc3tAyixULgM/8RdSaCYDEjza1pk5kqWWwCxAZWJgC3fOLqn9ftA7OT
      pBziD/7uh4zOXIoMMTyZREPjlz9+99VVwJb3lfL1GhpsXWX06PQEjB4GDBg7AuFd4F2/cDxl
      RBPc+tMlgbX511YARNmEUkgAHrJ5FV2bRTSZiQx3Ywl1MjMzQ104WJF5wua9hsTGBkSvFz0e
      L30giph37li9sZxWRO8t5bEVG24HefUrQUKwZIqhaVrpgLMRofZ2ULMYoV0lh/ZlGEnEeGt4
      AFXTua1xC9uClwIe67qO6m4GdzP9AzOMRa4Mi3J+NEJRUZCuZjJhDcKun5orrAjz5VxJ3QQT
      oigj6AqGIKELpkvh0NeYKzzCBDOYzaBpaysAhWyasbExzDY7SiGDLtlQE1GsjiCR8UEaW9oR
      RbG0Bb3KCVhRKxAvRvFbQsjrMFSWJ0oeD+Hf/k0SzzyLnsnifP/7sO9ZvU2P0vsChRc/D6KE
      Y/fHEW//D2tgay/D9o+t6MzpdJKnT59A0TQwSs4i3n130uApGQounBjWB924bJYrzOA7WryY
      TCbE9dDPneHS6BS5gBDoQHLXrds8YGJigosXL+L1eunq6uLMmTNIkkRXV9faCoDD7WP//tvJ
      5XIEO7qWPOdaen7d0Hlx9Lv0JLq5LXg3D9Z/6HqLuizmlhZCn/vP13UPwREC2YIoyaXhdvKd
      NXE2WSl9s5FS459D1w2GYtGyACwk5LXzWz9xLy8e7SNRzJJUsmypc/Op+/auT+OHUmMPbS/9
      rDPzq4Xnz5+nWCwSiUQIBoOYzeb1mQTb1iESQEZNo6OTKZsbVzZS434cD/8OjB1GNNnBt3TI
      8vWizuVGKOXkLB0QIORYei9BEAR2bg2zc2sY3TAoqipmWUJcwwhsq8YwYOxwKRzi1ofBdu2+
      0263mx07dqAoCoODg+zZsweLxVLaSN3ofYB5i8/VqEAGBslinJH0IK3uDhzrEP5jXUwDdK20
      5myygaNm45b6KD3no6NDvDXYj2bo3FrfxANtneUefbNNId4VJQuHvgRaAZofgK2PXPOtKtoW
      yDAMksnkIocHTdPQNA3zZREFdF2nv78fr9eL3++nWCxiGAYzMzOEQiHS6XTZYnS11pwV3yCu
      EWXO99kkSYvmMRVfX0OHC9+D5DBs+1hpOXeFJJNJ+vr6sFqt5QAITqcTj8fDm2++SUNDA7qu
      l9rKOlZhSS43hy4Wi3z/+9/nscceo7+/H03T8Hq9zM7O0tHRwauvvsrtt9/O7OwsO3bs4MSJ
      E2zdurXsFON2uzl8+HDZ73feXPree+/d6KqtO2NjYwwODnLXXXct2klXFAXDMBZ1GPMmAC0t
      LdQsSCtUKBSwWK5c289ms6sKI7PuCCJs+0hJEITVWQ3Mm8Qkk0ni8TjNzc2kUina2tpobGzE
      arUyOTmJ37/Gy6ArZWFPdOHCBQzD4LXXXqOzs5PBwUGi0Sh+v5+DBw/S2NhId3c3w8PDZaeH
      hoYGXnrpJR588EEmJycRBAFFUdA07YZLwLEaIpEIuVyON954A4vFQk9PD9u2bUOW5XIspKmp
      KTo7O8lkMgiCwODgIG+88QY1NTXous7IyAjbtm1D0zRisRiBQIBYLEZ9fT3JZBJRFFEUhfvv
      v39D6qTrOs888wx79uyhvb198YeCuCgStGEY9PT0IEkSFouFxsbGJe8Zi8Xo6+ujsbERj8fD
      zEwpUFYkEqGmpqasgouiuPk7wdu3b2fXrl0Ui0UymQz19fXY7XYSiQTBYLDce833UPOmrD/2
      Yz+GzWajUChQU1ODy+WiUCiUPb/ei9hsNm699Vai0SiFQgG73U4ul8PhcGAymRgYGCirjoqi
      oCgKVquVXC5X3ntpbm5GEAQaGhqYnp6mWCzS1tZGIpEoR8cbGBgoOYtsQEciiiLNzc14vV5e
      euklTp48SWdnJ/F4HLvdTigUIp/PoygK73//+7lw4QL79+8nGo0ufUNdxedx87GPXVount8D
      kBaogfMGcZs+B6gUKl4nXmMqqb5DQ0P4/X4Mw+DYsWOEw2FcLheiKBKNRsnn8zQ2NlJbW8vQ
      0BC6rnPx4kUeeOCBxebtmgLH/qakMu37xbJpRUVNgleyCpTNZvnud79LY2NjuUeTJIm2tjZe
      f/11tm/fTiKRKIXjzmZ5+OHrT+JcSQ1itaiqyvj4OE1NTeTzJVfDVCqF1Wolm83idruxWq0k
      k0m8Xi+xWKwcHt1/RSi/Gxg1D4f+35IA3P05mIuksdy7XRAVYmMQBAHDMJaNSHDgwAHGx8dp
      aGjAZDLhcDjKu8eBQABZlpEkCV3XrwiHfq2sV5SEjaCvr48jR47Q3NxMIpFgenoaRVG4ePEi
      p0+fprW1FVVVuXjxIrquc+jQIfx+P319fYts4zeD06dPk0ql6O3txeFwkEqlOHjwIIIg0NPT
      w8zMDCMjI9TX13P69GlcLhcHDx7E4XAwMzOzONSNIJVinDbcAaZLE/rl3m1FvvGHHnqIJ598
      koaGBmpraykUCng8HkRRLIc1mZqaIhQKrSp0yXsVVS1lQ08kEui6zvj4OOfOnSt3IGfOnEFR
      FCYnJ+nt7SUajXLu3Ln1yYGwSkZHR1FVFavVSl9fH6FQiFAoRDgcxjAMdu7cWTZt1zQNi8VC
      JpNBVVXS6cvSxAoCWNyrCvJbkSrQZnAjq0CappFIJEin03g8nrJAzC+LZjIZrFYrxWKRYLBk
      jJhIJJBleV2Dha2E48ePl+M5NTU10dzczOTkJLFYDEVRaGhooKmpiZmZGQ4ePMiOHTsYGRmh
      pqaGixcv8olPfOJd31tFzQGgOgmuBCqxvqlUCrvdfkXbMAyDVCqF2+2+pvsuV9eKVIGq3JzM
      +3BfjiAIK2v8hgGjb8Gpfyy5awIUMwizFyAzvfhcJQejhzd/H6BKlWvGMGDkzZJbZ9sHwOqD
      ieOQnoTUeOn/k3+PVEyXHGF2PAnBOSvl0UMw+FpVAKqsE8lRGDlUsuJsvr+8JLlmKDno/0Gp
      wRs62IMlq9HtT0BqAnxtcPF7l0YCXYGBVy8JgM0Pomn9BGB6sh9DCjM71YfVZieRzNDQ0kbY
      Vw3vsamo+VJvuJ5oCpz7TinyAoDZAY3XGW4zPVX67Zyzaxo/WvoxAKsbgtvmPq8t/UDJ4X4h
      +gJX15rd4NmyfgLgDwaJRnScHj9Kcopg3VaK+RyaZl+zJHlryXKJ1N4zqHmkY3+N4e9Ab3ts
      /eqrq0hasRzVQlfy6Kv9LiUDheRcYxaQTv8fQEDbXwo+LFrciAggCuhbP4hur73CRVSsvQ1x
      5mxZEPT6OxeXw+Rev1WgybEhcpoZh6yVnOJnJqlrbEYWqS6Dbha6Chf+FbzNqKHd61dfw4CZ
      bhg+UNLDOz9SGgVWyrxJQzYCnR+F+n2l6BFwqac3dIgPAkLJmX4p5x3DgMwU+sx5RFcdBDqv
      8Mmo7gPMcVMIwALWvb6GMWfKLK7eEUgtwJG/KI0AbR+CLddn2l5R+wDzCTJu6H0Awyjpk6K8
      dM9zA3DNAqAVS6FQrN519HAzID1dCgET2HZtQbsWkM/neeWVV7jrrrtIJpNlkwuTyVQdAeZZ
      cYMwjNLka/hAaaWh80c2JqDTCtENnaJawCJblzVnviYBKCThxN9BPg7e1tKEtPmBRXY3lUgy
      mWRgYIB4PI7P5yMSiSAIAlartboMumoMrbTZko+Xcus23Q2O8Ltft0Ec7H+dZ059g89/6I/w
      2xfbSamawosXnqPJu4Xt4WvI2zV7EXJzdvixvtKPkoPtj69BydcPu92OyWRi586dWCwW6uvr
      y2YiGy4AN7zHliCVYmmOHir5qVZYQNgGbyN7G/djW6JXvjhznq8f/TvCzlr+5CN/zqo9Yj3N
      pQBfav7SMW19U+quFbcsSE7uXJA6taoCzbG6OYBeitNpsl+3frqR5JQc/3TsK7QG2ri/9f3X
      9g7yidJO6+TJ0qpSx6PXFbJkI6ioSTBUtjHc7OzskibWqqpy+PBhmpqa2LJl+QgFExMTJX/T
      Of+FSuRmWvWqKAGo9BHg7NmzpFKl4FvpdLrscldTU4Pb7aa3t5d0Oo3JZELXdXRdx+FwoCgK
      /f393HXXXQiCwOTkJIFAgB07dmxmta5KVQBKVOcAl2G1WrFYLBQKBaLRKI2NjZhMJgKBAG+9
      9RY1NTWEw2HOnz8PwI4dOxgYGCAWi2GxWLDZbKRSKVwuF9PT07jdbpqamjas/P/yL/+Cz+dD
      13Vuv/12Jicnqa2tZWZmBrvdjtPpJJvNEo1G8Xg8GIbBO++8g9vtpqGhAVEUy+fIsoyu6+Ry
      OZqamujt7S1H5nivUFWB5rieHvH8+fM4nc6rhunYSHp6esqJ4ea95mZnZ+nq6mJoaAiPx4Om
      aSiKgtvtxu124/P56OvrQxCEclLyYDCIJEmk02l6e3t59NFHKRQKl0Y0XSnZ4Ugyl1J5VCYV
      pwLdKBth87F17HY7fX19WCwWIpEIra2taJqG3+8nEokgiiLZbBaPx8P09DRbtmy55gw118u8
      elYsFikWi/T399Pe3o7VaiWRSDA8PExHRwdQChPidDo5duwYra2tmM1mRkdHcTqd+P1+Xnzx
      xfLfnZ2dTE5OloITNNXAqa+DpsLuT4HtyoC7lURFqUA3ErOzsyiKQmtrK0ePHuWRRx4pH58P
      3nXkyBHy+XxZUOLxOLqulxvZRjO/xDcf/W3hJNxms1E7l2dsYaPYv39/+ZyFy4VPPPHEonuX
      nVKifSV7eygl7ahwAViODd/Hr2T9/3IKhQJDQ0OkUilqa2s5f/48uq7j9/sZHh4mGo3S0dGB
      2Wwuh2gRBKEcmqQSmJiY4Pz587z11lucPn0aXdc5cOAAiUSCl156ibGxMc6cOQPAkSNHOH78
      OAcOHCCbzXLw4MGlbzp5sqT+1O7d8KjXa011BFiGhoYGwuEwmUyGffv2YZ1LVKfrOg899BDJ
      ZJLGxkZaWlrKWSnz+fyG5SJeCXV1dUSjUURRpLe3l127dhEOhxkeHqZQKGA2m8udkslkwjAM
      ampqMJlMV3eY9zRBIQ6t71t7R5cNpjoJnuO9uiw4PDxMd3c3jY2N5b2J/v5+mpubGR8fp7Gx
      kd7eXlpbW1EUBVmWGR0dpbm5md7eXu666y6Cwcuy3BsGzCdxvQFG9M2bBBsGE6OjBBrqGent
      pb61HZtJqgrAJjEfmVsUxSvqW1HvJDsLM2dLJif2ANe7yrSpAhAbH0d0SaSLTgwlU06SV2lz
      gRs5Mty1sKL6GjpCZhpMNgyLZ9lTBSWDePG74GlBa7znusomnfk6Qqwfw9uKNp+E7zpYrq7r
      3uXNRKYxCyESM300tXRcc5K89eZmGAEW8q71NQzoeb5k+i1ZYNe/A2/L1c9PRiDaC4UkcvN9
      1+cn4ayFxDCCsxZZkq5bzaq4fYBKNoW4WXjX+qoFOPznl6IqNN5dMny7GoZecoO0hy45rl8r
      ulYyNrS4QLx+tawaGKvK0iRG4PjfQuT8lZ9Jpks9vii/+3KnIEJ45/U3fig1ept3TRr/u37V
      un/De5gLFy6UDecMw2B4ePiKc3K53KL/FUUhHo8TjUaXjMqQyWTKf+fzeXRdX+NSLyDWV0ri
      t5QACCJ0/Sjs/km47RdLDuXvQarGcNdBKpXixIkTeL1eVFWlp6ennHtqbGyMhoYGzp07R2tr
      KzabjXg8zpYtW3j77bdJJpO0trbidDqx2WxMTk7i9XpJpVLlhG7ZbJaWlpYrkgWuGY13g8UD
      gavsWkvmRQ0/l8thtV7papnJZBbtfaRSKWZmZmhtba34d73pSfJuZKamprDZbDz//PPs27eP
      7du388wzz3DHHXfQ0tJSth96/vnnaW9vZ+/evQiCgCRJZavRedOJixcvsmfPHmw2Gy+88AL7
      9u1b//DlsgXq9q749IGBAWRZxjAMfD4fqVSK2dlZDMPA4/EQiURobm5mcHAQm81Ga2vrOhZ+
      bagaw81xLZPgbDaL2WwuZ1uRJIl8Po/JZEKSJFRVLasw85tQgiCgLcjgPp/YT1XVsv2OqqoI
      glA+fy160RdeeIGWlhaamprI5XLE43GsViuFQoFgMMjY2BgdHR08/fTT3HHHHZw/f55HH700
      6U2n0xw6dIhYLEYul8PlcmG32zl37hx33XUXsiyXR4d5A7vHH3+8IpaWK24V6L0iADcSzz33
      HIFAAEEQmJqaQpIkXC4XqqoyMzNDU1MTW7dupa+vj6mpKerq6rjzzjvL12uaVp6zzAvlvMBf
      nnZV1/VyMotKUIEqSgCgwnYd51grAZjPvnLvvffy2muv4fF4GBoaIhwOE41GefDBBxkcHGRg
      YACXy4WmaTidTuLxOB/+8IfXoCZLMx97/9ixY9TW1pbtmIaHh6mrq8Nms5XNqLPZLBaLZdOT
      Z6wVFSUAN8M+wNmzZ9mxYwfHjh37/9s7t582rjSA/+zxfTy+4jFXk5BgQkkTJVmxqdq0Clul
      L420fd23fe0/s8/7B6y2Xe1TKq2aiqgPTWk2UYgKBDDXGJuLjbnazIyvsw+OZwPNBUhioPgn
      IY0vnItnzjnf+c53YXl5maamJubn54GqB1ltJs3lctjtdkKhEH6/H7+/fmbF++2vruvcvXuX
      q1evMjQ0xBdffMH4+DjLy8tEIhE8Hg+xWIybN2+iqir37t3jwoULjI+P09vby+zsLLdv3z7S
      leDEJck7CHfu3GFpaQmr1UqpVGJubo6VlRXMZjOpVIpHjx7h8XhYX19ne3ubyclJwz0wkUiQ
      z+dZWFjAZrMRj8fRNA1BECgUCsTjceO7g4ODKIpi2NO/inQ6TTweZ2trC7/fjyzLFItFPv74
      YywWCzabjebmZgqFAu3t7bhcLnw+Hz6f7708JKlUing8TiKRIJlMEgqF+PHHH1EUhYcPH9Lc
      3My9e/fo7u5meHgYRVEYHh4mn88zNjZGKBQyNu21dKY1X+muri7y+TyS8af+8gAACT1JREFU
      JOHz+YyJLRAI0NTUZGSm7OrqOtIBcKSmEO+bc+fOsb6+zg8//EBHRweiKLK4uGhkFG9paWFo
      aAiz2Yzf78fpdBo5smqZ1h8+fIgkSUQiEdLptOETbLVaKRaLmEwm+vr6mJiY4PLly9WTyuxS
      NSGbY7eNjCzLyPLuQFlnzpwB4NKHF6tx891eQqFQXX6fcDhMJpMxkkTXEok/ePCAL7/8kjt3
      7pDL5SgUCiQSCTRNI5fLMTc3RywWo7Ozk3Q6jSAItLW1kcvl6OrqIpPJkEwmKRaLqKrK9vY2
      LpeLTCaD1WolnU4jy/JvNEGFQoFvv/2WGzduEAqFUFWVfD7P5uYmZ8+eZWFhAVmW2djYQBRF
      ZmZmkGWZzs5OBgcH+fzzz7l79y6SJCGKIk6nk7a2NhRFYWdnxzDnTqVS+/JfPvEi0JMnT2ht
      bTXyBj979oz+/n4jd67L5TLcAQVBwOv1EggEGB0dpaenB6fTycjICC0tLXg8HuNmmEwmQqEQ
      uq4jCIKxqpw90wmj38BarBq38tJf9t/YXKoa9Th6+0Dqx7chmUwyOjpq+Cvb7XbDbXNycpLr
      16+TSqUol8tUKhUKhQLZbBZZlnE6nQQCgV2BpN6WcrnM8PAwsViMrq7q6XLtEZycnMRkMtHV
      1YXb7TYci2r3uLW1lStXrvD9998TjUaZn59nfn6evr4+LBYLFouFcrnM2toaCwsLfP3114Y2
      7tjsAeCEb4JLeXjwNygq1fiYV/66/0oq5arBmDcCVueujyYmJpBlmUKhgKqqxkplNpsZGRlB
      kiRkWcZisSBJEqqqGmJFLWrD4OAgHR0dXLp06aXVv84cul7WsJVKhUePHnH+/Hmmp6dpa2uj
      VCoxMjLCwMAAY2Nj9Pb2IggCqVQKq9VKJpMhEokwMzNDf38/iqLgdrvJZDLMz88TDocpl8vG
      qprNZllaWuLatWuGivnUDYByucz9+/f57LPPSCQSzM7OEg6H0TQNRVGM5XloaIhoNMrjx4+J
      RqMUCoXXx/LR9aqt+uo4RD4BqfWdtPfp06esrq4a1rKCIOByuZAkCY/HQzwex2w2k8lk2Nra
      oqOjw3DDnJmZYWBgAIfDQSwW49atW2+s7/eu9n2RU+kULwiC4clUqVTQNI25uTlsNhuiKLK5
      uWlEbtM0jZ2dHQKBACsrK68v2GSqGn0dJrjsa4hEIkQiESqVCslk0og+J4oiT5484dy5c9jt
      dpLJJKIoEgwGDVn4o48+MmT9np6ed9quevHLL7/gdDpZX18nGo2iaRorKyu43W5UVcVqtWKx
      WOju7uann34iGAySTqfp7u4mmUwyMDBwqHp/twOgVCqxsLCApmm43W4cDgdnzpxhaWkJp9OJ
      yWQiFosRj8fp7OzE5/ORyWRIJBL09PTUfXaUpP/nTvN6d2+sr127Zly/uLH76qvdUZlPst7e
      4/GgaRqBQACfz0c6nSabzeJ0Oo0zCbvdjiiKhMNh+vr6+O6773C73W9lMlIXEUivFBmfmOWD
      D3qMcIL1OiJ/VV21btfk6Pchlpkz45DfotLaX40qvQ8WFhaYmppiYGCAX3/9lUqlwurqKtFo
      lOnpafr7+42oddlsFpPJRDabJRKJHCgUy3Hah+m6zs8//4zb7WZ5eZnm5mY8Hg+JRIKWlhY0
      TWNtbY1wOIwoilitVsxmM+Pj43g8HiqVyq5T6728rq91meZMZiuBQHVWq8m49RoA+63ncG3S
      IX4fVobB017V7tSiJFSKMP0fKO5g9neBe3+zVFNTE6Ojo5jNZoLBIIlEwohDKggCuq7T2trK
      xsYGiqJQKpVob29HUZQDtb+e92A/fPrpp8a1ruuYTKbfDOi9k1ZbW9u+yn5dX+syACrlPNmt
      LZxuL153VftxHGxE9nLgNmWXYf4eoFcTR0it0PHcH9Zsreat1TarCTT2WXY6ncbv9zM1NUUu
      l8Pr9e7SZCSTSbLZLIuLiwSDQQRBYHt7m87OzgO3v+73YG4WHv4XfD64+SfYY0P0pna9TXtf
      WeZJPwd4VxxKK7K9WNXr1+i6BZ2fvJP2vEp0e1fi45Fogf75D1CV6vUfr0Pfh3Wp9ti5RB7H
      2f9QSC0QuQE2qXoo1nrtzf+zl3KxmtF87JuqH+xzXvWQHyex5cC8uLn3vD7KRL1orADPOfSM
      +DbpQKEqRj3+e7WMC3+GlqsHL+MQHMkKoGkwPVUVgcxmyKxCTy88j7j3vjiV5wB1w2Tat4bn
      pbiCEL5Unf1PeJzNN+JwwIeXoJCHf/+rOiDKZbj6hyNrUsMn+KgRbHDhuT7/tPwsggUCAVhd
      hcDRppBqiEDPOU2mAXAM+lsqQbFYXRXe84R4rESgxgrQAACLpfp3xNRdpfB7igrR4ORzJAky
      GitAg+PCCVYqN2jw9hyJCNSgwXGhsQI0ONUciRYI2BUdrUbNCvBVvOrzve8f5HXtuqaefVve
      1If9fne/fX3Zey/r38uu69nfw9zbg/Z17+v93Nsj0UMdFzv0F6lFTDgtnKb+vq6vR+IT3KDB
      ceHoTyLqSLmoEZtJ8EFvN4vxWVa38oh2nZJuoVTQkPwysiQwMbeEKDrR1Dwul41CReDihaNJ
      fH1YsptrrG1rFHY20K0i3R0hRiZmsNsdqIqK6HGjqnkuXuxjLjaGbrGh5VTsDjuaptB+/iJN
      0svt9Y8Tul5h7OkEnc1B5hKL2EUfiqpy9XIf0+NPqVgdFHJbaMUygtXJlSsXmZ0cp2S2U1a3
      TtcmWLA6CPiqMW7KWPBLTgSHiMOiI/mboFKkVCwSDodR8iVCfomKxYnoOHnzhOQL4rCasbnc
      2ATQy0UC4RbUnRwtchC1CAGvSEUHm0vCZirhDYbRlBytzTL5wm+TdxxHTCYzTU0B8vki7a0h
      cnmdgMeNroPdJWETKngDMsV8kZDXTRmwOdzYBZD8TadLBCrlFWafJXA6XQSbAmR38ritOiXB
      SUnZwuawU8KGmtsmHAqwupHF67KilgWCPunNFRwjNjIpMtsqIZ8bk8WGli+hF1WCskw6lUFu
      8rK2pYJexGkVMNkltO01vKEwmZUULW2tmE/AgaWul5idmsUfbkbN7dAs+1ndVDBVSrhsZnje
      L8nnZ2N7B0Ev43JYKQsuijsbp2sANGiwl1MlAjVosJfGAGhwqvkfYuL87IHiY44AAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='j2d2 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='j2q' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='my sales' width='192'>
      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
      fzs5QBBKPL+jAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='124' name='o2j' width='192'>
      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
    </thumbnail>
    <thumbnail height='144' name='q2j' width='192'>
      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
      gaL5/2uxJgMRYbkiAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
