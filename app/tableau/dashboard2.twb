<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.1119.0945                               -->
<workbook original-version='18.1' source-build='2018.2.4 (20182.18.1119.0945)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Contract_views' inline='true' name='federated.169bz8i1u6plju1ayyigc0milosa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Contract_views' name='textscan.0qf5uuw15w5i581apyy971g5s4zv'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='Contract_views.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0qf5uuw15w5i581apyy971g5s4zv' name='Contract_views.csv' table='[Contract_views#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='ship_name' ordinal='0' />
            <column datatype='real' name='contract_price_min' ordinal='1' />
            <column datatype='real' name='contract_price_jita_p5' ordinal='2' />
            <column datatype='real' name='margin_contract' ordinal='3' />
            <column datatype='string' name='title' ordinal='4' />
            <column datatype='string' name='title - Split 1' ordinal='5' />
            <column datatype='integer' name='issuer_id' ordinal='6' />
            <column datatype='integer' name='location_id' ordinal='7' />
            <column datatype='integer' name='number of Contracts' ordinal='8' />
            <column datatype='integer' name='type_id' ordinal='9' />
            <column datatype='string' name='group_name' ordinal='10' />
            <column datatype='string' name='location_name' ordinal='11' />
            <column datatype='integer' name='system_id' ordinal='12' />
            <column datatype='string' name='pos_type' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
            <column datatype='datetime' name='last_update' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ship_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ship_name]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>ship_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contract_price_min</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contract_price_min]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>contract_price_min</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>contract_price_jita_p5</remote-name>
            <remote-type>5</remote-type>
            <local-name>[contract_price_jita_p5]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>contract_price_jita_p5</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_contract</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_contract]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>margin_contract</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title - Split 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title - Split 1]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>title - Split 1</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>issuer_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[issuer_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>issuer_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[location_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>location_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>number of Contracts</remote-name>
            <remote-type>20</remote-type>
            <local-name>[number of Contracts]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>number of Contracts</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location_name]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>location_name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>system_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[system_id]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>system_id</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pos_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pos_type]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>pos_type</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>last_update</remote-name>
            <remote-type>135</remote-type>
            <local-name>[last_update]</local-name>
            <parent-name>[Contract_views.csv]</parent-name>
            <remote-alias>last_update</remote-alias>
            <ordinal>15</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='CountD' caption='Contract Price Jita P5' datatype='real' name='[contract_price_jita_p5]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Issuer Id' datatype='integer' name='[issuer_id]' role='dimension' type='ordinal' />
      <column caption='Location Id' datatype='integer' name='[location_id]' role='dimension' type='ordinal' />
      <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
      <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
      <column caption='Pos Type' datatype='string' name='[pos_type]' role='dimension' type='nominal' />
      <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
      <column caption='System Id' datatype='integer' name='[system_id]' role='dimension' type='ordinal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column-instance column='[contract_price_jita_p5]' derivation='Avg' name='[avg:contract_price_jita_p5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
      <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
      <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.602778' measure-ordering='alphabetic' measure-percentage='0.397222' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:group_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Corvette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Assault Frigate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Interdictor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Combat Battlecruiser&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shuttle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Electronic Attack Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruiser&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Combat Recon Ship&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stealth Bomber&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Industrial&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Attack Battlecruiser&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logistics&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavy Assault Cruiser&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Command Destroyer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Strategic Cruiser&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Expedition Frigate&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Force Recon Ship&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Heavy Interdiction Cruiser&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Interceptor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deep Space Transport&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Command Ship&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tactical Destroyer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Battleship&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Logistics Frigate&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frigate&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Destroyer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Black Ops&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mining Barge&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='cut_orders_qrf' inline='true' name='federated.0jffld41ds8t2d11njoru04hv3mk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cut_orders_qrf' name='textscan.1k358c10kixxa51701ace1958h3p'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='cut_orders_qrf.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1k358c10kixxa51701ace1958h3p' name='cut_orders_qrf.csv' table='[cut_orders_qrf#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='cutting' ordinal='1' />
            <column datatype='real' name='qrf_price_min_sell' ordinal='2' />
            <column datatype='real' name='my_price' ordinal='3' />
            <column datatype='integer' name='qrf_volume_remain_sum_sell' ordinal='4' />
            <column datatype='string' name='group_name' ordinal='5' />
            <column datatype='string' name='cat_name' ordinal='6' />
            <column datatype='integer' name='type_id' ordinal='7' />
            <column datatype='real' name='packaged_volume' ordinal='8' />
            <column datatype='integer' name='metalevel' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cutting</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cutting]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>cutting</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qrf_price_min_sell]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>qrf_price_min_sell</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>my_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[my_price]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>my_price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_volume_remain_sum_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qrf_volume_remain_sum_sell]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>qrf_volume_remain_sum_sell</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[cut_orders_qrf.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Cutting' datatype='real' name='[cutting]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='My Price' datatype='real' name='[my_price]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.455556' measure-ordering='alphabetic' measure-percentage='0.544444' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='tad_wal_tran+ (neweden)' inline='true' name='federated.0t4qeay1w434k01gll8gp0befrpd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1q1qhtf0bw8k9c1cxxdbj08vspnb'>
            <connection authentication='username-password' class='postgres' dbname='neweden' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='postgres' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[tad_wal_tran].[type_id]' />
              <expression op='[universe_ids].[type_id]' />
            </expression>
          </clause>
          <relation connection='postgres.1q1qhtf0bw8k9c1cxxdbj08vspnb' name='tad_wal_tran' table='[public].[tad_wal_tran]' type='table' />
          <relation connection='postgres.1q1qhtf0bw8k9c1cxxdbj08vspnb' name='universe_ids' table='[public].[universe_ids]' type='table' />
        </relation>
        <cols>
          <map key='[cat_name]' value='[universe_ids].[cat_name]' />
          <map key='[category_id]' value='[universe_ids].[category_id]' />
          <map key='[client_id]' value='[tad_wal_tran].[client_id]' />
          <map key='[date]' value='[tad_wal_tran].[date]' />
          <map key='[group_id]' value='[universe_ids].[group_id]' />
          <map key='[group_name]' value='[universe_ids].[group_name]' />
          <map key='[is_buy]' value='[tad_wal_tran].[is_buy]' />
          <map key='[is_personal]' value='[tad_wal_tran].[is_personal]' />
          <map key='[journal_ref_id]' value='[tad_wal_tran].[journal_ref_id]' />
          <map key='[location_id]' value='[tad_wal_tran].[location_id]' />
          <map key='[metagroup]' value='[universe_ids].[metagroup]' />
          <map key='[metalevel]' value='[universe_ids].[metalevel]' />
          <map key='[operator]' value='[tad_wal_tran].[operator]' />
          <map key='[packaged_volume]' value='[universe_ids].[packaged_volume]' />
          <map key='[quantity]' value='[tad_wal_tran].[quantity]' />
          <map key='[techlevel]' value='[universe_ids].[techlevel]' />
          <map key='[tid]' value='[tad_wal_tran].[tid]' />
          <map key='[transaction_id]' value='[tad_wal_tran].[transaction_id]' />
          <map key='[type_id (universe_ids)]' value='[universe_ids].[type_id]' />
          <map key='[type_id]' value='[tad_wal_tran].[type_id]' />
          <map key='[type_name]' value='[universe_ids].[type_name]' />
          <map key='[unit_price]' value='[tad_wal_tran].[unit_price]' />
          <map key='[volume]' value='[universe_ids].[volume]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>operator</remote-name>
            <remote-type>3</remote-type>
            <local-name>[operator]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>operator</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>client_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[client_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>client_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_buy</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_buy]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>is_buy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_personal</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_personal]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>is_personal</remote-alias>
            <ordinal>5</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>journal_ref_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[journal_ref_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>journal_ref_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[location_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>location_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[quantity]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>quantity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transaction_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[transaction_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>transaction_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_price]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>unit_price</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tid]</local-name>
            <parent-name>[tad_wal_tran]</parent-name>
            <remote-alias>tid</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id (universe_ids)]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[group_id]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>group_id</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[category_id]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>category_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>volume</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>techlevel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[techlevel]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>techlevel</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metagroup</remote-name>
            <remote-type>5</remote-type>
            <local-name>[metagroup]</local-name>
            <parent-name>[universe_ids]</parent-name>
            <remote-alias>metagroup</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Category Id' datatype='integer' name='[category_id]' role='dimension' type='ordinal' />
      <column caption='Client Id' datatype='integer' name='[client_id]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Group Id' datatype='integer' name='[group_id]' role='dimension' type='ordinal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Is Buy' datatype='boolean' name='[is_buy]' role='dimension' type='nominal' />
      <column caption='Is Personal' datatype='boolean' name='[is_personal]' role='dimension' type='nominal' />
      <column caption='Journal Ref Id' datatype='integer' name='[journal_ref_id]' role='dimension' type='ordinal' />
      <column caption='Location Id' datatype='integer' name='[location_id]' role='dimension' type='ordinal' />
      <column caption='Metagroup' datatype='real' name='[metagroup]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='real' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='Operator' datatype='integer' name='[operator]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
      <column caption='Techlevel' datatype='real' name='[techlevel]' role='measure' type='quantitative' />
      <column caption='Tid' datatype='integer' name='[tid]' role='measure' type='quantitative' />
      <column caption='Transaction Id' datatype='integer' name='[transaction_id]' role='dimension' type='ordinal' />
      <column caption='Type Id (Universe Ids)' datatype='integer' name='[type_id (universe_ids)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <column caption='Unit Price' datatype='real' name='[unit_price]' role='measure' type='quantitative' />
      <column caption='Volume' datatype='real' name='[volume]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.560801' measure-ordering='alphabetic' measure-percentage='0.439199' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='q2j_s2b' inline='true' name='federated.0bf4zq01ej602x1fpu3ah0gozpjk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='q2j_s2b' name='textscan.1eiiyyb0gxwqm21anjtvi1tixfj7'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='q2j_s2b.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1eiiyyb0gxwqm21anjtvi1tixfj7' name='q2j_s2b.csv' table='[q2j_s2b#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='qrf_price_min_sell' ordinal='1' />
            <column datatype='integer' name='qrf_volume_remain_sum_sell' ordinal='2' />
            <column datatype='string' name='group_name' ordinal='3' />
            <column datatype='string' name='cat_name' ordinal='4' />
            <column datatype='real' name='jita_price_max_buy' ordinal='5' />
            <column datatype='real' name='ava_total_profit' ordinal='6' />
            <column datatype='integer' name='ava_volume' ordinal='7' />
            <column datatype='real' name='margin_as' ordinal='8' />
            <column datatype='integer' name='type_id' ordinal='9' />
            <column datatype='real' name='profit_as' ordinal='10' />
            <column datatype='real' name='profit_raw' ordinal='11' />
            <column datatype='integer' name='jita_volume_remain_sum_buy' ordinal='12' />
            <column datatype='real' name='packaged_volume' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qrf_price_min_sell]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>qrf_price_min_sell</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_volume_remain_sum_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qrf_volume_remain_sum_sell]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>qrf_volume_remain_sum_sell</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_max_buy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_max_buy]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>jita_price_max_buy</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_total_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ava_total_profit]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>ava_total_profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ava_volume]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>ava_volume</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_as]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>margin_as</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_as]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>profit_as</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_raw]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>profit_raw</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sum_buy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sum_buy]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>jita_volume_remain_sum_buy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[q2j_s2b.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
      <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
      <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
      <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
      <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.380544' measure-ordering='alphabetic' measure-percentage='0.619456' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='o2j_s2b' inline='true' name='federated.00z59ch1vx6htb1g6lq1v1lkt7f3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='o2j_s2b' name='textscan.0eciu4q1mc3muv1993tnl122qxay'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='o2j_s2b.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0eciu4q1mc3muv1993tnl122qxay' name='o2j_s2b.csv' table='[o2j_s2b#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='string' name='group_name' ordinal='1' />
            <column datatype='string' name='cat_name' ordinal='2' />
            <column datatype='real' name='o3_price_min_sell' ordinal='3' />
            <column datatype='real' name='jita_price_max_buy' ordinal='4' />
            <column datatype='real' name='margin_as' ordinal='5' />
            <column datatype='integer' name='ava_volume' ordinal='6' />
            <column datatype='real' name='ava_total_profit' ordinal='7' />
            <column datatype='real' name='profit_as' ordinal='8' />
            <column datatype='real' name='profit_raw' ordinal='9' />
            <column datatype='integer' name='type_id' ordinal='10' />
            <column datatype='integer' name='jita_volume_remain_sum_buy' ordinal='11' />
            <column datatype='integer' name='type_id-1' ordinal='12' />
            <column datatype='real' name='packaged_volume' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
            <column datatype='integer' name='o3_volume_remain_sell' ordinal='15' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>o3_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[o3_price_min_sell]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>o3_price_min_sell</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_max_buy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_max_buy]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>jita_price_max_buy</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>margin_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[margin_as]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>margin_as</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_volume</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ava_volume]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>ava_volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ava_total_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ava_total_profit]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>ava_total_profit</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_as</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_as]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>profit_as</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_raw</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_raw]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>profit_raw</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sum_buy</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sum_buy]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>jita_volume_remain_sum_buy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id-1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id-1]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>type_id-1</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>o3_volume_remain_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[o3_volume_remain_sell]</local-name>
            <parent-name>[o2j_s2b.csv]</parent-name>
            <remote-alias>o3_volume_remain_sell</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
      <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
      <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='O3 Price Min Sell' datatype='real' name='[o3_price_min_sell]' role='measure' type='quantitative' />
      <column caption='O3 Volume Remain Sell' datatype='integer' name='[o3_volume_remain_sell]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
      <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
      <column caption='Type Id-1' datatype='integer' name='[type_id-1]' role='dimension' type='ordinal' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.39485' measure-ordering='alphabetic' measure-percentage='0.60515' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='j2q_s2s' inline='true' name='federated.08z8cau0l8uma31f9yaz11536eoq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='j2q_s2s' name='textscan.19gf9ei04b6q3l14ku5ks16w7sij'>
            <connection class='textscan' directory='D:/Boyang/Data/Tableau' filename='j2q_s2s.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.19gf9ei04b6q3l14ku5ks16w7sij' name='j2q_s2s.csv' table='[j2q_s2s#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='string' name='type_name' ordinal='0' />
            <column datatype='real' name='qrf_price_min_sell' ordinal='1' />
            <column datatype='integer' name='qrf_volume_remain_sum_sell' ordinal='2' />
            <column datatype='string' name='group_name' ordinal='3' />
            <column datatype='string' name='cat_name' ordinal='4' />
            <column datatype='integer' name='type_id' ordinal='5' />
            <column datatype='real' name='jita_price_min_sell' ordinal='6' />
            <column datatype='real' name='est_n_sell_price' ordinal='7' />
            <column datatype='real' name='gap' ordinal='8' />
            <column datatype='real' name='gap2' ordinal='9' />
            <column datatype='real' name='est_margin' ordinal='10' />
            <column datatype='real' name='est_profit_per_week' ordinal='11' />
            <column datatype='real' name='est_profit' ordinal='12' />
            <column datatype='real' name='packaged_volume' ordinal='13' />
            <column datatype='integer' name='metalevel' ordinal='14' />
            <column datatype='integer' name='jita_volume_remain_sell' ordinal='15' />
            <column datatype='real' name='volume_per_day' ordinal='16' />
            <column datatype='real' name='lowest' ordinal='17' />
            <column datatype='string' name='type_id-1' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_name]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>type_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[qrf_price_min_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>qrf_price_min_sell</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>qrf_volume_remain_sum_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[qrf_volume_remain_sum_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>qrf_volume_remain_sum_sell</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>group_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[group_name]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>group_name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cat_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cat_name]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>cat_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[type_id]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>type_id</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_price_min_sell</remote-name>
            <remote-type>5</remote-type>
            <local-name>[jita_price_min_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>jita_price_min_sell</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_n_sell_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_n_sell_price]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_n_sell_price</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>gap</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gap2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gap2]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>gap2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_margin]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_margin</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit_per_week</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit_per_week]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_profit_per_week</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>est_profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[est_profit]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>est_profit</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>packaged_volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[packaged_volume]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>packaged_volume</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metalevel</remote-name>
            <remote-type>20</remote-type>
            <local-name>[metalevel]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>metalevel</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>jita_volume_remain_sell</remote-name>
            <remote-type>20</remote-type>
            <local-name>[jita_volume_remain_sell]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>jita_volume_remain_sell</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volume_per_day</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volume_per_day]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>volume_per_day</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lowest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lowest]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>lowest</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type_id-1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type_id-1]</local-name>
            <parent-name>[j2q_s2s.csv]</parent-name>
            <remote-alias>type_id-1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
      <column caption='Est Margin' datatype='real' name='[est_margin]' role='measure' type='quantitative' />
      <column caption='Est N Sell Price' datatype='real' name='[est_n_sell_price]' role='measure' type='quantitative' />
      <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
      <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
      <column caption='Gap2' datatype='real' name='[gap2]' role='measure' type='quantitative' />
      <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
      <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
      <column caption='Jita Price Min Sell' datatype='real' name='[jita_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Jita Volume Remain Sell' datatype='integer' name='[jita_volume_remain_sell]' role='measure' type='quantitative' />
      <column caption='Lowest' datatype='real' name='[lowest]' role='measure' type='quantitative' />
      <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
      <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
      <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
      <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
      <column caption='Type Id-1' datatype='string' name='[type_id-1]' role='dimension' type='nominal' />
      <column caption='Type Id' datatype='integer' name='[type_id]' role='dimension' type='ordinal' />
      <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
      <column caption='Volume Per Day' datatype='real' name='[volume_per_day]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.34907' measure-ordering='alphabetic' measure-percentage='0.65093' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Reino Unido&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='contracts_all'>
      <table>
        <view>
          <datasources>
            <datasource caption='Contract_views' name='federated.169bz8i1u6plju1ayyigc0milosa' />
          </datasources>
          <datasource-dependencies datasource='federated.169bz8i1u6plju1ayyigc0milosa'>
            <column-instance column='[issuer_id]' derivation='Attribute' name='[attr:issuer_id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[contract_price_jita_p5]' derivation='Avg' name='[avg:contract_price_jita_p5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Jita P5' datatype='real' name='[contract_price_jita_p5]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
            <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
            <column caption='Issuer Id' datatype='integer' name='[issuer_id]' role='dimension' type='ordinal' />
            <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_name]' derivation='None' name='[none:location_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ship_name]' derivation='None' name='[none:ship_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title - Split 1]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]'>
            <groupfilter function='level-members' level='[none:group_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]'>
            <groupfilter function='member' level='[none:location_name:nk]' member='&quot;QRFJ-Q - WC starcity&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]'>
            <groupfilter function='level-members' level='[none:metalevel:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' direction='DESC' using='[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]' />
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]'>
            <groupfilter function='level-members' level='[none:title - Split 1:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.169bz8i1u6plju1ayyigc0milosa].[attr:title:nk]' />
              <tooltip column='[federated.169bz8i1u6plju1ayyigc0milosa].[attr:issuer_id:ok]' />
              <text column='[federated.169bz8i1u6plju1ayyigc0milosa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk] / [federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk])</rows>
        <cols>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='contracts_my'>
      <table>
        <view>
          <datasources>
            <datasource caption='Contract_views' name='federated.169bz8i1u6plju1ayyigc0milosa' />
          </datasources>
          <datasource-dependencies datasource='federated.169bz8i1u6plju1ayyigc0milosa'>
            <column-instance column='[contract_price_jita_p5]' derivation='Avg' name='[avg:contract_price_jita_p5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Jita P5' datatype='real' name='[contract_price_jita_p5]' role='measure' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
            <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
            <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_name]' derivation='None' name='[none:location_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ship_name]' derivation='None' name='[none:ship_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title - Split 1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_jita_p5:qk]&quot;</bucket>
              <bucket>&quot;[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Electronic Attack Ship&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Expedition Frigate&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Force Recon Ship&quot;' />
              <groupfilter from='&quot;Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Tactical Destroyer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]'>
            <groupfilter function='member' level='[none:location_name:nk]' member='&quot;QRFJ-Q - WC starcity&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]'>
            <groupfilter from='0' function='range' level='[none:metalevel:ok]' to='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' direction='DESC' using='[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]' />
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]'>
            <groupfilter function='member' level='[none:title - Split 1:nk]' member='&quot;ArtExpress&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.169bz8i1u6plju1ayyigc0milosa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</rows>
        <cols>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='contracts_my (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Contract_views' name='federated.169bz8i1u6plju1ayyigc0milosa' />
          </datasources>
          <datasource-dependencies datasource='federated.169bz8i1u6plju1ayyigc0milosa'>
            <column-instance column='[contract_price_min]' derivation='Avg' name='[avg:contract_price_min:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_contract]' derivation='Avg' name='[avg:margin_contract:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Contract Price Min' datatype='real' name='[contract_price_min]' role='measure' type='quantitative' />
            <column caption='Group Name' datatype='string' name='[group_name]' role='dimension' type='nominal' />
            <column caption='Location Name' datatype='string' name='[location_name]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Margin Contract' datatype='real' name='[margin_contract]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='dimension' type='ordinal' />
            <column-instance column='[group_name]' derivation='None' name='[none:group_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[location_name]' derivation='None' name='[none:location_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[metalevel]' derivation='None' name='[none:metalevel:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ship_name]' derivation='None' name='[none:ship_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[title - Split 1]' derivation='None' name='[none:title - Split 1:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='integer' name='[number of Contracts]' role='measure' type='quantitative' />
            <column caption='Ship Name' datatype='string' name='[ship_name]' role='dimension' type='nominal' />
            <column-instance column='[number of Contracts]' derivation='Sum' name='[sum:number of Contracts:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title - Split 1]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Assault Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Electronic Attack Ship&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Expedition Frigate&quot;' />
              <groupfilter function='member' level='[none:group_name:nk]' member='&quot;Force Recon Ship&quot;' />
              <groupfilter from='&quot;Frigate&quot;' function='range' level='[none:group_name:nk]' to='&quot;Tactical Destroyer&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]'>
            <groupfilter function='member' level='[none:location_name:nk]' member='&quot;QRFJ-Q - WC starcity&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]'>
            <groupfilter from='0' function='range' level='[none:metalevel:ok]' to='8' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' direction='DESC' using='[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]' />
          <filter class='categorical' column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]'>
            <groupfilter function='member' level='[none:title - Split 1:nk]' member='&quot;ArtExpress&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</column>
            <column>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]' />
              <size column='[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]' />
              <text column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' />
              <lod column='[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.169bz8i1u6plju1ayyigc0milosa].[avg:margin_contract:qk]</rows>
        <cols>[federated.169bz8i1u6plju1ayyigc0milosa].[avg:contract_price_min:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='cut'>
      <table>
        <view>
          <datasources>
            <datasource caption='cut_orders_qrf' name='federated.0jffld41ds8t2d11njoru04hv3mk' />
          </datasources>
          <datasource-dependencies datasource='federated.0jffld41ds8t2d11njoru04hv3mk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[my_price]' derivation='Attribute' name='[attr:my_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Attribute' name='[attr:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Cutting' datatype='real' name='[cutting]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
            <column caption='My Price' datatype='real' name='[my_price]' role='measure' type='quantitative' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[cutting]' derivation='None' name='[none:cutting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
            <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cutting]' derivation='Sum' name='[sum:cutting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='Sum' name='[sum:metalevel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[my_price]' derivation='Sum' name='[sum:my_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[packaged_volume]' derivation='Sum' name='[sum:packaged_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Sum' name='[sum:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cutting:qk]' included-values='in-range'>
            <min>0.01</min>
          </filter>
          <computed-sort column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]' direction='DESC' using='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:cutting:qk]' />
          <slices>
            <column>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cutting:qk]</column>
            <column>[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jffld41ds8t2d11njoru04hv3mk].[Multiple Values]' />
              <lod column='[federated.0jffld41ds8t2d11njoru04hv3mk].[attr:my_price:qk]' />
              <lod column='[federated.0jffld41ds8t2d11njoru04hv3mk].[attr:qrf_price_min_sell:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk] / [federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk])</rows>
        <cols>[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='cut (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cut_orders_qrf' name='federated.0jffld41ds8t2d11njoru04hv3mk' />
          </datasources>
          <datasource-dependencies datasource='federated.0jffld41ds8t2d11njoru04hv3mk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:Number of Records:qk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='cut (3)'>
      <table>
        <view>
          <datasources>
            <datasource caption='cut_orders_qrf' name='federated.0jffld41ds8t2d11njoru04hv3mk' />
          </datasources>
          <datasource-dependencies datasource='federated.0jffld41ds8t2d11njoru04hv3mk'>
            <column caption='Cutting' datatype='real' name='[cutting]' role='measure' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[cutting]' derivation='Sum' name='[sum:cutting:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:qrf_volume_remain_sum_sell:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:cutting:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]' />
              <lod column='[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:cutting:qk]</rows>
        <cols>[federated.0jffld41ds8t2d11njoru04hv3mk].[sum:qrf_volume_remain_sum_sell:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='j2q'>
      <table>
        <view>
          <datasources>
            <datasource caption='j2q_s2s' name='federated.08z8cau0l8uma31f9yaz11536eoq' />
          </datasources>
          <datasource-dependencies datasource='federated.08z8cau0l8uma31f9yaz11536eoq'>
            <column caption='Cat Name' datatype='string' name='[cat_name]' role='dimension' type='nominal' />
            <column caption='Est Margin' datatype='real' name='[est_margin]' role='measure' type='quantitative' />
            <column caption='Est N Sell Price' datatype='real' name='[est_n_sell_price]' role='measure' type='quantitative' />
            <column caption='Est Profit' datatype='real' name='[est_profit]' role='measure' type='quantitative' />
            <column caption='Est Profit Per Week' datatype='real' name='[est_profit_per_week]' role='measure' type='quantitative' />
            <column caption='Gap' datatype='real' name='[gap]' role='measure' type='quantitative' />
            <column caption='Jita Price Min Sell' datatype='real' name='[jita_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Jita Volume Remain Sell' datatype='integer' name='[jita_volume_remain_sell]' role='measure' type='quantitative' />
            <column-instance column='[cat_name]' derivation='None' name='[none:cat_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[est_margin]' derivation='Sum' name='[sum:est_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_n_sell_price]' derivation='Sum' name='[sum:est_n_sell_price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit]' derivation='Sum' name='[sum:est_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[est_profit_per_week]' derivation='Sum' name='[sum:est_profit_per_week:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gap]' derivation='Sum' name='[sum:gap:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_min_sell]' derivation='Sum' name='[sum:jita_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_volume_remain_sell]' derivation='Sum' name='[sum:jita_volume_remain_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Sum' name='[sum:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[volume_per_day]' derivation='Sum' name='[sum:volume_per_day:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
            <column caption='Volume Per Day' datatype='real' name='[volume_per_day]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:jita_price_min_sell:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:qrf_price_min_sell:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_n_sell_price:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit_per_week:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:gap:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:volume_per_day:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:jita_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:qrf_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_n_sell_price:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit_per_week:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:gap:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:jita_volume_remain_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:qrf_volume_remain_sum_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:volume_per_day:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.08z8cau0l8uma31f9yaz11536eoq].[none:type_name:nk]' direction='DESC' using='[federated.08z8cau0l8uma31f9yaz11536eoq].[sum:est_profit_per_week:qk]' />
          <slices>
            <column>[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.08z8cau0l8uma31f9yaz11536eoq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08z8cau0l8uma31f9yaz11536eoq].[none:type_name:nk] / [federated.08z8cau0l8uma31f9yaz11536eoq].[none:cat_name:nk])</rows>
        <cols>[federated.08z8cau0l8uma31f9yaz11536eoq].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='my sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='tad_wal_tran+ (neweden)' name='federated.0t4qeay1w434k01gll8gp0befrpd' />
          </datasources>
          <datasource-dependencies datasource='federated.0t4qeay1w434k01gll8gp0befrpd'>
            <column caption='SUM([Unit Price]*[Quantity])' datatype='real' name='[Calculation_1136314490892664834]' role='measure' type='quantitative' user:unnamed='my sales'>
              <calculation class='tableau' formula='SUM([unit_price]*[quantity])' />
            </column>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Is Buy' datatype='boolean' name='[is_buy]' role='dimension' type='nominal' />
            <column-instance column='[is_buy]' derivation='None' name='[none:is_buy:nk]' pivot='key' type='nominal' />
            <column caption='Quantity' datatype='integer' name='[quantity]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Unit Price' datatype='real' name='[unit_price]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1136314490892664834]' derivation='User' name='[usr:Calculation_1136314490892664834:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0t4qeay1w434k01gll8gp0befrpd].[none:is_buy:nk]'>
            <groupfilter function='member' level='[none:is_buy:nk]' member='false' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0t4qeay1w434k01gll8gp0befrpd].[none:is_buy:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.0t4qeay1w434k01gll8gp0befrpd].[usr:Calculation_1136314490892664834:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='&lt;Computation&gt; &lt;Value&gt;' label-type='custom' probability='95' scope='per-table' value-column='[federated.0t4qeay1w434k01gll8gp0befrpd].[usr:Calculation_1136314490892664834:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0t4qeay1w434k01gll8gp0befrpd].[usr:Calculation_1136314490892664834:qk]</rows>
        <cols>[federated.0t4qeay1w434k01gll8gp0befrpd].[tdy:date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='o2j'>
      <table>
        <view>
          <datasources>
            <datasource caption='o2j_s2b' name='federated.00z59ch1vx6htb1g6lq1v1lkt7f3' />
          </datasources>
          <datasource-dependencies datasource='federated.00z59ch1vx6htb1g6lq1v1lkt7f3'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
            <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
            <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
            <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
            <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='O3 Price Min Sell' datatype='real' name='[o3_price_min_sell]' role='measure' type='quantitative' />
            <column caption='O3 Volume Remain Sell' datatype='integer' name='[o3_volume_remain_sell]' role='measure' type='quantitative' />
            <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
            <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
            <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_total_profit]' derivation='Sum' name='[sum:ava_total_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_volume]' derivation='Sum' name='[sum:ava_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_max_buy]' derivation='Sum' name='[sum:jita_price_max_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_volume_remain_sum_buy]' derivation='Sum' name='[sum:jita_volume_remain_sum_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_as]' derivation='Sum' name='[sum:margin_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='Sum' name='[sum:metalevel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[o3_price_min_sell]' derivation='Sum' name='[sum:o3_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[o3_volume_remain_sell]' derivation='Sum' name='[sum:o3_volume_remain_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[packaged_volume]' derivation='Sum' name='[sum:packaged_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_as]' derivation='Sum' name='[sum:profit_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_raw]' derivation='Sum' name='[sum:profit_raw:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:ava_total_profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:ava_volume:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:jita_price_max_buy:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:o3_price_min_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:jita_volume_remain_sum_buy:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:margin_as:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:metalevel:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:o3_volume_remain_sell:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:packaged_volume:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:profit_as:qk]&quot;</bucket>
              <bucket>&quot;[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[sum:profit_raw:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[none:type_name:nk]</rows>
        <cols>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='q2j'>
      <table>
        <view>
          <datasources>
            <datasource caption='q2j_s2b' name='federated.0bf4zq01ej602x1fpu3ah0gozpjk' />
          </datasources>
          <datasource-dependencies datasource='federated.0bf4zq01ej602x1fpu3ah0gozpjk'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Ava Total Profit' datatype='real' name='[ava_total_profit]' role='measure' type='quantitative' />
            <column caption='Ava Volume' datatype='integer' name='[ava_volume]' role='measure' type='quantitative' />
            <column caption='Jita Price Max Buy' datatype='real' name='[jita_price_max_buy]' role='measure' type='quantitative' />
            <column caption='Jita Volume Remain Sum Buy' datatype='integer' name='[jita_volume_remain_sum_buy]' role='measure' type='quantitative' />
            <column caption='Margin As' datatype='real' name='[margin_as]' role='measure' type='quantitative' />
            <column caption='Metalevel' datatype='integer' name='[metalevel]' role='measure' type='quantitative' />
            <column-instance column='[type_name]' derivation='None' name='[none:type_name:nk]' pivot='key' type='nominal' />
            <column caption='Packaged Volume' datatype='real' name='[packaged_volume]' role='measure' type='quantitative' />
            <column caption='Profit As' datatype='real' name='[profit_as]' role='measure' type='quantitative' />
            <column caption='Profit Raw' datatype='real' name='[profit_raw]' role='measure' type='quantitative' />
            <column caption='Qrf Price Min Sell' datatype='real' name='[qrf_price_min_sell]' role='measure' type='quantitative' />
            <column caption='Qrf Volume Remain Sum Sell' datatype='integer' name='[qrf_volume_remain_sum_sell]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_total_profit]' derivation='Sum' name='[sum:ava_total_profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ava_volume]' derivation='Sum' name='[sum:ava_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_price_max_buy]' derivation='Sum' name='[sum:jita_price_max_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[jita_volume_remain_sum_buy]' derivation='Sum' name='[sum:jita_volume_remain_sum_buy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[margin_as]' derivation='Sum' name='[sum:margin_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[metalevel]' derivation='Sum' name='[sum:metalevel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[packaged_volume]' derivation='Sum' name='[sum:packaged_volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_as]' derivation='Sum' name='[sum:profit_as:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_raw]' derivation='Sum' name='[sum:profit_raw:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_price_min_sell]' derivation='Sum' name='[sum:qrf_price_min_sell:qk]' pivot='key' type='quantitative' />
            <column-instance column='[qrf_volume_remain_sum_sell]' derivation='Sum' name='[sum:qrf_volume_remain_sum_sell:qk]' pivot='key' type='quantitative' />
            <column caption='Type Name' datatype='string' name='[type_name]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[none:type_name:nk]</rows>
        <cols>[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[:Measure Names]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='135'>
    <window class='worksheet' name='contracts_all'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]' type='filter' />
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]' type='filter' values='relevant' />
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:issuer_id:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='contracts_my'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:issuer_id:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='contracts_my (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]' type='filter' values='relevant' />
            <card mode='radiolist' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.169bz8i1u6plju1ayyigc0milosa].[sum:number of Contracts:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[:Measure Names]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:group_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:issuer_id:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:location_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:metalevel:ok]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:ship_name:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title - Split 1:nk]</field>
            <field>[federated.169bz8i1u6plju1ayyigc0milosa].[none:title:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='cut'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[:Measure Names]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cat_name:nk]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:cutting:qk]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='cut (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='cut (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0jffld41ds8t2d11njoru04hv3mk].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='q2j'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bf4zq01ej602x1fpu3ah0gozpjk].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='o2j'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[none:type_name:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;Rogue Drone 43-X Nexus Chip&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.00z59ch1vx6htb1g6lq1v1lkt7f3].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='j2q'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.08z8cau0l8uma31f9yaz11536eoq].[none:cat_name:nk]</field>
            <field>[federated.08z8cau0l8uma31f9yaz11536eoq].[none:type_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='my sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t4qeay1w434k01gll8gp0befrpd].[none:Calculation_1136314490892333056:qk]</field>
            <field>[federated.0t4qeay1w434k01gll8gp0befrpd].[none:is_buy:nk]</field>
            <field>[federated.0t4qeay1w434k01gll8gp0befrpd].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='contracts_all' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='contracts_my' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='contracts_my (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cut' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='cut (2)' width='123'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='cut (3)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='j2q' width='192'>
      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
      3xKg0Qt9AyseAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='my sales' width='192'>
      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
      HgWxAGIea/4/cKBSL3WGi0YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='124' name='o2j' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAeWElEQVR4nO2deVhV1f7/X1+PAoJoDjkPpBGl5UXZioAcJj0amqRwccCkpJy6KM7+tAE1
      Sc3ppnLFVEIFh8SCq2GAggdEwIOa1wlxQlOQFLsYox7u74/DcBgdAK3Oej0Pz6N77b2Gvdd7
      rbX32Z/9/r///e9//0Mg0FEavegKCAQvEiEAgU4jBCDQaYQABDqNEIBApxECEOg0QgACnUYI
      QKDTCAEIdBohAIFOIwQg0GmEAAQ6jRCAQKcRAhDoNEIAAp1GCECg0wgBCHQaIQCBTiMEINBp
      hAAEOo0QgECnEQIQ6DRCAAIdJlcIQKDD5CqFAAS6izolSQhAoKuoSUmI4//EpxEFuoyYAQQ6
      jRCAQKcRAhDoNEIAAp1GCECg0wgBCHQaIQCBTiMEINBphAAEOo0QgECnEQIQ6DRCAAKdRghA
      oNMIAQh0GiEAgU4jBCDQaYQABDqNEIBApxECEOg0QgACnabx43ZQqVTPox4CwQtBfBVCoNOI
      JZBApxECEOg0QgACnUYIQKDT1EkA6rzrxAX5MW2kLR5B6dXuk6v0xUmSkDyCKN8jh+R17+Fo
      JSHZjmRu0BlyynPlauhcRtpKSFaOvOd3hAx1XWr5NCSw1ErCV1lSyzNBzHVzxEqSsHJ0Y9q6
      51kX4FYwnpIH1Z/aXCJmS0iSxNTQe/VSnNJXKr+O6UF4SL4o6yXn6kkP8qjUL+rOw4cPiY6O
      ZvLkyXzyyScV0oqLi9m/fz9yuRwrKytWrVpVFwGks3vWp0Rhi5VZfg37XGLnujO4fzS8wtY7
      ofOZcUJizcEkksK8MQqZyRplLgDqlDVM9S9mQsgxVLEBOKQuYs7O+jxFtXD1ImdxxNoCyI3k
      i8lhtJm9j3iVitiw5YzMi0X5S8MUXaHzlaBOPc+5rnKsulVzQK6S6KN2eHv340RCMrmPK6C6
      Dp0ehEeNAvtzsmvXLk6ePMnMmTNp1apVhbSzZ89y+PBhdu/eTWRkJFlZWXURQDc8Nu1giact
      3Qyq3yMnIoD9vX0Y/4b21ltEh5/AevyHmLeSIWvlyNSJr3AgTEkukPTjfvRGeTGyiz7om+L5
      sQuZ+w5w/tkr+sTkpp7jrosbTkbAL1e5/LA3VlatkAH6xq8yeOESRlfXGRuI1AtnMB/9Lq9V
      k6ZOSSKhnzXD7QdglpBEyrPMTN08CVYF4/kc29TQTJgwgXnz5lXp/ACxsbG4u7vTsWNHjI2N
      mThxYgPeA6hTCFj3XyZOlWNUIeEKaefM6N2zfGu7Lt1ocukq6aSTdvEhFm/1LEuTdepC54yr
      pOcCSl+kd2azdK4bjlYSVo5TCAjfw2fvaZYptmPXk1IyFCp9Jd6ZvbRkCWOF45QAwvd8xnuO
      VkiSLWPXp1QZNS+evYv7qP7IADr3pHeLn1i/NIrreVV7lzrjCH4l5Uq2I1kcfY/S5ZuboxWS
      ZIXje34cKV0zpQfhoT3dl/0/nSAPiVkHIHW9K5IkIfkqgXtcuPgG7sPbVXdySUmIo2u/PrTu
      9ibmhj9x5Fh5HTWzyVWuhvowzMqDoH2+SK7rSeUAsyQJqXTUf4pljvpqKHNH2iJJElaO77Eu
      Oae8HZIvypxk1o21RfKN5fzGUUhTQylbmN0LZarVbCJyasr9+VBQUMArr7xS9v9OnTo1nADS
      d64hetBU3Kq7fpXp1JXuGb9yt9q0LrxCJlllia2Qz95O1PFjLOmv4kByCyYGRHH82NcMyQrh
      x5+1jm0lZ/b2KI4fW0J/1QGSW0wkIOo4x74eQlbIj/xcqSiLuUFMLh1ujeR8unMZNhn+vCcf
      iON7n7HnTMkVVKew5v1FpDps4HCSiqSf/oVnL4Oy5ZtHUCwqVSwBDqks+ngLl2ptfDc8g1Ws
      GQ5m3qGoVCpUvnKgNa7rV6Iwqu6Y0xyNAulv3QFzLG0hLul0hT1yjixj+dVRBMYG4+nmiyrU
      GzOGs0alQvW0o746hTXe0fT9OhqVSkVsgAOnZn9BZNkIksbWz0Lo8OlPJPna09NtNOYnIoi+
      o0m9FxvN6SEuKJo/RZn1jFqtpri4GAOD8uVKo0aNGkgAORF8vaU5kyZYaEbTx3HrBlc7vEyb
      atNuco32tC1NbN4Zk/aGyNBH3wCam76BiaEM9DvRpf1D1I/KD23e2YT2hjLQ18eA5pi+YYJm
      1y60f6jmUXXlaSHr4IiP//fEKr9nxaD7bJvsTXA6kJqIUm888yf2xFAGMsP2mHQwIjVRWb58
      Qx/TiV4MuaHkeH2vsc8nosyzxdIcQIaFpTX/VSZWWCbmdfZg1Vw5bfXrobzURJR3TrB6pA2S
      JGEz1p9z+bfI0Bqx7KavZnRPQ831bjecCcOvseeHS8A9YqMv4eJs82R9oYGQyWQ0atSIgoKC
      sm3FxcWPfxfoWbj1790czT/H0WESX2ptd5WusUb1Eaa9Ujl5Phe6aYa3OzfTefiaRDe68dvr
      Tdj3n/Mg1yyD1Ldu8kuH7qW7vhBkhu3p5zmHcZGuRMbfwqPPi6sLwPmYQ2Q8zGCW5QGtrZeI
      Of8xPUtWj+1f60G9Drgt3PCPXED/yr04HcCUV7trJxghH+fOugUxXHr3JSLuuDOvyoHPHwMD
      A65du0bXrl0BuHXrVsPMAJ08gjRTeemfZn4nVOWLnE4MGtGPhJ1bOJ2tRp19hH9tO4fjEM29
      gqXzKIr2b+X7m4VQmEbQxjBaDB9Mz8eWWs8krMcnII7LDwoBNXnnD3Pkamv69OoEZgOQF+1k
      xbbz5KlBnZfJ9YxczAbIy+tOIWnbtvKT9lOczJvcKix5fHwgkUyt4oyMWpB56RLZas10XTPp
      nEjIwG7pUa1zfJC55hkknKhlqmnWjOakcTFN055ai6iMWT9sCGPjptNkqwF1HpnnjnO+tqev
      r73L6FZ7+dfyKKjhRv55Y29vz969e7l9+zYPHjxg27ZtdRBAehAekuY5dNUbuNpp57qCf/ZT
      MWuYJZYu68kdF8AnJYtdmcUs/jWtEdvH2SDZTybGbBkbP3wBp6/HAPrcCmSasw2SZMkQn3jM
      ln2Ltzkgs2DWt8swi/kHTpYSlkOmEnSuoKzuwZ72SJI9k2PMWLbxQ83F72yLs+kRZttYMXjC
      Rq52NK2w5LNwn0Hf80tQWErYr6jlDdw7icSl2jFIrj0ltsN+sDmpcYncqem41kP50LMRuyfY
      IFlNYl9mTTtWg6w/09ZOoW3MLIZZSkgDh/OPjefIr+HpX2mdhrtbkBgHg+2f5EawfliwYAGS
      JOHs7ExISEjZv7OysnjzzTdxcnJizJgxKBQKTExMxNuggoaikLRtk5h40YNDKxW8wBVsrYhX
      IQT1T3oQHpINE6P6sPqTP27nBxEPINBxxAwg0GmEAAQ6zWN/B8jLy3se9RAIXghiBhDoNEIA
      Ap1GCECg0wgBCHQaIQCBTlNHAajJPLqKqS4K5HI5CpepBJx6gU+NboTgJfcjvkpCPH5yOX5V
      E+qjUEK85MjlFf+8Qm48dU7xfs92XMNQqV1OzoxfFMrlohddL/jtt9/Yvn07Hh4exMTEVEgr
      Kirim2++wcnJiSFDhrBnzx6Ki4sBzevPp06dYuHChfj4+JCXl1c3AeTEr2DKkjT6LN1DjFLJ
      ga0f8Urhb3XIUXPSyzpBjR36j8dQPyVKZfnf1nFdn28FboTgJfeivvVT2q6YA2t5JzcQnw0q
      nud3ASqTl5fH2rVrefnll3n//ferpCuVSm7dukVYWBjffvstCQkJnDlzBoC4uDjCw8Px9PTk
      1VdfBZ7gd4Ca+Q87Vh2m5/zvmdRb8+a5rE1fFNVGtTwpXRm3Vcm4umShq3Qdx1Zlw505WVMz
      RrtZs/Hrk6Qh8XqDlVQ7hoaGLF68GKDK6P/o0SMSExMZN24czZo1o1mzZvz973/n+PHjmJub
      Y2dnh52dXYXftp59BrjxH05mv8UAi+rCLu4R++UHuCjkJUujWWy/WFpoPH5ydxauXMQYhWZq
      nbHtbMlnUTQzgF88EO+HfPwm0jjEQrkcednodomdU11xdpIjlzvhPH4Z0b8+cys0XNrJVFdn
      nEqn+mXR/Aqob4fio5jMnhsAai5u9uBdv3iePLRV0555/iEsGq/JX/FBAGWrxJyzhCwag0Iu
      R64Yw4ZkrSNDvCosh7T/fyPEC7lfPDmqjXygKDlfFWbLpynXhakzpzHnGaaOHNVGPnJ20lzj
      MYsIv64ur5+3H6umuqCQy1GMWcX+Hzcyc4wCudwJt/kHaYiFXlFREQYGBrRv375sW48ePSgs
      LCxbBlXm2QVQkE8ebWnVuvrk9sM+ZecBJUplDHs+bMyWtf/mtlZ6S+uZbI9UEr19Kkb7P2HH
      fyplMHAhyp1TMGUofkolSuVWxnUFCgwwn+5PaKQSpTKC5ZY/82Vg4jM3A6DAwJzp/qFEKpUo
      I5Zj+fOXBCaCrKMrS+a0ZuuacG5fD+aro3Ysnz+w2kirQwsr3gNo32/kN+3D9G/+zeHoDbyT
      G0zESYA8or+awV6jSYREK1FGBOLV+ykqfWUHy75rz4KwGBYOrH6XWsttNIHAaCXKyO/4u/FZ
      7j+mOPX9M2zecZgug+SYAmSF89n6Qj4KjtRc46lGbFsURFrZEd0ZtfI7ImO2McYgnJg7jiza
      HknM7km0Px7O8ds1FvXMqNVqGjVqROPG5Qubxo0bc//+/QqhkNo8+xLIoCmGZJF9D6gigiY8
      OruVqQsSufH7Q80mU3OtGFxjOnVtgx5Ap3dwtv6KwP/cgLeeoNwmetw76MuiGee4X9qmoY+L
      7tXmBiFe49mUBjAUP+VCrPTucdB3ETPO3adyls0VC1iUOJlpc1rhvuprXq8hsm+on7LGjtjB
      9A3aNQV4idbG8ACAkyQfNcF9pyNt9ACa0rTWAJPK2DDVzxWTWiINay63C6O2O9NJD0APvVrK
      PbRQziGAJs0wG+XHBq/XkQF5pxM5eS2eky4/aO09lDtAV4AOnelurAfoYSDT1KWNHtCxEx15
      VCF2u76QyWQUFxfz6FF55o8ePaJly5YVguG1eXYBdH2D3s23kpiSw4jK4f6nAlkQos+M7REM
      bqOnWc4E1pSRGvUjaCxrDI8NU4d7B5fz6YV+fBO2AbOmMm6EeDH++lNVvNJ9xj3Cl3/KhX7f
      ELbBjKYyjUC0s5Q1NqAxd/glsxBMDJ+msIajR/daO3/tyGj8hHP/UD8l8zuHM99nG01Nu9Fc
      u8zeM9i3wZW2lY55Uc+x9PT0KCgoIDMzk+bNNX3yypUr6Ovr06hR9Q2uw1OgPnww3ZIk/yWE
      nLmPGii6e5LIxNtQWEi+YUvaNddDnZ9OQvKVSseqKShSA2run9lKyFFT7Kw6Vi3CqBnGXOHS
      5SJK41gL8/Oh9cu01ZNRdPcCSWdrDAJ8QgrRZNkWPVkRdy8kUZ6lmushc1mHF9+sGkHq8nXE
      19u3bV7DrHcah6NTyVdD0YOr/JJRcY87tzIoQk1+egKHkuvazkrlHjjDfTWo89OrlFsZmckI
      VqwbS/aqKfhGZqIGDM0t6H1mB+t/vEURQNEDriakvLDOD5rlzoABAwgJCeH3338nIyOD7777
      Disrq5qPqUuBzRVLCdZfy+JPR7PpfgEGLXvh6rsaerszqcM0Zg76AX0zB7z6VF4j3WTf7HcI
      vv87NDNjlN8qRlf31LD1IDw9/s2iyYP4lreYsWMjrm+/x4jvl+DisJ6OFi44d2wDD+vSio68
      /d4Ivl/igsP6jli4OFOaZdHlYL7c3w2fbQNp2dyKT0dNwmv5j+xb6kzLSqNv2VKhBNMpO9la
      60OZtrw7Zw4nF3gz5Fs1zczeZqDWLN3JWkGPaQsZdEifrgPGM7pHnR6vVVPuHFx2Vy23JmQm
      o/l6s5ppXlNYoR/IfLt3+WTpNRav+YBBywvAoCW95N78P+unqUvJcrSHH8qFAzUrhYVXmLKz
      5H6vGn799VemTJnCr7+WP/n4/PPPcXBwYPHixcjlcq5du4aLiwuNGzfm448/pndvzc1VYGAg
      gYHlS5G9e/c+PiKs/l+HjsdPHohJLY0UNCy/3rpKk1bdeKmpjKK7CWyY4Qczw5glvfhPlzxv
      GuS7QII/NvdjvmLu9pKHCAYdsX1/OfN1sPPDE8QEi4AYwV8Z8TKcQKcRAhDoNOKzKAKdRswA
      Ap1GCECg0wgBCHQaIQCBTlMnl8ggj3JLUe1tNVmmNjx32PNhNbah5zfyjpUvylpDmaprz7Oi
      yUuSKv69uPNSB7Q+gy9JEraKifgdyXihUWGXLl3C09OT/v37Y2Njg7+/P0VFmljNoqIi/P39
      sbKyQi6XExwcXBYLkJOTw7x588rStmzZ8lebAdoxwNasim1o+okEMqwtsXjOP3YOX6OqYBQS
      /CTGXErfevfOrVQAvtLTCr3UW+wYocssufL5KCYGl9bwCQc9pS9SPfgOZ2Vl4e/vj7e3N4mJ
      iRw4cIDr16+TnKyJJjpy5Ag3b94kMjKS3bt3ExcXx6lTpyguLmbTpk307dsXpVLJoUOHuHPn
      zl/vVYhu/azpsCmJFPXbyGUA91AlpmI3orJbpa4ix1dViwFHrejTtt9k1i68xJBVu0ges4D+
      Mo3Jn+dji/XlmYvVok2bNqxZs6bs9eaWLVvi6OhIQUEBjx49IiEhAU9PT4yNjTE2Nmbs2LEc
      O3aM11/XBHE6OzvTpEkTmjRpgpeXVwPPAOqrhM4dia1U4vq+LrksnDA1cCLDHK1KbDfd+DxS
      87pvepAH0uyI8hE8PQgPK1+U2RHMtnLiq5Ty7FO+cmLUxvMVp+OeDgxtE0eZaWJuMgkn+mHd
      3+ixdaqIlpu9ZMvIuaFcLSkoJ3ldid2qpu4ai9QnRTNizvhnuQt9qb1repAHksZuB1dJKhsx
      04M8kHyV5CSvY6xt6eidQ/K6iShsS+sXRKmJZbmdrKadVo5TCChPxFfbHDvnDEHa5yMw9bEt
      aK4YhuN/T3E2vbw9pTOKtp2qZKtgYml+9TSzNWrUqMK7/VlZWRw7doyePXtSWFiIgYEBHTp0
      KEs3NTWloKCAJk2acP/+fWJjYykuLqa4uJicnJy6C+DALO11rivry86fmpQ13kT3/ZpolUrj
      +n5qNl9E5gIFGFjMZuuBeI3t5hprTn6+mQSgm70Cs4QYjpUoID02kkwXZ2xaKRjtAoeikks6
      fApHDrXHZXjPSu6DPRkgB2WixjNRnZJEgtkApNaPq1NF7oTOZ3XhNPbFq1AlheFttJk5Wy4B
      l9i1/DB91sRq6h62HJdqQhmqnpuKy448Q6nEwnULI38P4t8p0M0zWMtPTYVK5Yu89IC0rXwW
      0oFPf0rCV66p34wTf2NlWFJJ/UKY/EWk1tKvFfK5u4lTHWOvtxF7526jopEqwB1C508mxGga
      ocdUqGLD+HzQS7Vc7RJkjWnCFW78UjmhgMObvqRoQhhJKhVJP21nqsVThbk9McXFxSiVSlau
      XIm3tzcdO3asMSQyOzubhw8fMn36dH744QcGDBiAjY0Ny5cvr/sSaPgaFb5lVymdIA9XIgFI
      JVF5hxMZI7FZXb6/WcZdoDN6d8NYOGcKZ7LzS3PSxIN1G8qIXpuIPpaLQnGX2MhMBs+wQIaM
      /mMn0H7MPg5790dx8QiHXhlBSDXLanO7weT98wTpH/fkblIc3RUf0O2xddIml5MJJ7hy9ASK
      77QbmwlY8Mqrd1m6eCbZQ+x529YeqVf1gdEVz01FOpn1or0hQEtaN+cJAu3tmL56NBozRk39
      rMevwryVDGiF4wfj6O6aQAoKjWiad8akxCO1y0gXbJcF8HM6mGufr9yTJJywxufo4BI7VWNe
      7WL82JqgfsRDetCjc+UEA0x6dCV5/QzmXx+Ena0dTn1MHp/fU1JcXExQUBBqtRo/Pz/09PSA
      mkMiW7VqRdOmTTEyMmLbtm1laVlZWQ19D9ACN/9IFlS2yLwXypJ55xiw/Se+6WmILD0ID9dr
      JYntsB/ci3XRx8g1yyAycyizSo/v5oan7Raij+Xw0sloLNz3U539mszCGturu1Dd60em0hDr
      FdpXvYY6VTM5m889yJbRVUtQfHmY104d5mjcUTZ5ryd7xDrCfZ7QE/lZMX2V7s9agPoRD2lM
      43q62rmHD3GkRR9cqhl8Xpu8i7CBKmLjIohYtoWVneeyb/2Iaq/Ts7Jv3z7atWvH0KFDKyyH
      9PX1KSgoICMjgxYtWgCQlpaGgYFBtSGRFy5caMh7ADP62UDYxk2c1nhrkpd5juPn70FBAXm0
      4eX2+sgKsziXcKaCZWi7QW9jHpfAvsOR5IwahkVZihFObsNI2fs5u5IdcHOq4bZWZoGl9QkS
      dseQwFAcyjxWa6lTBYzo29+c09tWE36zEIDCB5eJO5EOpKI8eA2Dns54zlzBP737cufURZ7G
      dLFWjIxokXmJSxq/1BoeNxrR17rcahZ1NkcCQ7jqaF1+rh4Vook6zeb0piCOmDkysFPlbPpi
      3S+BdV9FkVUIFD7g8s3aQi8LyToRxILVcZhP+6CqZzD3SIlIJqerhPuUL1j7+UheUv1M5YDY
      upCdnc3ly5dxcHCo0qkbN26MtbU1QUFBPHjwgNu3b7Nr1y5sbGwAuHnzZlkk2YULF9i8eXND
      CkBG/2lrmdI2hlnDLJGkgQz/x0bO5RtAp3fwGnWDNQpLbMf4EpXfqqJLfOuhjLA+wHr/fIYP
      rugQLOs/CvfsOM70d6zlsaYR8kF2HA0MJFM+QMtjuJY6VaKd21JW2t1lwziNO/ogVz+isgEM
      yFetZsIQSyTJEpd/PWD8x+9QuW9B1XuAJ/odwMKdGX3Ps0RhiWS/gpoenGisZn9mnoslkqUL
      63PHEaBtSHdjNx8PtkKyHMasxD6sXj+eqgN2O1xXBDAu1x9XGwnJ3oXF0dV92e8AsyQJSbLB
      1S+JHvP3s8G1ujHdAG7tYoGLPZIkYT8rgdfneGBZZT/No9iy86H0RdK+Ma+FjIwMoqKisLW1
      rXBuN2/eDICjoyNdunRBoVCU2aH26aNxNr979y4TJkzQWPvOmsWHH37453sbVJ19hKVjN9Bh
      /X4m/xHcl/+IKH2RAl4hNNizmk4v0OZP9UOY0lfCcthqfpu0ihfhnS346/GnmwEEgvrkTzUD
      CAT1jRCAQKcRNqkCnUbMAAKdRghAoNMIAQh0GiEAgU4jBCDQaermEnm23IPKyXk8MzceJfNp
      g0Xj/ZB7hTz7d+Xj/TS2RO6buVgh4SKb3avaFQn+2vz++++sWrWKwYMHY29vj4+PT4VPqYPm
      FWk/Pz9cXV3rIIC8aL6acZDW04OJVCqJ2LOEd/LjOHbr8YfG+8mR12evNB3KUOMkTmqr6MZJ
      kl4dz3jT+itG8Mdn06ZNmJiYEB4eTlRUFNbW1uzYsaPCPqdPnyY/P5/XXnutDgL4JZ3LD3vR
      v39LZICecXcc53yC6xN883/gQqXGEKHeMEHuBMmny19rvnc6GeMB/WhWj6UI/vj4+Pjg5uZG
      06ZNadKkCba2tmUBMwAPHjzg4MGDjB8/Hj09vToIoLMZbzU/TMDKI6TnV1731GaFWosjek48
      K93c8DuqsVxSXw9n0RiNC72T80dsVNUcN9W1ryW3E1PQ/GyXR0riA/qb12BhKfjLoh0OWVRU
      xMGDB+nVq1fZtoiICCwsLOjSpQtQl3sAw4HM3/IZAzI289EQBc4ffUHo2Yod9LFWqNrkxLNy
      4joe+WxjoV1LZOpTbJgTg/nqAyiVSiK+tuXMwq+IrumH6df7YXNexUk1oD6J6pYN/YQDjc6S
      kZHB4sWLefPNN3FwcADgxo0bpKeno1AoyvarU5CcrL0dH6+1Y0r+HX7+/iuWzJjLo8CAEr+v
      mqxQq+mVaZsYPxzMJu1g08ASx8m0ExzLSiFz7CDWl+1oStZdSnw4K9Mbi/6LSTkDA0nhis0Q
      TIETdWmg4E/J6dOnCQ8Px8fHh5dffhnQ3PiGhYUxcuRI9PT0yuKG6yVKVNa0HX3HTcf98HiO
      HL9djeGdthVqNZhOYfun8OUkP/YM9Gdcqf9n83dZEzaLJ3PvkdFX6snXJy4yhDP07jeDF2fY
      KXhRXL58mbi4OObNm1fBGzgtLY2IiAi+++67Cvs/+xIoMYD52xK4+kBjYZqfGsvR663o3bP0
      GyFPaIVaWhGTcSz9R1O2Lg3muhow7csADvLNVo2dJ+p87lxI5mItn+AxtBhAx6T97E/pgcXT
      uK4L/jJERUUxZMiQKsbYb7zxBj/++CNKpbLsy3AODg51mAF6SPwtegszXRdwvwAMWvZC8dkm
      ppS5vT+hFaoWbUcsYfHZCfis6M72hQP5cLkXK5YvwG3n7zxs0oyuvd2Zvax/zRm0tsHReBWr
      DD/BRzc933Sa/Px8zp07x65duyps79WrF6tXr8bQsKrJeQOZ5AkrVMGfA/EqhECn+f9C0S9R
      lB9Y9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='q2j' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
